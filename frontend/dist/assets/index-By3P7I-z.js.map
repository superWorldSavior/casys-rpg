{"version":3,"file":"index-By3P7I-z.js","sources":["../../node_modules/@mui/icons-material/CloudUpload.js","../../src/pages/Profile/index.jsx"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z\"\n}), 'CloudUpload');\nexports.default = _default;","import React, { useState } from 'react';\nimport { Typography, Container, Button, Box, Alert, Snackbar } from '@mui/material';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\n\nconst ProfilePage = () => {\n  const [uploading, setUploading] = useState(false);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n\n  const handleFileUpload = async (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    if (file.type !== 'application/pdf') {\n      setError('Please select a valid PDF file');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('pdf_files', file);\n\n    try {\n      setUploading(true);\n      setError(null);\n      \n      const response = await fetch('/api/books/upload', {\n        method: 'POST',\n        body: formData,\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData?.message || `Upload failed: ${response.status}`);\n      }\n\n      const result = await response.json();\n      setSuccessMessage(result.message || 'PDF uploaded successfully');\n      event.target.value = '';\n    } catch (error) {\n      console.error('Error uploading PDF:', error);\n      setError(error.message || 'Error uploading file');\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  return (\n    <Container>\n      <Box sx={{ mb: 4 }}>\n        <Typography \n          variant=\"h4\" \n          gutterBottom\n          sx={{ \n            fontWeight: 500,\n            color: 'primary.main',\n            mb: 3\n          }}\n        >\n          Profil\n        </Typography>\n\n        <Box sx={{ mt: 4 }}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            component=\"label\"\n            startIcon={<CloudUploadIcon />}\n            disabled={uploading}\n          >\n            {uploading ? 'Uploading...' : 'Ajouter un livre'}\n            <input\n              type=\"file\"\n              hidden\n              accept=\".pdf\"\n              onChange={handleFileUpload}\n            />\n          </Button>\n        </Box>\n\n        <Snackbar\n          open={!!successMessage}\n          autoHideDuration={6000}\n          onClose={() => setSuccessMessage('')}\n          message={successMessage}\n        />\n\n        {error && (\n          <Alert \n            severity=\"error\" \n            sx={{ mt: 3 }} \n            onClose={() => setError(null)}\n          >\n            {error}\n          </Alert>\n        )}\n      </Box>\n    </Container>\n  );\n};\n\nexport default ProfilePage;\n"],"names":["_interopRequireDefault","require$$0","CloudUpload","default_1","_createSvgIcon","require$$1","_jsxRuntime","require$$2","_default","ProfilePage","uploading","setUploading","useState","error","setError","successMessage","setSuccessMessage","jsx","Container","jsxs","Box","mb","Typography","fontWeight","color","mt","Button","CloudUploadIcon","event","file","target","files","type","formData","FormData","append","response","fetch","method","body","ok","errorData","json","Error","message","status","result","value","Snackbar","Alert"],"mappings":"0PAGIA,EAAyBC,EAC7B,OAAO,eAAeC,EAAS,aAAc,CAC3C,MAAO,EACT,CAAC,EACD,IAAeC,EAAAD,EAAA,QAAG,OACdE,EAAiBJ,EAAuBK,GAAgC,EACxEC,EAAcC,EACdC,KAAeJ,EAAe,YAA2BE,EAAY,KAAK,OAAQ,CACpF,EAAG,sLACL,CAAC,EAAG,aAAa,EACjBH,EAAAD,EAAA,QAAkBM,ECTlB,MAAMC,EAAcA,IAAM,CACxB,KAAM,CAACC,EAAWC,CAAY,EAAIC,EAAAA,SAAS,EAAK,EAC1C,CAACC,EAAOC,CAAQ,EAAIF,EAAAA,SAAS,IAAI,EACjC,CAACG,EAAgBC,CAAiB,EAAIJ,EAAAA,SAAS,EAAE,EAuCvD,OACGK,EAAAC,EAAA,CACC,SAACC,EAAAC,EAAA,CAAI,GAAI,CAAEC,GAAI,CACb,EAAA,SAAA,CAAAJ,EAACK,EACC,CAAA,QAAQ,KACR,aAAY,GACZ,GAAI,CACFC,WAAY,IACZC,MAAO,eACPH,GAAI,CAAA,EACJ,SAGJ,SAAA,EAEAJ,EAACG,GAAI,GAAI,CAAEK,GAAI,CAAA,EACb,SAAAN,EAACO,EACC,CAAA,QAAQ,YACR,MAAM,UACN,UAAU,QACV,UAAWT,EAACU,EAAe,CAAA,CAAA,EAC3B,SAAUjB,EAETA,SAAAA,CAAAA,EAAY,eAAiB,mBAC9BO,EAAC,SACC,KAAK,OACL,OAAM,GACN,OAAO,OACP,SAjEa,MAAOW,GAAU,CACxC,MAAMC,EAAOD,EAAME,OAAOC,MAAM,CAAC,EACjC,GAAI,CAACF,EAAM,OAEPA,GAAAA,EAAKG,OAAS,kBAAmB,CACnClB,EAAS,gCAAgC,EACzC,MAAA,CAGImB,MAAAA,EAAW,IAAIC,SACZC,EAAAA,OAAO,YAAaN,CAAI,EAE7B,GAAA,CACFlB,EAAa,EAAI,EACjBG,EAAS,IAAI,EAEPsB,MAAAA,EAAW,MAAMC,MAAM,oBAAqB,CAChDC,OAAQ,OACRC,KAAMN,CAAAA,CACP,EAEG,GAAA,CAACG,EAASI,GAAI,CACVC,MAAAA,EAAY,MAAML,EAASM,KAAK,EACtC,MAAM,IAAIC,OAAMF,GAAAA,YAAAA,EAAWG,UAAW,kBAAkBR,EAASS,MAAM,EAAE,CAAA,CAGrEC,MAAAA,EAAS,MAAMV,EAASM,KAAK,EACjBI,EAAAA,EAAOF,SAAW,2BAA2B,EAC/DhB,EAAME,OAAOiB,MAAQ,SACdlC,EAAO,CACNA,QAAAA,MAAM,uBAAwBA,CAAK,EAClCA,EAAAA,EAAM+B,SAAW,sBAAsB,CAAA,QACxC,CACRjC,EAAa,EAAK,CAAA,CAEtB,CA8BuC,CAAA,CAAA,CAAA,CAE/B,CACF,CAAA,EAECM,EAAA+B,EAAA,CACC,KAAM,CAAC,CAACjC,EACR,iBAAkB,IAClB,QAAS,IAAMC,EAAkB,EAAE,EACnC,QAASD,CAAe,CAAA,EAGzBF,GACCI,EAACgC,EACC,CAAA,SAAS,QACT,GAAI,CAAExB,GAAI,CAAA,EACV,QAAS,IAAMX,EAAS,IAAI,EAE3BD,SACHA,CAAA,CAAA,CAAA,CAAA,CAEJ,CACF,CAAA,CAEJ","x_google_ignoreList":[0]}