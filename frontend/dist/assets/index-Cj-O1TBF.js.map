{"version":3,"file":"index-Cj-O1TBF.js","sources":["../../node_modules/@mui/icons-material/Refresh.js","../../src/components/common/ErrorBoundary.jsx","../../src/components/common/SkeletonLoader.jsx","../../src/pages/Home/index.jsx"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4z\"\n}), 'Refresh');","import React from 'react';\nimport { Box, Typography, Button, Paper } from '@mui/material';\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false, error: null, errorInfo: null };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Log the error\n    console.error('Error caught by boundary:', error, errorInfo);\n    this.setState({ errorInfo });\n  }\n\n  handleReset = () => {\n    this.setState({ hasError: false, error: null, errorInfo: null });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            minHeight: '200px',\n            p: 3,\n          }}\n        >\n          <Paper\n            elevation={3}\n            sx={{\n              p: 4,\n              maxWidth: '600px',\n              width: '100%',\n              textAlign: 'center',\n            }}\n          >\n            <Box\n              component=\"h2\"\n              sx={{\n                fontSize: '1.5rem',\n                fontWeight: 500,\n                mb: 2,\n                color: 'error.main'\n              }}\n            >\n              Something went wrong\n            </Box>\n            <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 3 }}>\n              {this.props.fallbackMessage || 'An error occurred while rendering this component.'}\n            </Typography>\n            {process.env.NODE_ENV === 'development' && this.state.error && (\n              <Typography\n                variant=\"body2\"\n                component=\"pre\"\n                sx={{\n                  bgcolor: 'grey.100',\n                  p: 2,\n                  borderRadius: 1,\n                  overflow: 'auto',\n                  mb: 2,\n                }}\n              >\n                {this.state.error.toString()}\n              </Typography>\n            )}\n            <Button\n              variant=\"contained\"\n              startIcon={<RefreshIcon />}\n              onClick={this.handleReset}\n              sx={{ mt: 2 }}\n            >\n              Try Again\n            </Button>\n          </Paper>\n        </Box>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Skeleton,\n  Box,\n  CardActions,\n} from '@mui/material';\n\nconst SkeletonLoader = ({ count = 6 }) => (\n  <Grid container spacing={3}>\n    {[...Array(count)].map((_, index) => (\n      <Grid item xs={12} sm={6} md={4} key={`skeleton-${index}`}>\n        <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n          <Skeleton\n            variant=\"rectangular\"\n            height={200}\n            animation=\"wave\"\n            sx={{ m: 1 }}\n          />\n          <CardContent sx={{ flexGrow: 1 }}>\n            <Skeleton variant=\"text\" height={32} width=\"80%\" sx={{ mb: 1 }} />\n            <Skeleton variant=\"text\" height={24} width=\"60%\" sx={{ mb: 2 }} />\n            <Skeleton variant=\"rounded\" height={24} width=\"40%\" sx={{ mb: 1 }} />\n            <Box sx={{ mb: 2 }}>\n              <Skeleton variant=\"rounded\" height={32} width=\"100%\" />\n            </Box>\n            <Box sx={{ display: 'flex', gap: 1 }}>\n              <Skeleton variant=\"rounded\" height={32} width=\"30%\" />\n              <Skeleton variant=\"rounded\" height={32} width=\"30%\" />\n              <Skeleton variant=\"rounded\" height={32} width=\"30%\" />\n            </Box>\n          </CardContent>\n          <CardActions sx={{ p: 2, justifyContent: 'space-between' }}>\n            <Skeleton variant=\"rounded\" width={100} height={36} />\n            <Skeleton variant=\"rounded\" width={100} height={36} />\n          </CardActions>\n        </Card>\n      </Grid>\n    ))}\n  </Grid>\n);\n\nexport default SkeletonLoader;\n","import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  Container,\n  Grid,\n  Card,\n  Typography,\n  Button,\n  Box,\n  Alert,\n  CardActions,\n  Snackbar,\n  useTheme,\n  useMediaQuery,\n  Chip,\n  Stack,\n  Tooltip,\n  CardMedia,\n} from \"@mui/material\";\nimport PreviewIcon from \"@mui/icons-material/Preview\";\nimport ImageIcon from \"@mui/icons-material/Image\";\nimport ArticleIcon from \"@mui/icons-material/Article\";\nimport PDFPreview from \"../../components/features/books/PDFPreview\";\nimport ErrorBoundary from \"../../components/common/ErrorBoundary\";\nimport SkeletonLoader from \"../../components/common/SkeletonLoader\";\n\n// BookStatus Component\nconst BookStatus = ({ book }) => {\n  if (!book) return null;\n\n  return (\n    <Tooltip title={`Status: ${book.status}`}>\n      <Chip\n        label={book.status}\n        color={book.status === \"completed\" ? \"success\" : \"default\"}\n        size=\"small\"\n        sx={{ mb: 1 }}\n      />\n    </Tooltip>\n  );\n};\n\n// BookProgress Component\nconst BookProgress = ({ book }) =>\n  book && (\n    <Stack direction=\"row\" spacing={1} sx={{ mb: 1 }}>\n      <Tooltip title=\"Pages\">\n        <Chip\n          icon={<ArticleIcon />}\n          label={`${book.current_page || 0}/${book.total_pages || 0} pages`}\n          size=\"small\"\n          variant=\"outlined\"\n        />\n      </Tooltip>\n      <Tooltip title=\"Images\">\n        <Chip\n          icon={<ImageIcon />}\n          label={`${book.processed_images || 0} images`}\n          size=\"small\"\n          variant=\"outlined\"\n        />\n      </Tooltip>\n      {book.processed_sections > 0 && (\n        <Tooltip title=\"Sections\">\n          <Chip\n            label={`${book.processed_sections} sections`}\n            size=\"small\"\n            variant=\"outlined\"\n          />\n        </Tooltip>\n      )}\n    </Stack>\n  );\n\nconst BookGrid = ({ books, onReadBook, onPreviewBook, theme }) => {\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  return (\n    <Box\n      sx={{\n        width: \"100%\",\n        pb: 2,\n        overflowX: isMobile ? \"auto\" : \"hidden\",\n        WebkitOverflowScrolling: \"touch\",\n        \"& .MuiGrid-container\": {\n          width: isMobile ? \"auto\" : \"100%\",\n          flexWrap: isMobile ? \"nowrap\" : \"wrap\",\n          px: isMobile ? 2 : 0,\n        },\n      }}\n    >\n      <Grid container spacing={2}>\n        {books.map((book, index) => (\n          <Grid\n            item\n            xs={8}\n            sm={6}\n            md={4}\n            lg={3}\n            key={`book-${book?.id || index}`}\n            sx={{\n              flexShrink: 0,\n              width: isMobile ? \"calc(150% - 16px)\" : \"auto\",\n            }}\n          >\n            <Card\n              sx={{\n                height: \"100%\",\n                position: \"relative\",\n                cursor: book?.status === \"completed\" ? \"pointer\" : \"default\",\n                transition: \"transform 0.2s, box-shadow 0.2s\",\n                \"&:hover\": {\n                  transform:\n                    book?.status === \"completed\" ? \"translateY(-4px)\" : \"none\",\n                  boxShadow: book?.status === \"completed\" ? 6 : 1,\n                },\n              }}\n              onClick={() => book?.status === \"completed\" && onReadBook(book)}\n            >\n              <Box sx={{ position: \"relative\", pt: \"140%\" }}>\n                <CardMedia\n                  component=\"img\"\n                  image={`/api/books/${book.id}/cover`} // Utilisation de la bonne route API pour obtenir l'image de couverture\n                  alt={`Couverture de ${book.title}`}\n                  sx={{\n                    position: \"absolute\",\n                    top: 0,\n                    left: 0,\n                    width: \"100%\",\n                    height: \"100%\",\n                    objectFit: \"cover\",\n                  }}\n                />\n                <Box\n                  sx={{\n                    position: \"absolute\",\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    background:\n                      \"linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0) 100%)\",\n                    p: 2,\n                    color: \"white\",\n                  }}\n                >\n                  <Typography\n                    variant=\"h6\"\n                    sx={{\n                      fontWeight: 500,\n                      textShadow: \"1px 1px 2px rgba(0,0,0,0.5)\",\n                      overflow: \"hidden\",\n                      textOverflow: \"ellipsis\",\n                      whiteSpace: \"nowrap\",\n                    }}\n                  >\n                    {book?.title || \"Sans titre\"}\n                  </Typography>\n                </Box>\n              </Box>\n              {/* Le bouton aperçu a été retiré conformément aux spécifications */}\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n};\n\nconst HomePage = () => {\n  const [books, setBooks] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [uploading, setUploading] = useState(false);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [previewOpen, setPreviewOpen] = useState(false);\n  const [selectedBook, setSelectedBook] = useState(null);\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchBooks(); // Initial fetch\n\n    // Set up polling\n    const interval = setInterval(fetchBooks, 5000);\n\n    // Cleanup\n    return () => clearInterval(interval);\n  }, []);\n\n  const fetchBooks = async () => {\n    try {\n      setError(null);\n      setIsLoading(true);\n\n      const response = await fetch(\"/api/books\");\n\n      // Gestion silencieuse des erreurs 404 (pas de livres)\n      if (response.status === 404) {\n        setBooks([]);\n        return;\n      }\n\n      // Gestion des erreurs HTTP\n      if (!response.ok) {\n        const errorText = await response.text();\n        // Log uniquement les erreurs serveur\n        if (response.status >= 500) {\n          console.error(`Server error (${response.status}):`, errorText);\n        }\n        throw new Error(\n          `Impossible de charger la bibliothèque (${response.status})`,\n        );\n      }\n\n      let data;\n      try {\n        data = await response.json();\n      } catch (parseError) {\n        console.error(\"Invalid JSON response:\", parseError);\n        throw new Error(\"Format de réponse invalide\");\n      }\n\n      // Validation de la structure de données\n      if (!data || typeof data !== \"object\") {\n        throw new Error(\"Structure de données invalide\");\n      }\n\n      const booksData = Array.isArray(data.books) ? data.books : [];\n      \n      // Validation et initialisation des données des livres\n      const validatedBooks = booksData.map((book = {}) => {\n        // Vérification des champs requis\n        if (!book.id && !book.filename) {\n          console.warn(\"Book missing required identifier:\", book);\n          return null;\n        }\n\n        return {\n          id: book.id || book.filename,\n          title: book.title || \"Sans titre\",\n          author: book.author || \"Auteur inconnu\",\n          filename: book.filename || \"\",\n          uploadDate: book.uploadDate || new Date().toISOString(),\n          status: book.status || \"pending\",\n          current_page: parseInt(book.current_page, 10) || 0,\n          total_pages: parseInt(book.total_pages, 10) || 0,\n          processed_sections: parseInt(book.processed_sections, 10) || 0,\n          processed_images: parseInt(book.processed_images, 10) || 0,\n          error_message: book.error_message || null,\n          ...book,\n        };\n      }).filter(Boolean); // Filtrer les entrées invalides\n\n      setBooks(validatedBooks);\n    } catch (error) {\n      // Log uniquement les erreurs inattendues\n      if (!(error instanceof TypeError || error instanceof SyntaxError)) {\n        console.error(\"Unexpected error fetching books:\", error);\n      }\n      setError(error.message);\n      setBooks([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleFileUpload = async (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    if (file.type !== \"application/pdf\") {\n      setError(\"Please select a valid PDF file\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"pdf_files\", file);\n\n    try {\n      setUploading(true);\n      setError(null);\n\n      const response = await fetch(\"/api/books/upload\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData?.message || `Upload failed: ${response.status}`,\n        );\n      }\n\n      const result = await response.json();\n      setSuccessMessage(result.message || \"PDF uploaded successfully\");\n      event.target.value = \"\";\n      fetchBooks(); // Refresh the book list\n    } catch (error) {\n      console.error(\"Error uploading PDF:\", error);\n      setError(error.message || \"Error uploading file\");\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  const handleReadBook = (book) => {\n    if (book?.status !== \"completed\") {\n      setError(\"This book is not ready for reading yet\");\n      return;\n    }\n    navigate(`/books/${book.id}`);  // Redirection vers la page de détails\n  };\n\n  const handlePreviewBook = (book) => {\n    if (book?.status !== \"completed\") {\n      setError(\"This book is not ready for preview yet\");\n      return;\n    }\n    setSelectedBook(book);\n    setPreviewOpen(true);\n  };\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n      <Box\n        sx={{\n          mb: 4,\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          flexWrap: \"wrap\",\n          gap: 2,\n          p: 2,\n          borderRadius: 2,\n          bgcolor: \"background.paper\",\n        }}\n      >\n        <Box>\n          <Typography\n            variant={isMobile ? \"h5\" : \"h4\"}\n            sx={{\n              fontWeight: 500,\n              color: \"primary.main\",\n              mb: 2,\n            }}\n          >\n            Bibliothèque\n          </Typography>\n        </Box>\n\n        <Box\n          sx={{\n            display: \"flex\",\n            gap: 2,\n            flexWrap: \"wrap\",\n          }}\n        >\n          {/* Le bouton \"Ajouter un livre\" a été déplacé vers la page profil */}\n        </Box>\n      </Box>\n\n      <Snackbar\n        open={!!successMessage}\n        autoHideDuration={6000}\n        onClose={() => setSuccessMessage(\"\")}\n        message={successMessage}\n      />\n\n      {error && (\n        <Alert\n          severity=\"error\"\n          sx={{ mb: 3 }}\n          onClose={() => setError(null)}\n          action={\n            <Button color=\"inherit\" size=\"small\" onClick={fetchBooks}>\n              Retry\n            </Button>\n          }\n        >\n          {error}\n        </Alert>\n      )}\n\n      {isLoading ? (\n        <ErrorBoundary fallbackMessage=\"Error displaying skeleton loader\">\n          <SkeletonLoader count={6} />\n        </ErrorBoundary>\n      ) : (\n        <>\n          {Array.isArray(books) && books.length === 0 && (\n            <Box\n              sx={{\n                textAlign: \"center\",\n                mt: 4,\n                p: 4,\n                backgroundColor: \"background.paper\",\n                borderRadius: 2,\n                border: 1,\n                borderColor: \"divider\",\n              }}\n            >\n              <Typography variant=\"h6\" color=\"text.secondary\">\n                No books in library\n              </Typography>\n              <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mt: 1 }}>\n                Start by uploading a PDF\n              </Typography>\n            </Box>\n          )}\n\n          {Array.isArray(books) && books.length > 0 && (\n            <ErrorBoundary fallbackMessage=\"Error displaying book grid\">\n              <BookGrid\n                books={books}\n                onReadBook={handleReadBook}\n                onPreviewBook={handlePreviewBook}\n                theme={theme}\n              />\n            </ErrorBoundary>\n          )}\n        </>\n      )}\n\n      {selectedBook && (\n        <ErrorBoundary fallbackMessage=\"Error displaying PDF preview\">\n          <PDFPreview\n            open={previewOpen}\n            onClose={() => {\n              setPreviewOpen(false);\n              setSelectedBook(null);\n            }}\n            pdfUrl={`/api/books/${selectedBook.filename}`}\n            bookTitle={selectedBook.title}\n          />\n        </ErrorBoundary>\n      )}\n    </Container>\n  );\n};\n\nexport default HomePage;\n"],"names":["_interopRequireDefault","require$$0","Refresh","default_1","_createSvgIcon","require$$1","_jsxRuntime","require$$2","ErrorBoundary","React","Component","constructor","props","handleReset","setState","hasError","error","errorInfo","state","getDerivedStateFromError","componentDidCatch","render","jsx","Box","display","flexDirection","alignItems","justifyContent","minHeight","p","jsxs","Paper","maxWidth","width","textAlign","fontSize","fontWeight","mb","color","Typography","fallbackMessage","process","Button","RefreshIcon","mt","children","SkeletonLoader","count","Grid","Array","map","_","index","Card","height","Skeleton","m","CardContent","flexGrow","gap","CardActions","BookGrid","books","onReadBook","onPreviewBook","theme","isMobile","useMediaQuery","breakpoints","down","pb","overflowX","WebkitOverflowScrolling","flexWrap","px","book","flexShrink","position","cursor","status","transition","transform","boxShadow","pt","CardMedia","id","title","top","left","objectFit","bottom","right","background","textShadow","overflow","textOverflow","whiteSpace","HomePage","setBooks","useState","isLoading","setIsLoading","setError","successMessage","setSuccessMessage","previewOpen","setPreviewOpen","selectedBook","setSelectedBook","useTheme","navigate","useNavigate","useEffect","fetchBooks","interval","setInterval","clearInterval","response","fetch","ok","errorText","text","console","Error","data","json","parseError","validatedBooks","isArray","filename","warn","author","uploadDate","Date","toISOString","current_page","parseInt","total_pages","processed_sections","processed_images","error_message","filter","Boolean","TypeError","SyntaxError","message","handleReadBook","handlePreviewBook","Container","py","borderRadius","bgcolor","Snackbar","Alert","length","backgroundColor","border","borderColor","PDFPreview"],"mappings":"ikBAGIA,EAAyBC,EAC7B,OAAO,eAAeC,EAAS,aAAc,CAC3C,MAAO,EACT,CAAC,EACD,IAAeC,EAAAD,EAAA,QAAG,OACdE,GAAiBJ,EAAuBK,GAAgC,EACxEC,GAAcC,EACHJ,EAAeD,EAAA,WAAOE,GAAe,YAA2BE,GAAY,KAAK,OAAQ,CACtG,EAAG,iMACL,CAAC,EAAG,SAAS,ECRb,MAAME,UAAsBC,EAAMC,SAAU,CAC1CC,YAAYC,EAAO,CACjB,MAAMA,CAAK,EAcbC,EAAAA,mBAAcA,IAAM,CAClB,KAAKC,SAAS,CAAEC,SAAU,GAAOC,MAAO,KAAMC,UAAW,IAAA,CAAM,CACjE,GAfE,KAAKC,MAAQ,CAAEH,SAAU,GAAOC,MAAO,KAAMC,UAAW,IAAK,CAAA,CAG/D,OAAOE,yBAAyBH,EAAO,CAC9B,MAAA,CAAED,SAAU,GAAMC,MAAAA,CAAM,CAAA,CAGjCI,kBAAkBJ,EAAOC,EAAW,CAE1BD,QAAAA,MAAM,4BAA6BA,EAAOC,CAAS,EAC3D,KAAKH,SAAS,CAAEG,UAAAA,CAAAA,CAAW,CAAA,CAO7BI,QAAS,CACH,OAAA,KAAKH,MAAMH,SAEXO,EAACC,GACC,GAAI,CACFC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,UAAW,QACXC,EAAG,CAAA,EAGL,SAAAC,EAACC,EACC,CAAA,UAAW,EACX,GAAI,CACFF,EAAG,EACHG,SAAU,QACVC,MAAO,OACPC,UAAW,UAGb,SAAA,CAACZ,EAAAC,EAAA,CACC,UAAU,KACV,GAAI,CACFY,SAAU,SACVC,WAAY,IACZC,GAAI,EACJC,MAAO,YAAA,EACP,SAGJ,uBAAA,IACCC,EAAW,CAAA,QAAQ,QAAQ,MAAM,iBAAiB,GAAI,CAAEF,GAAI,GAC1D,SAAA,KAAKzB,MAAM4B,iBAAmB,oDACjC,EACCC,GAeAnB,EAAAoB,EACC,CAAA,QAAQ,YACR,UAAYpB,EAAAqB,EAAA,IACZ,QAAS,KAAK9B,YACd,GAAI,CAAE+B,GAAI,CAAA,EAAI,SAGhB,WAAA,CAAA,CAAA,CAAA,CACF,CAAA,CACF,EAIG,KAAKhC,MAAMiC,QAAAA,CAEtB,CChFA,MAAMC,GAAiBA,CAAC,CAAEC,MAAAA,EAAQ,CAAE,IACjCzB,EAAA0B,EAAA,CAAK,UAAS,GAAC,QAAS,EACtB,SAAC,CAAA,GAAGC,MAAMF,CAAK,CAAC,EAAEG,IAAI,CAACC,EAAGC,IACxB9B,EAAA0B,EAAA,CAAK,KAAI,GAAC,GAAI,GAAI,GAAI,EAAG,GAAI,EAC5B,SAAClB,EAAAuB,EAAA,CAAK,GAAI,CAAEC,OAAQ,OAAQ9B,QAAS,OAAQC,cAAe,QAAS,EACnE,SAAA,CAAAH,EAACiC,GACC,QAAQ,cACR,OAAQ,IACR,UAAU,OACV,GAAI,CAAEC,EAAG,CAAA,EAAI,EAEf1B,EAAC2B,GAAY,GAAI,CAAEC,SAAU,CAC3B,EAAA,SAAA,CAAApC,EAACiC,GAAS,QAAQ,OAAO,OAAQ,GAAI,MAAM,MAAM,GAAI,CAAElB,GAAI,CAAA,EAAI,EAC/Df,EAACiC,GAAS,QAAQ,OAAO,OAAQ,GAAI,MAAM,MAAM,GAAI,CAAElB,GAAI,CAAA,EAAI,EAC/Df,EAACiC,GAAS,QAAQ,UAAU,OAAQ,GAAI,MAAM,MAAM,GAAI,CAAElB,GAAI,CAAA,EAAI,EAClEf,EAACC,GAAI,GAAI,CAAEc,GAAI,CAAE,EACf,WAACkB,EAAS,CAAA,QAAQ,UAAU,OAAQ,GAAI,MAAM,MAAA,CAAM,CACtD,CAAA,EACAzB,EAACP,GAAI,GAAI,CAAEC,QAAS,OAAQmC,IAAK,CAC/B,EAAA,SAAA,CAAArC,EAACiC,GAAS,QAAQ,UAAU,OAAQ,GAAI,MAAM,MAAK,IAClDA,EAAS,CAAA,QAAQ,UAAU,OAAQ,GAAI,MAAM,MAAK,IAClDA,EAAS,CAAA,QAAQ,UAAU,OAAQ,GAAI,MAAM,KAAK,CAAA,CAAA,CACrD,CAAA,CAAA,EACF,EACAzB,EAAC8B,GAAY,GAAI,CAAE/B,EAAG,EAAGF,eAAgB,eACvC,EAAA,SAAA,CAAAL,EAACiC,GAAS,QAAQ,UAAU,MAAO,IAAK,OAAQ,GAAG,IAClDA,EAAS,CAAA,QAAQ,UAAU,MAAO,IAAK,OAAQ,EAAG,CAAA,CAAA,CACrD,CAAA,CAAA,CACF,CAAA,CAzBoC,EAAA,YAAYH,CAAK,EA0BvD,CACD,EACH,ECiCIS,GAAWA,CAAC,CAAEC,MAAAA,EAAOC,WAAAA,EAAYC,cAAAA,EAAeC,MAAAA,CAAM,IAAM,CAChE,MAAMC,EAAWC,EAAcF,EAAMG,YAAYC,KAAK,IAAI,CAAC,EAGzD,OAAA/C,EAACC,GACC,GAAI,CACFU,MAAO,OACPqC,GAAI,EACJC,UAAWL,EAAW,OAAS,SAC/BM,wBAAyB,QACzB,uBAAwB,CACtBvC,MAAOiC,EAAW,OAAS,OAC3BO,SAAUP,EAAW,SAAW,OAChCQ,GAAIR,EAAW,EAAI,CAAA,CAEvB,EAEA,SAAC5C,EAAA0B,EAAA,CAAK,UAAS,GAAC,QAAS,EACtBc,SAAAA,EAAMZ,IAAI,CAACyB,EAAMvB,MACfJ,EACC,CAAA,KAAI,GACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EAEJ,GAAI,CACF4B,WAAY,EACZ3C,MAAOiC,EAAW,oBAAsB,MAC1C,EAEA,SAAC5C,EAAA+B,EAAA,CACC,GAAI,CACFC,OAAQ,OACRuB,SAAU,WACVC,QAAQH,GAAAA,YAAAA,EAAMI,UAAW,YAAc,UAAY,UACnDC,WAAY,kCACZ,UAAW,CACTC,WACEN,GAAAA,YAAAA,EAAMI,UAAW,YAAc,mBAAqB,OACtDG,WAAWP,GAAAA,YAAAA,EAAMI,UAAW,YAAc,EAAI,CAAA,CAElD,EACA,QAAS,KAAMJ,GAAAA,YAAAA,EAAMI,UAAW,aAAehB,EAAWY,CAAI,EAE9D,SAAC7C,EAAAP,EAAA,CAAI,GAAI,CAAEsD,SAAU,WAAYM,GAAI,MACnC,EAAA,SAAA,CAAA7D,EAAC8D,EAAA,CACC,UAAU,MACV,MAAO,cAAcT,EAAKU,EAAE,SAC5B,IAAK,iBAAiBV,EAAKW,KAAK,GAChC,GAAI,CACFT,SAAU,WACVU,IAAK,EACLC,KAAM,EACNvD,MAAO,OACPqB,OAAQ,OACRmC,UAAW,OAAA,CACb,CAAE,EAEJnE,EAACC,GACC,GAAI,CACFsD,SAAU,WACVa,OAAQ,EACRF,KAAM,EACNG,MAAO,EACPC,WACE,kEACF/D,EAAG,EACHS,MAAO,OAAA,EAGT,SAAAhB,EAACiB,EACC,CAAA,QAAQ,KACR,GAAI,CACFH,WAAY,IACZyD,WAAY,8BACZC,SAAU,SACVC,aAAc,WACdC,WAAY,QAGbrB,EAAAA,UAAAA,GAAAA,YAAAA,EAAMW,QAAS,YAClB,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CAEF,CAAA,GA7DK,SAAQX,GAAAA,YAAAA,EAAMU,KAAMjC,CAAK,EA8DhC,CACD,CAAA,CACH,CACF,CAAA,CAEJ,EAEM6C,GAAWA,IAAM,CACrB,KAAM,CAACnC,EAAOoC,CAAQ,EAAIC,EAAAA,SAAS,CAAA,CAAE,EAC/B,CAACC,EAAWC,CAAY,EAAIF,EAAAA,SAAS,EAAI,EACbA,EAAAA,SAAS,EAAK,EAChD,KAAM,CAACnF,EAAOsF,CAAQ,EAAIH,EAAAA,SAAS,IAAI,EACjC,CAACI,EAAgBC,CAAiB,EAAIL,EAAAA,SAAS,EAAE,EACjD,CAACM,EAAaC,CAAc,EAAIP,EAAAA,SAAS,EAAK,EAC9C,CAACQ,EAAcC,CAAe,EAAIT,EAAAA,SAAS,IAAI,EAC/ClC,EAAQ4C,EAAS,EACjB3C,EAAWC,EAAcF,EAAMG,YAAYC,KAAK,IAAI,CAAC,EACrDyC,EAAWC,EAAY,EAE7BC,EAAAA,UAAU,IAAM,CACHC,EAAA,EAGLC,MAAAA,EAAWC,YAAYF,EAAY,GAAI,EAGtC,MAAA,IAAMG,cAAcF,CAAQ,CACrC,EAAG,EAAE,EAEL,MAAMD,EAAa,SAAY,CACzB,GAAA,CACFX,EAAS,IAAI,EACbD,EAAa,EAAI,EAEXgB,MAAAA,EAAW,MAAMC,MAAM,YAAY,EAGrCD,GAAAA,EAAStC,SAAW,IAAK,CAC3BmB,EAAS,CAAA,CAAE,EACX,MAAA,CAIE,GAAA,CAACmB,EAASE,GAAI,CACVC,MAAAA,EAAY,MAAMH,EAASI,KAAK,EAElCJ,MAAAA,EAAStC,QAAU,KACrB2C,QAAQ1G,MAAM,iBAAiBqG,EAAStC,MAAM,KAAMyC,CAAS,EAEzD,IAAIG,MACR,0CAA0CN,EAAStC,MAAM,GAC3D,CAAA,CAGE6C,IAAAA,EACA,GAAA,CACKA,EAAA,MAAMP,EAASQ,KAAK,QACpBC,EAAY,CACX9G,cAAAA,MAAM,yBAA0B8G,CAAU,EAC5C,IAAIH,MAAM,4BAA4B,CAAA,CAI9C,GAAI,CAACC,GAAQ,OAAOA,GAAS,SACrB,MAAA,IAAID,MAAM,+BAA+B,EAMjD,MAAMI,GAHY9E,MAAM+E,QAAQJ,EAAK9D,KAAK,EAAI8D,EAAK9D,MAAQ,CAAE,GAG5BZ,IAAI,CAACyB,EAAO,CAAA,IAEvC,CAACA,EAAKU,IAAM,CAACV,EAAKsD,UACZC,QAAAA,KAAK,oCAAqCvD,CAAI,EAC/C,MAGF,CACLU,GAAIV,EAAKU,IAAMV,EAAKsD,SACpB3C,MAAOX,EAAKW,OAAS,aACrB6C,OAAQxD,EAAKwD,QAAU,iBACvBF,SAAUtD,EAAKsD,UAAY,GAC3BG,WAAYzD,EAAKyD,YAAkBC,IAAAA,KAAAA,EAAOC,YAAY,EACtDvD,OAAQJ,EAAKI,QAAU,UACvBwD,aAAcC,SAAS7D,EAAK4D,aAAc,EAAE,GAAK,EACjDE,YAAaD,SAAS7D,EAAK8D,YAAa,EAAE,GAAK,EAC/CC,mBAAoBF,SAAS7D,EAAK+D,mBAAoB,EAAE,GAAK,EAC7DC,iBAAkBH,SAAS7D,EAAKgE,iBAAkB,EAAE,GAAK,EACzDC,cAAejE,EAAKiE,eAAiB,KACrC,GAAGjE,CACL,CACD,EAAEkE,OAAOC,OAAO,EAEjB5C,EAAS6B,CAAc,QAChB/G,EAAO,CAERA,aAAiB+H,WAAa/H,aAAiBgI,aAC3ChI,QAAAA,MAAM,mCAAoCA,CAAK,EAEzDsF,EAAStF,EAAMiI,OAAO,EACtB/C,EAAS,CAAA,CAAE,CAAA,QACH,CACRG,EAAa,EAAK,CAAA,CAEtB,EA0CM6C,EAA2BvE,GAAA,CAC3BA,IAAAA,GAAAA,YAAAA,EAAMI,UAAW,YAAa,CAChCuB,EAAS,wCAAwC,EACjD,MAAA,CAEOQ,EAAA,UAAUnC,EAAKU,EAAE,EAAE,CAC9B,EAEM8D,EAA8BxE,GAAA,CAC9BA,IAAAA,GAAAA,YAAAA,EAAMI,UAAW,YAAa,CAChCuB,EAAS,wCAAwC,EACjD,MAAA,CAEFM,EAAgBjC,CAAI,EACpB+B,EAAe,EAAI,CACrB,EAEA,OACG5E,EAAAsH,EAAA,CAAU,SAAS,KAAK,GAAI,CAAEC,GAAI,CACjC,EAAA,SAAA,CAAAvH,EAACP,GACC,GAAI,CACFc,GAAI,EACJb,QAAS,OACTG,eAAgB,gBAChBD,WAAY,SACZ+C,SAAU,OACVd,IAAK,EACL9B,EAAG,EACHyH,aAAc,EACdC,QAAS,kBAGX,EAAA,SAAA,CAAAjI,EAACC,GACC,SAACD,EAAAiB,EAAA,CACC,QAAS2B,EAAW,KAAO,KAC3B,GAAI,CACF9B,WAAY,IACZE,MAAO,eACPD,GAAI,CAAA,EACJ,uBAGJ,CAAA,EACF,EAEAf,EAACC,GACC,GAAI,CACFC,QAAS,OACTmC,IAAK,EACLc,SAAU,MAAA,CAId,CAAA,CAAA,EACF,EAECnD,EAAAkI,EAAA,CACC,KAAM,CAAC,CAACjD,EACR,iBAAkB,IAClB,QAAS,IAAMC,EAAkB,EAAE,EACnC,QAASD,CAAe,CAAA,EAGzBvF,GACCM,EAACmI,EACC,CAAA,SAAS,QACT,GAAI,CAAEpH,GAAI,CAAA,EACV,QAAS,IAAMiE,EAAS,IAAI,EAC5B,OACEhF,EAACoB,EAAO,CAAA,MAAM,UAAU,KAAK,QAAQ,QAASuE,EAAW,SAAA,QAEzD,EAGDjG,SACHA,EAAA,EAGDoF,EACE9E,EAAAd,EAAA,CAAc,gBAAgB,mCAC7B,SAACc,EAAAwB,GAAA,CAAe,MAAO,CAAA,CAAE,CAC3B,CAAA,EAGGG,EAAAA,EAAAA,CAAAA,SAAAA,CAAM+E,MAAAA,QAAQlE,CAAK,GAAKA,EAAM4F,SAAW,GACxC5H,EAACP,GACC,GAAI,CACFW,UAAW,SACXU,GAAI,EACJf,EAAG,EACH8H,gBAAiB,mBACjBL,aAAc,EACdM,OAAQ,EACRC,YAAa,SAGf,EAAA,SAAA,CAAAvI,EAACiB,EAAW,CAAA,QAAQ,KAAK,MAAM,iBAAgB,SAE/C,sBAAA,IACCA,EAAW,CAAA,QAAQ,QAAQ,MAAM,iBAAiB,GAAI,CAAEK,GAAI,CAAA,EAAI,SAEjE,0BAAA,CAAA,CAAA,EACF,EAGDK,MAAM+E,QAAQlE,CAAK,GAAKA,EAAM4F,OAAS,GACrCpI,EAAAd,EAAA,CAAc,gBAAgB,6BAC7B,SAAAc,EAACuC,IACC,MAAAC,EACA,WAAYoF,EACZ,cAAeC,EACf,MAAAlF,EAAa,CAEjB,CAAA,CAAA,EAEJ,EAGD0C,GACErF,EAAAd,EAAA,CAAc,gBAAgB,+BAC7B,WAACsJ,EACC,CAAA,KAAMrD,EACN,QAAS,IAAM,CACbC,EAAe,EAAK,EACpBE,EAAgB,IAAI,CAAA,EAEtB,OAAQ,cAAcD,EAAasB,QAAQ,GAC3C,UAAWtB,EAAarB,KAAAA,CAAM,CAElC,CAAA,CAAA,EAEJ,CAEJ","x_google_ignoreList":[0]}