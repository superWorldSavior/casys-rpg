{"version":3,"file":"index-DoIPnP6M.js","sources":["../../../node_modules/comma-separated-tokens/index.js","../../../node_modules/estree-util-is-identifier-name/lib/index.js","../../../node_modules/hast-util-whitespace/lib/index.js","../../../node_modules/property-information/lib/util/schema.js","../../../node_modules/property-information/lib/util/merge.js","../../../node_modules/property-information/lib/normalize.js","../../../node_modules/property-information/lib/util/info.js","../../../node_modules/property-information/lib/util/types.js","../../../node_modules/property-information/lib/util/defined-info.js","../../../node_modules/property-information/lib/util/create.js","../../../node_modules/property-information/lib/xlink.js","../../../node_modules/property-information/lib/xml.js","../../../node_modules/property-information/lib/util/case-sensitive-transform.js","../../../node_modules/property-information/lib/util/case-insensitive-transform.js","../../../node_modules/property-information/lib/xmlns.js","../../../node_modules/property-information/lib/aria.js","../../../node_modules/property-information/lib/html.js","../../../node_modules/property-information/lib/svg.js","../../../node_modules/property-information/lib/find.js","../../../node_modules/property-information/lib/hast-to-react.js","../../../node_modules/property-information/index.js","../../../node_modules/space-separated-tokens/index.js","../../../node_modules/inline-style-parser/index.js","../../../node_modules/style-to-object/cjs/index.js","../../../node_modules/style-to-object/esm/index.mjs","../../../node_modules/unist-util-position/lib/index.js","../../../node_modules/unist-util-stringify-position/lib/index.js","../../../node_modules/vfile-message/lib/index.js","../../../node_modules/hast-util-to-jsx-runtime/lib/index.js","../../../node_modules/html-url-attributes/lib/index.js","../../../node_modules/mdast-util-to-string/lib/index.js","../../../node_modules/decode-named-character-reference/index.dom.js","../../../node_modules/micromark-util-chunked/index.js","../../../node_modules/micromark-util-combine-extensions/index.js","../../../node_modules/micromark-util-decode-numeric-character-reference/index.js","../../../node_modules/micromark-util-normalize-identifier/index.js","../../../node_modules/micromark-util-character/index.js","../../../node_modules/micromark-util-sanitize-uri/index.js","../../../node_modules/micromark-factory-space/index.js","../../../node_modules/micromark/lib/initialize/content.js","../../../node_modules/micromark/lib/initialize/document.js","../../../node_modules/micromark-util-classify-character/index.js","../../../node_modules/micromark-util-resolve-all/index.js","../../../node_modules/micromark-core-commonmark/lib/attention.js","../../../node_modules/micromark-core-commonmark/lib/autolink.js","../../../node_modules/micromark-core-commonmark/lib/blank-line.js","../../../node_modules/micromark-core-commonmark/lib/block-quote.js","../../../node_modules/micromark-core-commonmark/lib/character-escape.js","../../../node_modules/micromark-core-commonmark/lib/character-reference.js","../../../node_modules/micromark-core-commonmark/lib/code-fenced.js","../../../node_modules/micromark-core-commonmark/lib/code-indented.js","../../../node_modules/micromark-core-commonmark/lib/code-text.js","../../../node_modules/micromark-util-subtokenize/lib/splice-buffer.js","../../../node_modules/micromark-util-subtokenize/index.js","../../../node_modules/micromark-core-commonmark/lib/content.js","../../../node_modules/micromark-factory-destination/index.js","../../../node_modules/micromark-factory-label/index.js","../../../node_modules/micromark-factory-title/index.js","../../../node_modules/micromark-factory-whitespace/index.js","../../../node_modules/micromark-core-commonmark/lib/definition.js","../../../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../../../node_modules/micromark-core-commonmark/lib/heading-atx.js","../../../node_modules/micromark-util-html-tag-name/index.js","../../../node_modules/micromark-core-commonmark/lib/html-flow.js","../../../node_modules/micromark-core-commonmark/lib/html-text.js","../../../node_modules/micromark-core-commonmark/lib/label-end.js","../../../node_modules/micromark-core-commonmark/lib/label-start-image.js","../../../node_modules/micromark-core-commonmark/lib/label-start-link.js","../../../node_modules/micromark-core-commonmark/lib/line-ending.js","../../../node_modules/micromark-core-commonmark/lib/thematic-break.js","../../../node_modules/micromark-core-commonmark/lib/list.js","../../../node_modules/micromark-core-commonmark/lib/setext-underline.js","../../../node_modules/micromark/lib/initialize/flow.js","../../../node_modules/micromark/lib/initialize/text.js","../../../node_modules/micromark/lib/constructs.js","../../../node_modules/micromark/lib/create-tokenizer.js","../../../node_modules/micromark/lib/parse.js","../../../node_modules/micromark/lib/postprocess.js","../../../node_modules/micromark/lib/preprocess.js","../../../node_modules/micromark-util-decode-string/index.js","../../../node_modules/mdast-util-from-markdown/lib/index.js","../../../node_modules/remark-parse/lib/index.js","../../../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../../../node_modules/mdast-util-to-hast/lib/handlers/break.js","../../../node_modules/mdast-util-to-hast/lib/handlers/code.js","../../../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../../../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../../../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../../../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../../../node_modules/mdast-util-to-hast/lib/handlers/html.js","../../../node_modules/mdast-util-to-hast/lib/revert.js","../../../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../../../node_modules/mdast-util-to-hast/lib/handlers/image.js","../../../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../../../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../../../node_modules/mdast-util-to-hast/lib/handlers/link.js","../../../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../../../node_modules/mdast-util-to-hast/lib/handlers/list.js","../../../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../../../node_modules/mdast-util-to-hast/lib/handlers/root.js","../../../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../../../node_modules/mdast-util-to-hast/lib/handlers/table.js","../../../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../../../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../../../node_modules/trim-lines/index.js","../../../node_modules/mdast-util-to-hast/lib/handlers/text.js","../../../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../../../node_modules/mdast-util-to-hast/lib/handlers/index.js","../../../node_modules/@ungap/structured-clone/esm/types.js","../../../node_modules/@ungap/structured-clone/esm/deserialize.js","../../../node_modules/@ungap/structured-clone/esm/serialize.js","../../../node_modules/@ungap/structured-clone/esm/index.js","../../../node_modules/mdast-util-to-hast/lib/footer.js","../../../node_modules/unist-util-is/lib/index.js","../../../node_modules/unist-util-visit-parents/lib/index.js","../../../node_modules/unist-util-visit/lib/index.js","../../../node_modules/mdast-util-to-hast/lib/state.js","../../../node_modules/mdast-util-to-hast/lib/index.js","../../../node_modules/remark-rehype/lib/index.js","../../../node_modules/bail/index.js","../../../node_modules/extend/index.js","../../../node_modules/is-plain-obj/index.js","../../../node_modules/trough/lib/index.js","../../../node_modules/vfile/lib/minpath.browser.js","../../../node_modules/vfile/lib/minproc.browser.js","../../../node_modules/vfile/lib/minurl.shared.js","../../../node_modules/vfile/lib/minurl.browser.js","../../../node_modules/vfile/lib/index.js","../../../node_modules/unified/lib/callable-instance.js","../../../node_modules/unified/lib/index.js","../../../node_modules/react-markdown/lib/index.js","../../../node_modules/ccount/index.js","../../../node_modules/escape-string-regexp/index.js","../../../node_modules/mdast-util-find-and-replace/lib/index.js","../../../node_modules/mdast-util-gfm-autolink-literal/lib/index.js","../../../node_modules/mdast-util-gfm-footnote/lib/index.js","../../../node_modules/mdast-util-gfm-strikethrough/lib/index.js","../../../node_modules/markdown-table/index.js","../../../node_modules/zwitch/index.js","../../../node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","../../../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../../../node_modules/mdast-util-to-markdown/lib/handle/break.js","../../../node_modules/longest-streak/index.js","../../../node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","../../../node_modules/mdast-util-to-markdown/lib/util/check-fence.js","../../../node_modules/mdast-util-to-markdown/lib/handle/code.js","../../../node_modules/mdast-util-to-markdown/lib/util/check-quote.js","../../../node_modules/mdast-util-to-markdown/lib/handle/definition.js","../../../node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","../../../node_modules/mdast-util-to-markdown/lib/util/encode-character-reference.js","../../../node_modules/mdast-util-to-markdown/lib/util/encode-info.js","../../../node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","../../../node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","../../../node_modules/mdast-util-to-markdown/lib/handle/heading.js","../../../node_modules/mdast-util-to-markdown/lib/handle/html.js","../../../node_modules/mdast-util-to-markdown/lib/handle/image.js","../../../node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","../../../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../../../node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","../../../node_modules/mdast-util-to-markdown/lib/handle/link.js","../../../node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","../../../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../../../node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","../../../node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","../../../node_modules/mdast-util-to-markdown/lib/util/check-rule.js","../../../node_modules/mdast-util-to-markdown/lib/handle/list.js","../../../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../../../node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../../../node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","../../../node_modules/mdast-util-phrasing/lib/index.js","../../../node_modules/mdast-util-to-markdown/lib/handle/root.js","../../../node_modules/mdast-util-to-markdown/lib/util/check-strong.js","../../../node_modules/mdast-util-to-markdown/lib/handle/strong.js","../../../node_modules/mdast-util-to-markdown/lib/handle/text.js","../../../node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","../../../node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","../../../node_modules/mdast-util-to-markdown/lib/handle/index.js","../../../node_modules/mdast-util-gfm-table/lib/index.js","../../../node_modules/mdast-util-gfm-task-list-item/lib/index.js","../../../node_modules/mdast-util-gfm/lib/index.js","../../../node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","../../../node_modules/micromark-extension-gfm-footnote/lib/syntax.js","../../../node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","../../../node_modules/micromark-extension-gfm-table/lib/edit-map.js","../../../node_modules/micromark-extension-gfm-table/lib/infer.js","../../../node_modules/micromark-extension-gfm-table/lib/syntax.js","../../../node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","../../../node_modules/micromark-extension-gfm/index.js","../../../node_modules/remark-gfm/lib/index.js","../../../node_modules/hast-util-parse-selector/lib/index.js","../../../node_modules/hastscript/lib/create-h.js","../../../node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","../../../node_modules/hastscript/lib/index.js","../../../node_modules/vfile-location/lib/index.js","../../../node_modules/web-namespaces/index.js","../../../node_modules/hast-util-from-parse5/lib/index.js","../../../node_modules/hast-util-to-parse5/lib/index.js","../../../node_modules/html-void-elements/index.js","../../../node_modules/parse5/dist/common/unicode.js","../../../node_modules/parse5/dist/common/error-codes.js","../../../node_modules/parse5/dist/tokenizer/preprocessor.js","../../../node_modules/parse5/dist/common/token.js","../../../node_modules/entities/lib/esm/generated/decode-data-html.js","../../../node_modules/entities/lib/esm/generated/decode-data-xml.js","../../../node_modules/entities/lib/esm/decode_codepoint.js","../../../node_modules/entities/lib/esm/decode.js","../../../node_modules/parse5/dist/common/html.js","../../../node_modules/parse5/dist/tokenizer/index.js","../../../node_modules/parse5/dist/parser/open-element-stack.js","../../../node_modules/parse5/dist/parser/formatting-element-list.js","../../../node_modules/parse5/dist/tree-adapters/default.js","../../../node_modules/parse5/dist/common/doctype.js","../../../node_modules/parse5/dist/common/foreign-content.js","../../../node_modules/parse5/dist/parser/index.js","../../../node_modules/parse5/dist/serializer/index.js","../../../node_modules/hast-util-raw/lib/index.js","../../../node_modules/rehype-raw/lib/index.js","../../src/components/features/reader/TextDisplay.jsx","../../node_modules/@mui/icons-material/Pause.js","../../node_modules/@mui/icons-material/PlayArrow.js","../../src/components/features/reader/NavigationControls.jsx","../../node_modules/@mui/icons-material/Send.js","../../src/components/features/reader/CommandInput.jsx","../../node_modules/@mui/icons-material/Speed.js","../../src/components/features/reader/SpeedControl.jsx","../../src/components/features/reader/ThemeControl.jsx","../../src/services/storage.js","../../src/pages/Reader/index.jsx"],"sourcesContent":["/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = StyleToObject;\nvar inline_style_parser_1 = __importDefault(require(\"inline-style-parser\"));\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nfunction StyleToObject(style, iterator) {\n    var styleObject = null;\n    if (!style || typeof style !== 'string') {\n        return styleObject;\n    }\n    var declarations = (0, inline_style_parser_1.default)(style);\n    var hasIterator = typeof iterator === 'function';\n    declarations.forEach(function (declaration) {\n        if (declaration.type !== 'declaration') {\n            return;\n        }\n        var property = declaration.property, value = declaration.value;\n        if (hasIterator) {\n            iterator(property, value, declaration);\n        }\n        else if (value) {\n            styleObject = styleObject || {};\n            styleObject[property] = value;\n        }\n    });\n    return styleObject;\n}\n//# sourceMappingURL=index.js.map","import StyleToObject from '../cjs/index.js';\n\n// ensure compatibility with rollup umd build\nexport default StyleToObject.default || StyleToObject;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","/**\n * @import {Identifier, Literal, MemberExpression} from 'estree'\n * @import {Jsx, JsxDev, Options, Props} from 'hast-util-to-jsx-runtime'\n * @import {Element, Nodes, Parents, Root, Text} from 'hast'\n * @import {MdxFlowExpressionHast, MdxTextExpressionHast} from 'mdast-util-mdx-expression'\n * @import {MdxJsxFlowElementHast, MdxJsxTextElementHast} from 'mdast-util-mdx-jsx'\n * @import {MdxjsEsmHast} from 'mdast-util-mdxjs-esm'\n * @import {Position} from 'unist'\n * @import {Child, Create, Field, State, Style} from './types.js'\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToObject from 'style-to-object'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\n// To do: next major: `Object.hasOwn`.\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\nconst dashSomething = /-([a-z])/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JSX.Element}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpressionHast | MdxTextExpressionHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsmHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  /** @type {Style} */\n  const result = {}\n\n  try {\n    styleToObject(value, replacer)\n  } catch (error) {\n    if (!state.ignoreInvalidStyle) {\n      const cause = /** @type {Error} */ (error)\n      const message = new VFileMessage('Cannot parse `style` attribute', {\n        ancestors: state.ancestors,\n        cause,\n        ruleId: 'style',\n        source: 'hast-util-to-jsx-runtime'\n      })\n      message.file = state.filePath || undefined\n      message.url = docs + '#cannot-parse-style-attribute'\n\n      throw message\n    }\n  }\n\n  return result\n\n  /**\n   * Add a CSS property (normal, so with dashes) to `result` as a DOM CSS\n   * property.\n   *\n   * @param {string} name\n   *   Key.\n   * @param {string} value\n   *   Value\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function replacer(name, value) {\n    let key = name\n\n    if (key.slice(0, 2) !== '--') {\n      if (key.slice(0, 4) === '-ms-') key = 'ms-' + key.slice(4)\n      key = key.replace(dashSomething, toCamel)\n    }\n\n    result[key] = value\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {keyof JSX.IntrinsicElements} */ (result.value)\n\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$1` capitalized.\n *\n * @param {string} _\n *   Whatever.\n * @param {string} $1\n *   Single ASCII alphabetical.\n * @returns {string}\n *   Capitalized `$1`.\n */\nfunction toCamel(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length;\n  let chunkStart = 0;\n  /** @type {Array<unknown>} */\n  let parameters;\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start;\n  } else {\n    start = start > end ? end : start;\n  }\n  remove = remove > 0 ? remove : 0;\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items);\n    parameters.unshift(start, remove);\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters);\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove);\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000);\n      parameters.unshift(start, 0);\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters);\n      chunkStart += 10000;\n      start += 10000;\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items);\n    return list;\n  }\n  return items;\n}","/**\n * @import {\n *   Extension,\n *   Handles,\n *   HtmlExtension,\n *   NormalizedExtension\n * } from 'micromark-util-types'\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {ReadonlyArray<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n *   List of constructs to merge into.\n * @param {Array<unknown>} list\n *   List of constructs to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {ReadonlyArray<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   Single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return value\n  // Collapse markdown whitespace.\n  .replace(/[\\t\\n\\r ]+/g, \" \")\n  // Trim.\n  .replace(/^ | $/g, '')\n  // Some characters are considered “uppercase”, but if their lowercase\n  // counterpart is uppercased will result in a different uppercase\n  // character.\n  // Hence, to get that form, we perform both lower- and uppercase.\n  // Upper case makes sure keys will not interact with default prototypal\n  // methods: no method is uppercase.\n  .toLowerCase().toUpperCase();\n}","/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","import { asciiAlphanumeric } from 'micromark-util-character';\nimport { encode } from 'micromark-util-encode';\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''));\n  if (!protocol) {\n    return value;\n  }\n  const colon = value.indexOf(':');\n  const questionMark = value.indexOf('?');\n  const numberSign = value.indexOf('#');\n  const slash = value.indexOf('/');\n  if (\n  // If there is no protocol, it’s relative.\n  colon < 0 ||\n  // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n  slash > -1 && colon > slash || questionMark > -1 && colon > questionMark || numberSign > -1 && colon > numberSign ||\n  // It is a protocol, it should be allowed.\n  protocol.test(value.slice(0, colon))) {\n    return value;\n  }\n  return '';\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = [];\n  let index = -1;\n  let start = 0;\n  let skip = 0;\n  while (++index < value.length) {\n    const code = value.charCodeAt(index);\n    /** @type {string} */\n    let replace = '';\n\n    // A correct percent encoded value.\n    if (code === 37 && asciiAlphanumeric(value.charCodeAt(index + 1)) && asciiAlphanumeric(value.charCodeAt(index + 2))) {\n      skip = 2;\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code);\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1);\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next);\n        skip = 1;\n      }\n      // Lone surrogate.\n      else {\n        replace = \"\\uFFFD\";\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code);\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace));\n      start = index + skip + 1;\n      replace = '';\n    }\n    if (skip) {\n      index += skip;\n      skip = 0;\n    }\n  }\n  return result.join('') + value.slice(start);\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { markdownSpace } from 'micromark-util-character';\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type);\n      return prefix(code);\n    }\n    return ok(code);\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code);\n      return prefix;\n    }\n    effects.exit(type);\n    return ok(code);\n  }\n}","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Initializer}\n *   Content.\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(this.parser.constructs.contentInitial, afterContentStartConstruct, paragraphInitial);\n  /** @type {Token} */\n  let previous;\n  return contentStart;\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, contentStart, \"linePrefix\");\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter(\"paragraph\");\n    return lineStart(code);\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter(\"chunkText\", {\n      contentType: \"text\",\n      previous\n    });\n    if (previous) {\n      previous.next = token;\n    }\n    previous = token;\n    return data(code);\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit(\"chunkText\");\n      effects.exit(\"paragraph\");\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      effects.exit(\"chunkText\");\n      return lineStart;\n    }\n\n    // Data.\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @import {\n *   Construct,\n *   ContainerState,\n *   InitialConstruct,\n *   Initializer,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n *   Construct and its state.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n};\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeDocument(effects) {\n  const self = this;\n  /** @type {Array<StackItem>} */\n  const stack = [];\n  let continued = 0;\n  /** @type {TokenizeContext | undefined} */\n  let childFlow;\n  /** @type {Token | undefined} */\n  let childToken;\n  /** @type {number} */\n  let lineStartOffset;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued];\n      self.containerState = item[1];\n      return effects.attempt(item[0].continuation, documentContinue, checkNewContainers)(code);\n    }\n\n    // Done.\n    return checkNewContainers(code);\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++;\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined;\n      if (childFlow) {\n        closeFlow();\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          point = self.events[indexBeforeFlow][1].end;\n          break;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      let index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n      return checkNewContainers(code);\n    }\n    return start(code);\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code);\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code);\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack);\n    }\n\n    // Check if there is a new container.\n    self.containerState = {};\n    return effects.check(containerConstruct, thereIsANewContainer, thereIsNoNewContainer)(code);\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow();\n    exitContainers(continued);\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length;\n    lineStartOffset = self.now().offset;\n    return flowStart(code);\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {};\n    return effects.attempt(containerConstruct, containerContinue, flowStart)(code);\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++;\n    stack.push([self.currentConstruct, self.containerState]);\n    // Try another.\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow();\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    childFlow = childFlow || self.parser.flow(self.now());\n    effects.enter(\"chunkFlow\", {\n      _tokenizer: childFlow,\n      contentType: \"flow\",\n      previous: childToken\n    });\n    return flowContinue(code);\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit(\"chunkFlow\"), true);\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      writeToChild(effects.exit(\"chunkFlow\"));\n      // Get ready for the next line.\n      continued = 0;\n      self.interrupt = undefined;\n      return start;\n    }\n    effects.consume(code);\n    return flowContinue;\n  }\n\n  /**\n   * @param {Token} token\n   *   Token.\n   * @param {boolean | undefined} [endOfFile]\n   *   Whether the token is at the end of the file (default: `false`).\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function writeToChild(token, endOfFile) {\n    const stream = self.sliceStream(token);\n    if (endOfFile) stream.push(null);\n    token.previous = childToken;\n    if (childToken) childToken.next = token;\n    childToken = token;\n    childFlow.defineSkip(token.start);\n    childFlow.write(stream);\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length;\n      while (index--) {\n        if (\n        // The token starts before the line ending…\n        childFlow.events[index][1].start.offset < lineStartOffset && (\n        // …and either is not ended yet…\n        !childFlow.events[index][1].end ||\n        // …or ends after it.\n        childFlow.events[index][1].end.offset > lineStartOffset)) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return;\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {boolean | undefined} */\n      let seen;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end;\n            break;\n          }\n          seen = true;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n    }\n  }\n\n  /**\n   * @param {number} size\n   *   Size.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exitContainers(size) {\n    let index = stack.length;\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index];\n      self.containerState = entry[1];\n      entry[0].exit.call(self, effects);\n    }\n    stack.length = size;\n  }\n  function closeFlow() {\n    childFlow.write([null]);\n    childToken = undefined;\n    childFlow = undefined;\n    self.containerState._closeFlow = undefined;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n *   Tokenizer.\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(effects, effects.attempt(this.parser.constructs.document, ok, nok), \"linePrefix\", this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4);\n}","/**\n * @import {Code} from 'micromark-util-types'\n */\n\nimport { markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n    return 1;\n  }\n  if (unicodePunctuation(code)) {\n    return 2;\n  }\n}","/**\n * @import {Event, Resolver, TokenizeContext} from 'micromark-util-types'\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {ReadonlyArray<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   Event,\n *   Point,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { push, splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  resolveAll: resolveAllAttention,\n  tokenize: tokenizeAttention\n};\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1;\n  /** @type {number} */\n  let open;\n  /** @type {Token} */\n  let group;\n  /** @type {Token} */\n  let text;\n  /** @type {Token} */\n  let openingSequence;\n  /** @type {Token} */\n  let closingSequence;\n  /** @type {number} */\n  let use;\n  /** @type {Array<Event>} */\n  let nextEvents;\n  /** @type {number} */\n  let offset;\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (events[index][0] === 'enter' && events[index][1].type === 'attentionSequence' && events[index][1]._close) {\n      open = index;\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (events[open][0] === 'exit' && events[open][1].type === 'attentionSequence' && events[open][1]._open &&\n        // If the markers are the same:\n        context.sliceSerialize(events[open][1]).charCodeAt(0) === context.sliceSerialize(events[index][1]).charCodeAt(0)) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if ((events[open][1]._close || events[index][1]._open) && (events[index][1].end.offset - events[index][1].start.offset) % 3 && !((events[open][1].end.offset - events[open][1].start.offset + events[index][1].end.offset - events[index][1].start.offset) % 3)) {\n            continue;\n          }\n\n          // Number of markers to use from the sequence.\n          use = events[open][1].end.offset - events[open][1].start.offset > 1 && events[index][1].end.offset - events[index][1].start.offset > 1 ? 2 : 1;\n          const start = {\n            ...events[open][1].end\n          };\n          const end = {\n            ...events[index][1].start\n          };\n          movePoint(start, -use);\n          movePoint(end, use);\n          openingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start,\n            end: {\n              ...events[open][1].end\n            }\n          };\n          closingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start: {\n              ...events[index][1].start\n            },\n            end\n          };\n          text = {\n            type: use > 1 ? \"strongText\" : \"emphasisText\",\n            start: {\n              ...events[open][1].end\n            },\n            end: {\n              ...events[index][1].start\n            }\n          };\n          group = {\n            type: use > 1 ? \"strong\" : \"emphasis\",\n            start: {\n              ...openingSequence.start\n            },\n            end: {\n              ...closingSequence.end\n            }\n          };\n          events[open][1].end = {\n            ...openingSequence.start\n          };\n          events[index][1].start = {\n            ...closingSequence.end\n          };\n          nextEvents = [];\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [['enter', events[open][1], context], ['exit', events[open][1], context]]);\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [['enter', group, context], ['enter', openingSequence, context], ['exit', openingSequence, context], ['enter', text, context]]);\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(nextEvents, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + 1, index), context));\n\n          // Closing.\n          nextEvents = push(nextEvents, [['exit', text, context], ['enter', closingSequence, context], ['exit', closingSequence, context], ['exit', group, context]]);\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2;\n            nextEvents = push(nextEvents, [['enter', events[index][1], context], ['exit', events[index][1], context]]);\n          } else {\n            offset = 0;\n          }\n          splice(events, open - 1, index - open + 3, nextEvents);\n          index = open + nextEvents.length - offset - 2;\n          break;\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1;\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data';\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null;\n  const previous = this.previous;\n  const before = classifyCharacter(previous);\n\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code;\n    effects.enter('attentionSequence');\n    return inside(code);\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    const token = effects.exit('attentionSequence');\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code);\n\n    // Always populated by defaults.\n\n    const open = !after || after === 2 && before || attentionMarkers.includes(code);\n    const close = !before || before === 2 && after || attentionMarkers.includes(previous);\n    token._open = Boolean(marker === 42 ? open : open && (before || !close));\n    token._close = Boolean(marker === 42 ? close : close && (after || !open));\n    return ok(code);\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n *   Point.\n * @param {number} offset\n *   Amount to move.\n * @returns {undefined}\n *   Nothing.\n */\nfunction movePoint(point, offset) {\n  point.column += offset;\n  point.offset += offset;\n  point._bufferIndex += offset;\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, asciiAtext, asciiControl } from 'micromark-util-character';\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"autolink\");\n    effects.enter(\"autolinkMarker\");\n    effects.consume(code);\n    effects.exit(\"autolinkMarker\");\n    effects.enter(\"autolinkProtocol\");\n    return open;\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return schemeOrEmailAtext;\n    }\n    if (code === 64) {\n      return nok(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1;\n      return schemeInsideOrEmailAtext(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code);\n      size = 0;\n      return urlInside;\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if ((code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) && size++ < 32) {\n      effects.consume(code);\n      return schemeInsideOrEmailAtext;\n    }\n    size = 0;\n    return emailAtext(code);\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit(\"autolinkProtocol\");\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return urlInside;\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code);\n      return emailAtSignOrDot;\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code);\n      return emailAtext;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code);\n      size = 0;\n      return emailAtSignOrDot;\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit(\"autolinkProtocol\").type = \"autolinkEmail\";\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n    return emailValue(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel;\n      effects.consume(code);\n      return next;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blankLine = {\n  partial: true,\n  tokenize: tokenizeBlankLine\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code) ? factorySpace(effects, after, \"linePrefix\")(code) : after(code);\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blockQuote = {\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit,\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState;\n      if (!state.open) {\n        effects.enter(\"blockQuote\", {\n          _container: true\n        });\n        state.open = true;\n      }\n      effects.enter(\"blockQuotePrefix\");\n      effects.enter(\"blockQuoteMarker\");\n      effects.consume(code);\n      effects.exit(\"blockQuoteMarker\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"blockQuotePrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"blockQuotePrefixWhitespace\");\n      effects.exit(\"blockQuotePrefix\");\n      return ok;\n    }\n    effects.exit(\"blockQuotePrefix\");\n    return ok(code);\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this;\n  return contStart;\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(effects, contBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return contBefore(code);\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code);\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit(\"blockQuote\");\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiPunctuation } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterEscape\");\n    effects.enter(\"escapeMarker\");\n    effects.consume(code);\n    effects.exit(\"escapeMarker\");\n    return inside;\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter(\"characterEscapeValue\");\n      effects.consume(code);\n      effects.exit(\"characterEscapeValue\");\n      effects.exit(\"characterEscape\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { asciiAlphanumeric, asciiDigit, asciiHexDigit } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  /** @type {number} */\n  let max;\n  /** @type {(code: Code) => boolean} */\n  let test;\n  return start;\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterReference\");\n    effects.enter(\"characterReferenceMarker\");\n    effects.consume(code);\n    effects.exit(\"characterReferenceMarker\");\n    return open;\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter(\"characterReferenceMarkerNumeric\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerNumeric\");\n      return numeric;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 31;\n    test = asciiAlphanumeric;\n    return value(code);\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter(\"characterReferenceMarkerHexadecimal\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerHexadecimal\");\n      effects.enter(\"characterReferenceValue\");\n      max = 6;\n      test = asciiHexDigit;\n      return value;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 7;\n    test = asciiDigit;\n    return value(code);\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit(\"characterReferenceValue\");\n      if (test === asciiAlphanumeric && !decodeNamedCharacterReference(self.sliceSerialize(token))) {\n        return nok(code);\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter(\"characterReferenceMarker\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarker\");\n      effects.exit(\"characterReference\");\n      return ok;\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code);\n      return value;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuation\n};\n\n/** @type {Construct} */\nexport const codeFenced = {\n  concrete: true,\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this;\n  /** @type {Construct} */\n  const closeStart = {\n    partial: true,\n    tokenize: tokenizeCloseStart\n  };\n  let initialPrefix = 0;\n  let sizeOpen = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code);\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1];\n    initialPrefix = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n    marker = code;\n    effects.enter(\"codeFenced\");\n    effects.enter(\"codeFencedFence\");\n    effects.enter(\"codeFencedFenceSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++;\n      effects.consume(code);\n      return sequenceOpen;\n    }\n    if (sizeOpen < 3) {\n      return nok(code);\n    }\n    effects.exit(\"codeFencedFenceSequence\");\n    return markdownSpace(code) ? factorySpace(effects, infoBefore, \"whitespace\")(code) : infoBefore(code);\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFencedFence\");\n      return self.interrupt ? ok(code) : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFencedFenceInfo\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return info(code);\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return infoBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return factorySpace(effects, metaBefore, \"whitespace\")(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return info;\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code);\n    }\n    effects.enter(\"codeFencedFenceMeta\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return meta(code);\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceMeta\");\n      return infoBefore(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return meta;\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code);\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return contentStart;\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code) ? factorySpace(effects, beforeContentChunk, \"linePrefix\", initialPrefix + 1)(code) : beforeContentChunk(code);\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return contentChunk(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return beforeContentChunk(code);\n    }\n    effects.consume(code);\n    return contentChunk;\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit(\"codeFenced\");\n    return ok(code);\n  }\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0;\n    return startBefore;\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return start;\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter(\"codeFencedFence\");\n      return markdownSpace(code) ? factorySpace(effects, beforeSequenceClose, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : beforeSequenceClose(code);\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter(\"codeFencedFenceSequence\");\n        return sequenceClose(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++;\n        effects.consume(code);\n        return sequenceClose;\n      }\n      if (size >= sizeOpen) {\n        effects.exit(\"codeFencedFenceSequence\");\n        return markdownSpace(code) ? factorySpace(effects, sequenceCloseAfter, \"whitespace\")(code) : sequenceCloseAfter(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit(\"codeFencedFence\");\n        return ok(code);\n      }\n      return nok(code);\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineStart;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n};\n\n/** @type {Construct} */\nconst furtherStart = {\n  partial: true,\n  tokenize: tokenizeFurtherStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter(\"codeIndented\");\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? atBreak(code) : nok(code);\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code);\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return inside(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return inside;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit(\"codeIndented\");\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this;\n  return furtherStart;\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return furtherStart;\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? ok(code) : markdownLineEnding(code) ? furtherStart(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Previous,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  previous,\n  resolve: resolveCodeText,\n  tokenize: tokenizeCodeText\n};\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4;\n  let headEnterIndex = 3;\n  /** @type {number} */\n  let index;\n  /** @type {number | undefined} */\n  let enter;\n\n  // If we start and end with an EOL or a space.\n  if ((events[headEnterIndex][1].type === \"lineEnding\" || events[headEnterIndex][1].type === 'space') && (events[tailExitIndex][1].type === \"lineEnding\" || events[tailExitIndex][1].type === 'space')) {\n    index = headEnterIndex;\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === \"codeTextData\") {\n        // Then we have padding.\n        events[headEnterIndex][1].type = \"codeTextPadding\";\n        events[tailExitIndex][1].type = \"codeTextPadding\";\n        headEnterIndex += 2;\n        tailExitIndex -= 2;\n        break;\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1;\n  tailExitIndex++;\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== \"lineEnding\") {\n        enter = index;\n      }\n    } else if (index === tailExitIndex || events[index][1].type === \"lineEnding\") {\n      events[enter][1].type = \"codeTextData\";\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end;\n        events.splice(enter + 2, index - enter - 2);\n        tailExitIndex -= index - enter - 2;\n        index = enter + 2;\n      }\n      enter = undefined;\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return code !== 96 || this.events[this.events.length - 1][1].type === \"characterEscape\";\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this;\n  let sizeOpen = 0;\n  /** @type {number} */\n  let size;\n  /** @type {Token} */\n  let token;\n  return start;\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"codeText\");\n    effects.enter(\"codeTextSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code);\n      sizeOpen++;\n      return sequenceOpen;\n    }\n    effects.exit(\"codeTextSequence\");\n    return between(code);\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code);\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space');\n      effects.consume(code);\n      effects.exit('space');\n      return between;\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter(\"codeTextSequence\");\n      size = 0;\n      return sequenceClose(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return between;\n    }\n\n    // Data.\n    effects.enter(\"codeTextData\");\n    return data(code);\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 32 || code === 96 || markdownLineEnding(code)) {\n      effects.exit(\"codeTextData\");\n      return between(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code);\n      size++;\n      return sequenceClose;\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit(\"codeTextSequence\");\n      effects.exit(\"codeText\");\n      return ok(code);\n    }\n\n    // More or less accents: mark as data.\n    token.type = \"codeTextData\";\n    return data(code);\n  }\n}","/**\n * Some of the internal operations of micromark do lots of editing\n * operations on very large arrays. This runs into problems with two\n * properties of most circa-2020 JavaScript interpreters:\n *\n *  - Array-length modifications at the high end of an array (push/pop) are\n *    expected to be common and are implemented in (amortized) time\n *    proportional to the number of elements added or removed, whereas\n *    other operations (shift/unshift and splice) are much less efficient.\n *  - Function arguments are passed on the stack, so adding tens of thousands\n *    of elements to an array with `arr.push[...newElements]` will frequently\n *    cause stack overflows. (see <https://stackoverflow.com/questions/22123769/rangeerror-maximum-call-stack-size-exceeded-why>)\n *\n * SpliceBuffers are an implementation of gap buffers, which are a\n * generalization of the \"queue made of two stacks\" idea. The splice buffer\n * maintains a cursor, and moving the cursor has cost proportional to the\n * distance the cursor moves, but inserting, deleting, or splicing in\n * new information at the cursor is as efficient as the push/pop operation.\n * This allows for an efficient sequence of splices (or pushes, pops, shifts,\n * or unshifts) as long such edits happen at the same part of the array or\n * generally sweep through the array from the beginning to the end.\n *\n * The interface for splice buffers also supports large numbers of inputs by\n * passing a single array argument rather passing multiple arguments on the\n * function call stack.\n *\n * @template T\n *   Item type.\n */\nexport class SpliceBuffer {\n  /**\n   * @param {ReadonlyArray<T> | null | undefined} [initial]\n   *   Initial items (optional).\n   * @returns\n   *   Splice buffer.\n   */\n  constructor(initial) {\n    /** @type {Array<T>} */\n    this.left = initial ? [...initial] : [];\n    /** @type {Array<T>} */\n    this.right = [];\n  }\n\n  /**\n   * Array access;\n   * does not move the cursor.\n   *\n   * @param {number} index\n   *   Index.\n   * @return {T}\n   *   Item.\n   */\n  get(index) {\n    if (index < 0 || index >= this.left.length + this.right.length) {\n      throw new RangeError('Cannot access index `' + index + '` in a splice buffer of size `' + (this.left.length + this.right.length) + '`');\n    }\n    if (index < this.left.length) return this.left[index];\n    return this.right[this.right.length - index + this.left.length - 1];\n  }\n\n  /**\n   * The length of the splice buffer, one greater than the largest index in the\n   * array.\n   */\n  get length() {\n    return this.left.length + this.right.length;\n  }\n\n  /**\n   * Remove and return `list[0]`;\n   * moves the cursor to `0`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  shift() {\n    this.setCursor(0);\n    return this.right.pop();\n  }\n\n  /**\n   * Slice the buffer to get an array;\n   * does not move the cursor.\n   *\n   * @param {number} start\n   *   Start.\n   * @param {number | null | undefined} [end]\n   *   End (optional).\n   * @returns {Array<T>}\n   *   Array of items.\n   */\n  slice(start, end) {\n    /** @type {number} */\n    const stop = end === null || end === undefined ? Number.POSITIVE_INFINITY : end;\n    if (stop < this.left.length) {\n      return this.left.slice(start, stop);\n    }\n    if (start > this.left.length) {\n      return this.right.slice(this.right.length - stop + this.left.length, this.right.length - start + this.left.length).reverse();\n    }\n    const list = this.left.slice(start);\n    list.push(...this.right.slice(this.right.length - stop + this.left.length).reverse());\n    return list;\n  }\n\n  /**\n   * Mimics the behavior of Array.prototype.splice() except for the change of\n   * interface necessary to avoid segfaults when patching in very large arrays.\n   *\n   * This operation moves cursor is moved to `start` and results in the cursor\n   * placed after any inserted items.\n   *\n   * @param {number} start\n   *   Start;\n   *   zero-based index at which to start changing the array;\n   *   negative numbers count backwards from the end of the array and values\n   *   that are out-of bounds are clamped to the appropriate end of the array.\n   * @param {number | null | undefined} [deleteCount=0]\n   *   Delete count (default: `0`);\n   *   maximum number of elements to delete, starting from start.\n   * @param {Array<T> | null | undefined} [items=[]]\n   *   Items to include in place of the deleted items (default: `[]`).\n   * @return {Array<T>}\n   *   Any removed items.\n   */\n  splice(start, deleteCount, items) {\n    /** @type {number} */\n    const count = deleteCount || 0;\n    this.setCursor(Math.trunc(start));\n    const removed = this.right.splice(this.right.length - count, Number.POSITIVE_INFINITY);\n    if (items) chunkedPush(this.left, items);\n    return removed.reverse();\n  }\n\n  /**\n   * Remove and return the highest-numbered item in the array, so\n   * `list[list.length - 1]`;\n   * Moves the cursor to `length`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  pop() {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    return this.left.pop();\n  }\n\n  /**\n   * Inserts a single item to the high-numbered side of the array;\n   * moves the cursor to `length`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  push(item) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    this.left.push(item);\n  }\n\n  /**\n   * Inserts many items to the high-numbered side of the array.\n   * Moves the cursor to `length`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  pushMany(items) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    chunkedPush(this.left, items);\n  }\n\n  /**\n   * Inserts a single item to the low-numbered side of the array;\n   * Moves the cursor to `0`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshift(item) {\n    this.setCursor(0);\n    this.right.push(item);\n  }\n\n  /**\n   * Inserts many items to the low-numbered side of the array;\n   * moves the cursor to `0`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshiftMany(items) {\n    this.setCursor(0);\n    chunkedPush(this.right, items.reverse());\n  }\n\n  /**\n   * Move the cursor to a specific position in the array. Requires\n   * time proportional to the distance moved.\n   *\n   * If `n < 0`, the cursor will end up at the beginning.\n   * If `n > length`, the cursor will end up at the end.\n   *\n   * @param {number} n\n   *   Position.\n   * @return {undefined}\n   *   Nothing.\n   */\n  setCursor(n) {\n    if (n === this.left.length || n > this.left.length && this.right.length === 0 || n < 0 && this.left.length === 0) return;\n    if (n < this.left.length) {\n      // Move cursor to the this.left\n      const removed = this.left.splice(n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.right, removed.reverse());\n    } else {\n      // Move cursor to the this.right\n      const removed = this.right.splice(this.left.length + this.right.length - n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.left, removed.reverse());\n    }\n  }\n}\n\n/**\n * Avoid stack overflow by pushing items onto the stack in segments\n *\n * @template T\n *   Item type.\n * @param {Array<T>} list\n *   List to inject into.\n * @param {ReadonlyArray<T>} right\n *   Items to inject.\n * @return {undefined}\n *   Nothing.\n */\nfunction chunkedPush(list, right) {\n  /** @type {number} */\n  let chunkStart = 0;\n  if (right.length < 10000) {\n    list.push(...right);\n  } else {\n    while (chunkStart < right.length) {\n      list.push(...right.slice(chunkStart, chunkStart + 10000));\n      chunkStart += 10000;\n    }\n  }\n}","/**\n * @import {Chunk, Event, Token} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { SpliceBuffer } from './lib/splice-buffer.js';\n\n// Hidden API exposed for testing.\nexport { SpliceBuffer } from './lib/splice-buffer.js';\n\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} eventsArray\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\n// eslint-disable-next-line complexity\nexport function subtokenize(eventsArray) {\n  /** @type {Record<string, number>} */\n  const jumps = {};\n  let index = -1;\n  /** @type {Event} */\n  let event;\n  /** @type {number | undefined} */\n  let lineIndex;\n  /** @type {number} */\n  let otherIndex;\n  /** @type {Event} */\n  let otherEvent;\n  /** @type {Array<Event>} */\n  let parameters;\n  /** @type {Array<Event>} */\n  let subevents;\n  /** @type {boolean | undefined} */\n  let more;\n  const events = new SpliceBuffer(eventsArray);\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index];\n    }\n    event = events.get(index);\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (index && event[1].type === \"chunkFlow\" && events.get(index - 1)[1].type === \"listItemPrefix\") {\n      subevents = event[1]._tokenizer.events;\n      otherIndex = 0;\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"lineEndingBlank\") {\n        otherIndex += 2;\n      }\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"content\") {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === \"content\") {\n            break;\n          }\n          if (subevents[otherIndex][1].type === \"chunkText\") {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true;\n            otherIndex++;\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index));\n        index = jumps[index];\n        more = true;\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index;\n      lineIndex = undefined;\n      while (otherIndex--) {\n        otherEvent = events.get(otherIndex);\n        if (otherEvent[1].type === \"lineEnding\" || otherEvent[1].type === \"lineEndingBlank\") {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events.get(lineIndex)[1].type = \"lineEndingBlank\";\n            }\n            otherEvent[1].type = \"lineEnding\";\n            lineIndex = otherIndex;\n          }\n        } else {\n          break;\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = {\n          ...events.get(lineIndex)[1].start\n        };\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index);\n        parameters.unshift(event);\n        events.splice(lineIndex, index - lineIndex + 1, parameters);\n      }\n    }\n  }\n\n  // The changes to the `events` buffer must be copied back into the eventsArray\n  splice(eventsArray, 0, Number.POSITIVE_INFINITY, events.slice(0));\n  return !more;\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {SpliceBuffer<Event>} events\n *   Events.\n * @param {number} eventIndex\n *   Index.\n * @returns {Record<string, number>}\n *   Gaps.\n */\nfunction subcontent(events, eventIndex) {\n  const token = events.get(eventIndex)[1];\n  const context = events.get(eventIndex)[2];\n  let startPosition = eventIndex - 1;\n  /** @type {Array<number>} */\n  const startPositions = [];\n  const tokenizer = token._tokenizer || context.parser[token.contentType](token.start);\n  const childEvents = tokenizer.events;\n  /** @type {Array<[number, number]>} */\n  const jumps = [];\n  /** @type {Record<string, number>} */\n  const gaps = {};\n  /** @type {Array<Chunk>} */\n  let stream;\n  /** @type {Token | undefined} */\n  let previous;\n  let index = -1;\n  /** @type {Token | undefined} */\n  let current = token;\n  let adjust = 0;\n  let start = 0;\n  const breaks = [start];\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events.get(++startPosition)[1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition);\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current);\n      if (!current.next) {\n        stream.push(null);\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start);\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true;\n      }\n      tokenizer.write(stream);\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined;\n      }\n    }\n\n    // Unravel the next token.\n    previous = current;\n    current = current.next;\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token;\n  while (++index < childEvents.length) {\n    if (\n    // Find a void token that includes a break.\n    childEvents[index][0] === 'exit' && childEvents[index - 1][0] === 'enter' && childEvents[index][1].type === childEvents[index - 1][1].type && childEvents[index][1].start.line !== childEvents[index][1].end.line) {\n      start = index + 1;\n      breaks.push(start);\n      // Help GC.\n      current._tokenizer = undefined;\n      current.previous = undefined;\n      current = current.next;\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = [];\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined;\n    current.previous = undefined;\n  } else {\n    breaks.pop();\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length;\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1]);\n    const start = startPositions.pop();\n    jumps.push([start, start + slice.length - 1]);\n    events.splice(start, 2, slice);\n  }\n  jumps.reverse();\n  index = -1;\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1];\n    adjust += jumps[index][1] - jumps[index][0] - 1;\n  }\n  return gaps;\n}","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { subtokenize } from 'micromark-util-subtokenize';\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  resolve: resolveContent,\n  tokenize: tokenizeContent\n};\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  partial: true,\n  tokenize: tokenizeContinuation\n};\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous;\n  return chunkStart;\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter(\"content\");\n    previous = effects.enter(\"chunkContent\", {\n      contentType: \"content\"\n    });\n    return chunkInside(code);\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code);\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(continuationConstruct, contentContinue, contentEnd)(code);\n    }\n\n    // Data.\n    effects.consume(code);\n    return chunkInside;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit(\"chunkContent\");\n    effects.exit(\"content\");\n    return ok(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code);\n    effects.exit(\"chunkContent\");\n    previous.next = effects.enter(\"chunkContent\", {\n      contentType: \"content\",\n      previous\n    });\n    previous = previous.next;\n    return chunkInside;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this;\n  return startLookahead;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit(\"chunkContent\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, prefixed, \"linePrefix\");\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1];\n    if (!self.parser.constructs.disable.null.includes('codeIndented') && tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4) {\n      return ok(code);\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code);\n  }\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { asciiControl, markdownLineEndingOrSpace, markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factoryDestination(effects, ok, nok, type, literalType, literalMarkerType, rawType, stringType, max) {\n  const limit = max || Number.POSITIVE_INFINITY;\n  let balance = 0;\n  return start;\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type);\n      effects.enter(literalType);\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      return enclosedBefore;\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.enter(type);\n    effects.enter(rawType);\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return raw(code);\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      effects.exit(literalType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return enclosed(code);\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      return enclosedBefore(code);\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? enclosedEscape : enclosed;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code);\n      return enclosed;\n    }\n    return enclosed(code);\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (!balance && (code === null || code === 41 || markdownLineEndingOrSpace(code))) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      effects.exit(rawType);\n      effects.exit(type);\n      return ok(code);\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code);\n      balance++;\n      return raw;\n    }\n    if (code === 41) {\n      effects.consume(code);\n      balance--;\n      return raw;\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? rawEscape : raw;\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code);\n      return raw;\n    }\n    return raw(code);\n  }\n}","/**\n * @import {\n *   Effects,\n *   State,\n *   TokenizeContext,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this;\n  let size = 0;\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type);\n    effects.enter(markerType);\n    effects.consume(code);\n    effects.exit(markerType);\n    effects.enter(stringType);\n    return atBreak;\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (size > 999 || code === null || code === 91 || code === 93 && !seen ||\n    // To do: remove in the future once we’ve switched from\n    // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n    // which doesn’t need this.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    code === 94 && !size && '_hiddenFootnoteSupport' in self.parser.constructs) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit(stringType);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return atBreak;\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return labelInside(code);\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (code === null || code === 91 || code === 93 || markdownLineEnding(code) || size++ > 999) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    if (!seen) seen = !markdownSpace(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Effects,\n *   State,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      marker = code === 40 ? 41 : code;\n      return begin;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    return atBreak(code);\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType);\n      return begin(marker);\n    }\n    if (code === null) {\n      return nok(code);\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return factorySpace(effects, atBreak, \"linePrefix\");\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return inside(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? escape : inside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code);\n      return inside;\n    }\n    return inside(code);\n  }\n}","/**\n * @import {Effects, State} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      seen = true;\n      return start;\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, start, seen ? \"linePrefix\" : \"lineSuffix\")(code);\n    }\n    return ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factorySpace } from 'micromark-factory-space';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n};\n\n/** @type {Construct} */\nconst titleBefore = {\n  partial: true,\n  tokenize: tokenizeTitleBefore\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this;\n  /** @type {string} */\n  let identifier;\n  return start;\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter(\"definition\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(self, effects, labelAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionLabel\", \"definitionLabelMarker\", \"definitionLabelString\")(code);\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1));\n    if (code === 58) {\n      effects.enter(\"definitionMarker\");\n      effects.consume(code);\n      effects.exit(\"definitionMarker\");\n      return markerAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, destinationBefore)(code) : destinationBefore(code);\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(effects, destinationAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionDestination\", \"definitionDestinationLiteral\", \"definitionDestinationLiteralMarker\", \"definitionDestinationRaw\", \"definitionDestinationString\")(code);\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code);\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code) ? factorySpace(effects, afterWhitespace, \"whitespace\")(code) : afterWhitespace(code);\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"definition\");\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier);\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore;\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, beforeMarker)(code) : nok(code);\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(effects, titleAfter, nok, \"definitionTitle\", \"definitionTitleMarker\", \"definitionTitleString\")(code);\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code) ? factorySpace(effects, titleAfterOptionalWhitespace, \"whitespace\")(code) : titleAfterOptionalWhitespace(code);\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"hardBreakEscape\");\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit(\"hardBreakEscape\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  resolve: resolveHeadingAtx,\n  tokenize: tokenizeHeadingAtx\n};\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2;\n  let contentStart = 3;\n  /** @type {Token} */\n  let content;\n  /** @type {Token} */\n  let text;\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === \"whitespace\") {\n    contentStart += 2;\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (contentEnd - 2 > contentStart && events[contentEnd][1].type === \"whitespace\") {\n    contentEnd -= 2;\n  }\n  if (events[contentEnd][1].type === \"atxHeadingSequence\" && (contentStart === contentEnd - 1 || contentEnd - 4 > contentStart && events[contentEnd - 2][1].type === \"whitespace\")) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4;\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: \"atxHeadingText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    };\n    text = {\n      type: \"chunkText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: \"text\"\n    };\n    splice(events, contentStart, contentEnd - contentStart + 1, [['enter', content, context], ['enter', text, context], ['exit', text, context], ['exit', content, context]]);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter(\"atxHeading\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"atxHeadingSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code);\n      return sequenceOpen;\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingSequence\");\n      return atBreak(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter(\"atxHeadingSequence\");\n      return sequenceFurther(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"atxHeading\");\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, \"whitespace\")(code);\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter(\"atxHeadingText\");\n    return data(code);\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code);\n      return sequenceFurther;\n    }\n    effects.exit(\"atxHeadingSequence\");\n    return atBreak(code);\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingText\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { htmlBlockNames, htmlRawNames } from 'micromark-util-html-tag-name';\nimport { blankLine } from './blank-line.js';\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  concrete: true,\n  name: 'htmlFlow',\n  resolveTo: resolveToHtmlFlow,\n  tokenize: tokenizeHtmlFlow\n};\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  partial: true,\n  tokenize: tokenizeBlankLineBefore\n};\nconst nonLazyContinuationStart = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuationStart\n};\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length;\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === \"htmlFlow\") {\n      break;\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === \"linePrefix\") {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start;\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start;\n    // Remove the line prefix.\n    events.splice(index - 2, 2);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this;\n  /** @type {number} */\n  let marker;\n  /** @type {boolean} */\n  let closingTag;\n  /** @type {string} */\n  let buffer;\n  /** @type {number} */\n  let index;\n  /** @type {Code} */\n  let markerB;\n  return start;\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"htmlFlow\");\n    effects.enter(\"htmlFlowData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      closingTag = true;\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      marker = 3;\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      marker = 2;\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      marker = 5;\n      index = 0;\n      return cdataOpenInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      marker = 4;\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation;\n      }\n      return cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (code === null || code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      const slash = code === 47;\n      const name = buffer.toLowerCase();\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1;\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6;\n        if (slash) {\n          effects.consume(code);\n          return basicSelfClosing;\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      marker = 7;\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line] ? nok(code) : closingTag ? completeClosingTagAfter(code) : completeAttributeNameBefore(code);\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeClosingTagAfter;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return completeEnd;\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameBefore;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    return completeAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameAfter;\n    }\n    return completeAttributeNameBefore(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      markerB = code;\n      return completeAttributeValueQuoted;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    return completeAttributeValueUnquoted(code);\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code);\n      markerB = null;\n      return completeAttributeValueQuotedAfter;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 47 || code === 60 || code === 61 || code === 62 || code === 96 || markdownLineEndingOrSpace(code)) {\n      return completeAttributeNameAfter(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationCommentInside;\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code);\n      return continuationRawTagOpen;\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code);\n      return continuationClose;\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code);\n      return continuationCdataInside;\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit(\"htmlFlowData\");\n      return effects.check(blankLineBefore, continuationAfter, continuationStart)(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationStart(code);\n    }\n    effects.consume(code);\n    return continuation;\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(nonLazyContinuationStart, continuationStartNonLazy, continuationAfter)(code);\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return continuationBefore;\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code);\n    }\n    effects.enter(\"htmlFlowData\");\n    return continuation(code);\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code);\n      buffer = '';\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase();\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code);\n        return continuationClose;\n      }\n      return continuation(code);\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      // Always the case.\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return continuationClose;\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationAfter(code);\n    }\n    effects.consume(code);\n    return continuationClose;\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit(\"htmlFlow\");\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start;\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return effects.attempt(blankLine, ok, nok);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code> | undefined} */\n  let marker;\n  /** @type {number} */\n  let index;\n  /** @type {State} */\n  let returnState;\n  return start;\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"htmlText\");\n    effects.enter(\"htmlTextData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instruction;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      index = 0;\n      return cdataOpenInside;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return declaration;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 45) {\n      effects.consume(code);\n      return commentClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return comment;\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return comment(code);\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62 ? end(code) : code === 45 ? commentClose(code) : comment(code);\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      return index === value.length ? cdata : cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return cdata;\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return declaration;\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instructionClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return instruction;\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return tagCloseBetween(code);\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagCloseBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return end;\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    return tagOpenAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeNameAfter;\n    }\n    return tagOpenBetween(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      marker = code;\n      return tagOpenAttributeValueQuoted;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code);\n      marker = undefined;\n      return tagOpenAttributeValueQuotedAfter;\n    }\n    if (code === null) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 96) {\n      return nok(code);\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code);\n      effects.exit(\"htmlTextData\");\n      effects.exit(\"htmlText\");\n      return ok;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit(\"htmlTextData\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineEndingAfter;\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code) ? factorySpace(effects, lineEndingAfterPrefix, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : lineEndingAfterPrefix(code);\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter(\"htmlTextData\");\n    return returnState(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Event,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  resolveAll: resolveAllLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  tokenize: tokenizeLabelEnd\n};\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n};\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n};\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n};\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1;\n  /** @type {Array<Event>} */\n  const newEvents = [];\n  while (++index < events.length) {\n    const token = events[index][1];\n    newEvents.push(events[index]);\n    if (token.type === \"labelImage\" || token.type === \"labelLink\" || token.type === \"labelEnd\") {\n      // Remove the marker.\n      const offset = token.type === \"labelImage\" ? 4 : 2;\n      token.type = \"data\";\n      index += offset;\n    }\n  }\n\n  // If the events are equal, we don't have to copy newEvents to events\n  if (events.length !== newEvents.length) {\n    splice(events, 0, events.length, newEvents);\n  }\n  return events;\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length;\n  let offset = 0;\n  /** @type {Token} */\n  let token;\n  /** @type {number | undefined} */\n  let open;\n  /** @type {number | undefined} */\n  let close;\n  /** @type {Array<Event>} */\n  let media;\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1];\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (token.type === \"link\" || token.type === \"labelLink\" && token._inactive) {\n        break;\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === \"labelLink\") {\n        token._inactive = true;\n      }\n    } else if (close) {\n      if (events[index][0] === 'enter' && (token.type === \"labelImage\" || token.type === \"labelLink\") && !token._balanced) {\n        open = index;\n        if (token.type !== \"labelLink\") {\n          offset = 2;\n          break;\n        }\n      }\n    } else if (token.type === \"labelEnd\") {\n      close = index;\n    }\n  }\n  const group = {\n    type: events[open][1].type === \"labelLink\" ? \"link\" : \"image\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n  const label = {\n    type: \"label\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[close][1].end\n    }\n  };\n  const text = {\n    type: \"labelText\",\n    start: {\n      ...events[open + offset + 2][1].end\n    },\n    end: {\n      ...events[close - 2][1].start\n    }\n  };\n  media = [['enter', group, context], ['enter', label, context]];\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3));\n\n  // Text open.\n  media = push(media, [['enter', text, context]]);\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(media, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + offset + 4, close - 3), context));\n\n  // Text close, marker close, label close.\n  media = push(media, [['exit', text, context], events[close - 2], events[close - 1], ['exit', label, context]]);\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1));\n\n  // Media close.\n  media = push(media, [['exit', group, context]]);\n  splice(events, open, events.length, media);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  /** @type {Token} */\n  let labelStart;\n  /** @type {boolean} */\n  let defined;\n\n  // Find an opening.\n  while (index--) {\n    if ((self.events[index][1].type === \"labelImage\" || self.events[index][1].type === \"labelLink\") && !self.events[index][1]._balanced) {\n      labelStart = self.events[index][1];\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code);\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code);\n    }\n    defined = self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    })));\n    effects.enter(\"labelEnd\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelEnd\");\n    return after;\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(resourceConstruct, labelEndOk, defined ? labelEndOk : labelEndNok)(code);\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(referenceFullConstruct, labelEndOk, defined ? referenceNotFull : labelEndNok)(code);\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code);\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(referenceCollapsedConstruct, labelEndOk, labelEndNok)(code);\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code);\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true;\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart;\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter(\"resource\");\n    effects.enter(\"resourceMarker\");\n    effects.consume(code);\n    effects.exit(\"resourceMarker\");\n    return resourceBefore;\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceOpen)(code) : resourceOpen(code);\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code);\n    }\n    return factoryDestination(effects, resourceDestinationAfter, resourceDestinationMissing, \"resourceDestination\", \"resourceDestinationLiteral\", \"resourceDestinationLiteralMarker\", \"resourceDestinationRaw\", \"resourceDestinationString\", 32)(code);\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceBetween)(code) : resourceEnd(code);\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code);\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(effects, resourceTitleAfter, nok, \"resourceTitle\", \"resourceTitleMarker\", \"resourceTitleString\")(code);\n    }\n    return resourceEnd(code);\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceEnd)(code) : resourceEnd(code);\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter(\"resourceMarker\");\n      effects.consume(code);\n      effects.exit(\"resourceMarker\");\n      effects.exit(\"resource\");\n      return ok;\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this;\n  return referenceFull;\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(self, effects, referenceFullAfter, referenceFullMissing, \"reference\", \"referenceMarker\", \"referenceString\")(code);\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1))) ? ok(code) : nok(code);\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart;\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter(\"reference\");\n    effects.enter(\"referenceMarker\");\n    effects.consume(code);\n    effects.exit(\"referenceMarker\");\n    return referenceCollapsedOpen;\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter(\"referenceMarker\");\n      effects.consume(code);\n      effects.exit(\"referenceMarker\");\n      effects.exit(\"reference\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartImage\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelImage\");\n    effects.enter(\"labelImageMarker\");\n    effects.consume(code);\n    effects.exit(\"labelImageMarker\");\n    return open;\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter(\"labelMarker\");\n      effects.consume(code);\n      effects.exit(\"labelMarker\");\n      effects.exit(\"labelImage\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartLink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelLink\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelLink\");\n    return after;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, ok, \"linePrefix\");\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"thematicBreak\");\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code;\n    return atBreak(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter(\"thematicBreakSequence\");\n      return sequence(code);\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit(\"thematicBreak\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code);\n      size++;\n      return sequence;\n    }\n    effects.exit(\"thematicBreakSequence\");\n    return markdownSpace(code) ? factorySpace(effects, atBreak, \"whitespace\")(code) : atBreak(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiDigit, markdownSpace } from 'micromark-util-character';\nimport { blankLine } from './blank-line.js';\nimport { thematicBreak } from './thematic-break.js';\n\n/** @type {Construct} */\nexport const list = {\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd,\n  name: 'list',\n  tokenize: tokenizeListStart\n};\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  partial: true,\n  tokenize: tokenizeListItemPrefixWhitespace\n};\n\n/** @type {Construct} */\nconst indentConstruct = {\n  partial: true,\n  tokenize: tokenizeIndent\n};\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this;\n  const tail = self.events[self.events.length - 1];\n  let initialSize = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    const kind = self.containerState.type || (code === 42 || code === 43 || code === 45 ? \"listUnordered\" : \"listOrdered\");\n    if (kind === \"listUnordered\" ? !self.containerState.marker || code === self.containerState.marker : asciiDigit(code)) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind;\n        effects.enter(kind, {\n          _container: true\n        });\n      }\n      if (kind === \"listUnordered\") {\n        effects.enter(\"listItemPrefix\");\n        return code === 42 || code === 45 ? effects.check(thematicBreak, nok, atMarker)(code) : atMarker(code);\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter(\"listItemPrefix\");\n        effects.enter(\"listItemValue\");\n        return inside(code);\n      }\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code);\n      return inside;\n    }\n    if ((!self.interrupt || size < 2) && (self.containerState.marker ? code === self.containerState.marker : code === 41 || code === 46)) {\n      effects.exit(\"listItemValue\");\n      return atMarker(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter(\"listItemMarker\");\n    effects.consume(code);\n    effects.exit(\"listItemMarker\");\n    self.containerState.marker = self.containerState.marker || code;\n    return effects.check(blankLine,\n    // Can’t be empty when interrupting.\n    self.interrupt ? nok : onBlank, effects.attempt(listItemPrefixWhitespaceConstruct, endOfPrefix, otherPrefix));\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true;\n    initialSize++;\n    return endOfPrefix(code);\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"listItemPrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"listItemPrefixWhitespace\");\n      return endOfPrefix;\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size = initialSize + self.sliceSerialize(effects.exit(\"listItemPrefix\"), true).length;\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this;\n  self.containerState._closeFlow = undefined;\n  return effects.check(blankLine, onBlank, notBlank);\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines = self.containerState.furtherBlankLines || self.containerState.initialBlankLine;\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(effects, ok, \"listItemIndent\", self.containerState.size + 1)(code);\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined;\n      self.containerState.initialBlankLine = undefined;\n      return notInCurrentItem(code);\n    }\n    self.containerState.furtherBlankLines = undefined;\n    self.containerState.initialBlankLine = undefined;\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code);\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true;\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined;\n    // Always populated by defaults.\n\n    return factorySpace(effects, effects.attempt(list, ok, nok), \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, \"listItemIndent\", self.containerState.size + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"listItemIndent\" && tail[2].sliceSerialize(tail[1], true).length === self.containerState.size ? ok(code) : nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Exiter}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type);\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this;\n\n  // Always populated by defaults.\n\n  return factorySpace(effects, afterPrefix, \"listItemPrefixWhitespace\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4 + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return !markdownSpace(code) && tail && tail[1].type === \"listItemPrefixWhitespace\" ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  resolveTo: resolveToSetextUnderline,\n  tokenize: tokenizeSetextUnderline\n};\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length;\n  /** @type {number | undefined} */\n  let content;\n  /** @type {number | undefined} */\n  let text;\n  /** @type {number | undefined} */\n  let definition;\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === \"content\") {\n        content = index;\n        break;\n      }\n      if (events[index][1].type === \"paragraph\") {\n        text = index;\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === \"content\") {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1);\n      }\n      if (!definition && events[index][1].type === \"definition\") {\n        definition = index;\n      }\n    }\n  }\n  const heading = {\n    type: \"setextHeading\",\n    start: {\n      ...events[text][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = \"setextHeadingText\";\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context]);\n    events.splice(definition + 1, 0, ['exit', events[content][1], context]);\n    events[content][1].end = {\n      ...events[definition][1].end\n    };\n  } else {\n    events[content][1] = heading;\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context]);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length;\n    /** @type {boolean | undefined} */\n    let paragraph;\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (self.events[index][1].type !== \"lineEnding\" && self.events[index][1].type !== \"linePrefix\" && self.events[index][1].type !== \"content\") {\n        paragraph = self.events[index][1].type === \"paragraph\";\n        break;\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter(\"setextHeadingLine\");\n      marker = code;\n      return before(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"setextHeadingLineSequence\");\n    return inside(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    effects.exit(\"setextHeadingLineSequence\");\n    return markdownSpace(code) ? factorySpace(effects, after, \"lineSuffix\")(code) : after(code);\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"setextHeadingLine\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nimport { blankLine, content } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeFlow(effects) {\n  const self = this;\n  const initial = effects.attempt(\n  // Try to parse a blank line.\n  blankLine, atBlankEnding,\n  // Try to parse initial flow (essentially, only code).\n  effects.attempt(this.parser.constructs.flowInitial, afterConstruct, factorySpace(effects, effects.attempt(this.parser.constructs.flow, afterConstruct, effects.attempt(content, afterConstruct)), \"linePrefix\")));\n  return initial;\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEndingBlank\");\n    effects.consume(code);\n    effects.exit(\"lineEndingBlank\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n}","/**\n * @import {\n *   Code,\n *   InitialConstruct,\n *   Initializer,\n *   Resolver,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n};\nexport const string = initializeFactory('string');\nexport const text = initializeFactory('text');\n\n/**\n * @param {'string' | 'text'} field\n *   Field.\n * @returns {InitialConstruct}\n *   Construct.\n */\nfunction initializeFactory(field) {\n  return {\n    resolveAll: createResolver(field === 'text' ? resolveAllLineSuffixes : undefined),\n    tokenize: initializeText\n  };\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this;\n    const constructs = this.parser.constructs[field];\n    const text = effects.attempt(constructs, start, notText);\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code);\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code);\n        return;\n      }\n      effects.enter(\"data\");\n      effects.consume(code);\n      return data;\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit(\"data\");\n        return text(code);\n      }\n\n      // Data.\n      effects.consume(code);\n      return data;\n    }\n\n    /**\n     * @param {Code} code\n     *   Code.\n     * @returns {boolean}\n     *   Whether the code is a break.\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true;\n      }\n      const list = constructs[code];\n      let index = -1;\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index];\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n *   Resolver.\n * @returns {Resolver}\n *   Resolver.\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText;\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1;\n    /** @type {number | undefined} */\n    let enter;\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === \"data\") {\n          enter = index;\n          index++;\n        }\n      } else if (!events[index] || events[index][1].type !== \"data\") {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end;\n          events.splice(enter + 2, index - enter - 2);\n          index = enter + 2;\n        }\n        enter = undefined;\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events;\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0; // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if ((eventIndex === events.length || events[eventIndex][1].type === \"lineEnding\") && events[eventIndex - 1][1].type === \"data\") {\n      const data = events[eventIndex - 1][1];\n      const chunks = context.sliceStream(data);\n      let index = chunks.length;\n      let bufferIndex = -1;\n      let size = 0;\n      /** @type {boolean | undefined} */\n      let tabs;\n      while (index--) {\n        const chunk = chunks[index];\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length;\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++;\n            bufferIndex--;\n          }\n          if (bufferIndex) break;\n          bufferIndex = -1;\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true;\n          size++;\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++;\n          break;\n        }\n      }\n      if (size) {\n        const token = {\n          type: eventIndex === events.length || tabs || size < 2 ? \"lineSuffix\" : \"hardBreakTrailing\",\n          start: {\n            _bufferIndex: index ? bufferIndex : data.start._bufferIndex + bufferIndex,\n            _index: data.start._index + index,\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size\n          },\n          end: {\n            ...data.end\n          }\n        };\n        data.end = {\n          ...token.start\n        };\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token);\n        } else {\n          events.splice(eventIndex, 0, ['enter', token, context], ['exit', token, context]);\n          eventIndex += 2;\n        }\n      }\n      eventIndex++;\n    }\n  }\n  return events;\n}","/**\n * @import {Extension} from 'micromark-util-types'\n */\n\nimport { attention, autolink, blockQuote, characterEscape, characterReference, codeFenced, codeIndented, codeText, definition, hardBreakEscape, headingAtx, htmlFlow, htmlText, labelEnd, labelStartImage, labelStartLink, lineEnding, list, setextUnderline, thematicBreak } from 'micromark-core-commonmark';\nimport { resolver as resolveText } from './initialize/text.js';\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n};\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n};\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n};\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n};\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n};\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n};\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n};\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n};\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n};","/**\n * @import {\n *   Chunk,\n *   Code,\n *   ConstructRecord,\n *   Construct,\n *   Effects,\n *   InitialConstruct,\n *   ParseContext,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @callback Restore\n *   Restore the state.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef Info\n *   Info.\n * @property {Restore} restore\n *   Restore.\n * @property {number} from\n *   From.\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n *   Construct.\n * @param {Info} info\n *   Info.\n * @returns {undefined}\n *   Nothing.\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n *   Parser.\n * @param {InitialConstruct} initialize\n *   Construct.\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n *   Point (optional).\n * @returns {TokenizeContext}\n *   Context.\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = {\n    _bufferIndex: -1,\n    _index: 0,\n    line: from && from.line || 1,\n    column: from && from.column || 1,\n    offset: from && from.offset || 0\n  };\n  /** @type {Record<string, number>} */\n  const columnStart = {};\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = [];\n  /** @type {Array<Chunk>} */\n  let chunks = [];\n  /** @type {Array<Token>} */\n  let stack = [];\n  /** @type {boolean | undefined} */\n  let consumed = true;\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    consume,\n    enter,\n    exit,\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  };\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    code: null,\n    containerState: {},\n    defineSkip,\n    events: [],\n    now,\n    parser,\n    previous: null,\n    sliceSerialize,\n    sliceStream,\n    write\n  };\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects);\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode;\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize);\n  }\n  return context;\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice);\n    main();\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return [];\n    }\n    addResult(initialize, 0);\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context);\n    return context.events;\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs);\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token);\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    } = point;\n    return {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    };\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column;\n    accountForPotentialSkip();\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex;\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index];\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index;\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0;\n        }\n        while (point._index === chunkIndex && point._bufferIndex < chunk.length) {\n          go(chunk.charCodeAt(point._bufferIndex));\n        }\n      } else {\n        go(chunk);\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   *   Code.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function go(code) {\n    consumed = undefined;\n    expectedCode = code;\n    state = state(code);\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++;\n      point.column = 1;\n      point.offset += code === -3 ? 2 : 1;\n      accountForPotentialSkip();\n    } else if (code !== -1) {\n      point.column++;\n      point.offset++;\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++;\n    } else {\n      point._bufferIndex++;\n\n      // At end of string chunk.\n      if (point._bufferIndex ===\n      // Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      /** @type {string} */\n      chunks[point._index].length) {\n        point._bufferIndex = -1;\n        point._index++;\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code;\n\n    // Mark as consumed.\n    consumed = true;\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {};\n    token.type = type;\n    token.start = now();\n    context.events.push(['enter', token, context]);\n    stack.push(token);\n    return token;\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop();\n    token.end = now();\n    context.events.push(['exit', token, context]);\n    return token;\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from);\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore();\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   *   Callback.\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   *   Fields.\n   */\n  function constructFactory(onreturn, fields) {\n    return hook;\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | ConstructRecord | Construct} constructs\n     *   Constructs.\n     * @param {State} returnState\n     *   State.\n     * @param {State | undefined} [bogusState]\n     *   State.\n     * @returns {State}\n     *   State.\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {ReadonlyArray<Construct>} */\n      let listOfConstructs;\n      /** @type {number} */\n      let constructIndex;\n      /** @type {Construct} */\n      let currentConstruct;\n      /** @type {Info} */\n      let info;\n      return Array.isArray(constructs) ? /* c8 ignore next 1 */\n      handleListOfConstructs(constructs) : 'tokenize' in constructs ?\n      // Looks like a construct.\n      handleListOfConstructs([(/** @type {Construct} */constructs)]) : handleMapOfConstructs(constructs);\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleMapOfConstructs(map) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          const left = code !== null && map[code];\n          const all = code !== null && map.null;\n          const list = [\n          // To do: add more extension tests.\n          /* c8 ignore next 2 */\n          ...(Array.isArray(left) ? left : left ? [left] : []), ...(Array.isArray(all) ? all : all ? [all] : [])];\n          return handleListOfConstructs(list)(code);\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ReadonlyArray<Construct>} list\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list;\n        constructIndex = 0;\n        if (list.length === 0) {\n          return bogusState;\n        }\n        return handleConstruct(list[constructIndex]);\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       *   Construct.\n       * @returns {State}\n       *   State.\n       */\n      function handleConstruct(construct) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store();\n          currentConstruct = construct;\n          if (!construct.partial) {\n            context.currentConstruct = construct;\n          }\n\n          // Always populated by defaults.\n\n          if (construct.name && context.parser.constructs.disable.null.includes(construct.name)) {\n            return nok(code);\n          }\n          return construct.tokenize.call(\n          // If we do have fields, create an object w/ `context` as its\n          // prototype.\n          // This allows a “live binding”, which is needed for `interrupt`.\n          fields ? Object.assign(Object.create(context), fields) : context, effects, ok, nok)(code);\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true;\n        onreturn(currentConstruct, info);\n        return returnState;\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true;\n        info.restore();\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex]);\n        }\n        return bogusState;\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   *   Construct.\n   * @param {number} from\n   *   From.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct);\n    }\n    if (construct.resolve) {\n      splice(context.events, from, context.events.length - from, construct.resolve(context.events.slice(from), context));\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context);\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   *   Info.\n   */\n  function store() {\n    const startPoint = now();\n    const startPrevious = context.previous;\n    const startCurrentConstruct = context.currentConstruct;\n    const startEventsIndex = context.events.length;\n    const startStack = Array.from(stack);\n    return {\n      from: startEventsIndex,\n      restore\n    };\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     *   Nothing.\n     */\n    function restore() {\n      point = startPoint;\n      context.previous = startPrevious;\n      context.currentConstruct = startCurrentConstruct;\n      context.events.length = startEventsIndex;\n      stack = startStack;\n      accountForPotentialSkip();\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line];\n      point.offset += columnStart[point.line] - 1;\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {Pick<Token, 'end' | 'start'>} token\n *   Token.\n * @returns {Array<Chunk>}\n *   Chunks.\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index;\n  const startBufferIndex = token.start._bufferIndex;\n  const endIndex = token.end._index;\n  const endBufferIndex = token.end._bufferIndex;\n  /** @type {Array<Chunk>} */\n  let view;\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)];\n  } else {\n    view = chunks.slice(startIndex, endIndex);\n    if (startBufferIndex > -1) {\n      const head = view[0];\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex);\n      } else {\n        view.shift();\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex));\n    }\n  }\n  return view;\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {boolean | undefined} [expandTabs=false]\n *   Whether to expand tabs (default: `false`).\n * @returns {string}\n *   Result.\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1;\n  /** @type {Array<string>} */\n  const result = [];\n  /** @type {boolean | undefined} */\n  let atTab;\n  while (++index < chunks.length) {\n    const chunk = chunks[index];\n    /** @type {string} */\n    let value;\n    if (typeof chunk === 'string') {\n      value = chunk;\n    } else switch (chunk) {\n      case -5:\n        {\n          value = \"\\r\";\n          break;\n        }\n      case -4:\n        {\n          value = \"\\n\";\n          break;\n        }\n      case -3:\n        {\n          value = \"\\r\" + \"\\n\";\n          break;\n        }\n      case -2:\n        {\n          value = expandTabs ? \" \" : \"\\t\";\n          break;\n        }\n      case -1:\n        {\n          if (!expandTabs && atTab) continue;\n          value = \" \";\n          break;\n        }\n      default:\n        {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk);\n        }\n    }\n    atTab = chunk === -2;\n    result.push(value);\n  }\n  return result.join('');\n}","/**\n * @import {\n *   Create,\n *   FullNormalizedExtension,\n *   InitialConstruct,\n *   ParseContext,\n *   ParseOptions\n * } from 'micromark-util-types'\n */\n\nimport { combineExtensions } from 'micromark-util-combine-extensions';\nimport { content } from './initialize/content.js';\nimport { document } from './initialize/document.js';\nimport { flow } from './initialize/flow.js';\nimport { string, text } from './initialize/text.js';\nimport * as defaultConstructs from './constructs.js';\nimport { createTokenizer } from './create-tokenizer.js';\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ParseContext}\n *   Parser.\n */\nexport function parse(options) {\n  const settings = options || {};\n  const constructs = /** @type {FullNormalizedExtension} */\n  combineExtensions([defaultConstructs, ...(settings.extensions || [])]);\n\n  /** @type {ParseContext} */\n  const parser = {\n    constructs,\n    content: create(content),\n    defined: [],\n    document: create(document),\n    flow: create(flow),\n    lazy: {},\n    string: create(string),\n    text: create(text)\n  };\n  return parser;\n\n  /**\n   * @param {InitialConstruct} initial\n   *   Construct to start with.\n   * @returns {Create}\n   *   Create a tokenizer.\n   */\n  function create(initial) {\n    return creator;\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from);\n    }\n  }\n}","/**\n * @import {Event} from 'micromark-util-types'\n */\n\nimport { subtokenize } from 'micromark-util-subtokenize';\n\n/**\n * @param {Array<Event>} events\n *   Events.\n * @returns {Array<Event>}\n *   Events.\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events;\n}","/**\n * @import {Chunk, Code, Encoding, Value} from 'micromark-util-types'\n */\n\n/**\n * @callback Preprocessor\n *   Preprocess a value.\n * @param {Value} value\n *   Value.\n * @param {Encoding | null | undefined} [encoding]\n *   Encoding when `value` is a typed array (optional).\n * @param {boolean | null | undefined} [end=false]\n *   Whether this is the last chunk (default: `false`).\n * @returns {Array<Chunk>}\n *   Chunks.\n */\n\nconst search = /[\\0\\t\\n\\r]/g;\n\n/**\n * @returns {Preprocessor}\n *   Preprocess a value.\n */\nexport function preprocess() {\n  let column = 1;\n  let buffer = '';\n  /** @type {boolean | undefined} */\n  let start = true;\n  /** @type {boolean | undefined} */\n  let atCarriageReturn;\n  return preprocessor;\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = [];\n    /** @type {RegExpMatchArray | null} */\n    let match;\n    /** @type {number} */\n    let next;\n    /** @type {number} */\n    let startPosition;\n    /** @type {number} */\n    let endPosition;\n    /** @type {Code} */\n    let code;\n    value = buffer + (typeof value === 'string' ? value.toString() : new TextDecoder(encoding || undefined).decode(value));\n    startPosition = 0;\n    buffer = '';\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++;\n      }\n      start = undefined;\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition;\n      match = search.exec(value);\n      endPosition = match && match.index !== undefined ? match.index : value.length;\n      code = value.charCodeAt(endPosition);\n      if (!match) {\n        buffer = value.slice(startPosition);\n        break;\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3);\n        atCarriageReturn = undefined;\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5);\n          atCarriageReturn = undefined;\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition));\n          column += endPosition - startPosition;\n        }\n        switch (code) {\n          case 0:\n            {\n              chunks.push(65533);\n              column++;\n              break;\n            }\n          case 9:\n            {\n              next = Math.ceil(column / 4) * 4;\n              chunks.push(-2);\n              while (column++ < next) chunks.push(-1);\n              break;\n            }\n          case 10:\n            {\n              chunks.push(-4);\n              column = 1;\n              break;\n            }\n          default:\n            {\n              atCarriageReturn = true;\n              column = 1;\n            }\n        }\n      }\n      startPosition = endPosition + 1;\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5);\n      if (buffer) chunks.push(buffer);\n      chunks.push(null);\n    }\n    return chunks;\n  }\n}","import { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nconst characterEscapeOrReference = /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi;\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode);\n}\n\n/**\n * @param {string} $0\n *   Match.\n * @param {string} $1\n *   Character escape.\n * @param {string} $2\n *   Character reference.\n * @returns {string}\n *   Decoded value\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1;\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0);\n  if (head === 35) {\n    const head = $2.charCodeAt(1);\n    const hex = head === 120 || head === 88;\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10);\n  }\n  return decodeNamedCharacterReference($2) || $0;\n}","/**\n * @import {\n *   Break,\n *   Blockquote,\n *   Code,\n *   Definition,\n *   Emphasis,\n *   Heading,\n *   Html,\n *   Image,\n *   InlineCode,\n *   Link,\n *   ListItem,\n *   List,\n *   Nodes,\n *   Paragraph,\n *   PhrasingContent,\n *   ReferenceType,\n *   Root,\n *   Strong,\n *   Text,\n *   ThematicBreak\n * } from 'mdast'\n * @import {\n *   Encoding,\n *   Event,\n *   Token,\n *   Value\n * } from 'micromark-util-types'\n * @import {Point} from 'unist'\n * @import {\n *   CompileContext,\n *   CompileData,\n *   Config,\n *   Extension,\n *   Handle,\n *   OnEnterError,\n *   Options\n * } from './types.js'\n */\n\nimport { toString } from 'mdast-util-to-string';\nimport { parse, postprocess, preprocess } from 'micromark';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nimport { decodeString } from 'micromark-util-decode-string';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { stringifyPosition } from 'unist-util-stringify-position';\nconst own = {}.hasOwnProperty;\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding;\n    encoding = undefined;\n  }\n  return compiler(options)(postprocess(parse(options).document().write(preprocess()(value, encoding, true))));\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      characterReference: onexitcharacterreference,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  };\n  configure(config, (options || {}).mdastExtensions || []);\n\n  /** @type {CompileData} */\n  const data = {};\n  return compile;\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    };\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    };\n    /** @type {Array<number>} */\n    const listStack = [];\n    let index = -1;\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (events[index][1].type === \"listOrdered\" || events[index][1].type === \"listUnordered\") {\n        if (events[index][0] === 'enter') {\n          listStack.push(index);\n        } else {\n          const tail = listStack.pop();\n          index = prepareList(events, tail, index);\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      const handler = config[events[index][0]];\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(Object.assign({\n          sliceSerialize: events[index][2].sliceSerialize\n        }, context), events[index][1]);\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1];\n      const handler = tail[1] || defaultOnError;\n      handler.call(context, undefined, tail[0]);\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(events.length > 0 ? events[0][1].start : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }),\n      end: point(events.length > 0 ? events[events.length - 2][1].end : {\n        line: 1,\n        column: 1,\n        offset: 0\n      })\n    };\n\n    // Call transforms.\n    index = -1;\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree;\n    }\n    return tree;\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1;\n    let containerBalance = -1;\n    let listSpread = false;\n    /** @type {Token | undefined} */\n    let listItem;\n    /** @type {number | undefined} */\n    let lineIndex;\n    /** @type {number | undefined} */\n    let firstBlankLineIndex;\n    /** @type {boolean | undefined} */\n    let atMarker;\n    while (++index <= length) {\n      const event = events[index];\n      switch (event[1].type) {\n        case \"listUnordered\":\n        case \"listOrdered\":\n        case \"blockQuote\":\n          {\n            if (event[0] === 'enter') {\n              containerBalance++;\n            } else {\n              containerBalance--;\n            }\n            atMarker = undefined;\n            break;\n          }\n        case \"lineEndingBlank\":\n          {\n            if (event[0] === 'enter') {\n              if (listItem && !atMarker && !containerBalance && !firstBlankLineIndex) {\n                firstBlankLineIndex = index;\n              }\n              atMarker = undefined;\n            }\n            break;\n          }\n        case \"linePrefix\":\n        case \"listItemValue\":\n        case \"listItemMarker\":\n        case \"listItemPrefix\":\n        case \"listItemPrefixWhitespace\":\n          {\n            // Empty.\n\n            break;\n          }\n        default:\n          {\n            atMarker = undefined;\n          }\n      }\n      if (!containerBalance && event[0] === 'enter' && event[1].type === \"listItemPrefix\" || containerBalance === -1 && event[0] === 'exit' && (event[1].type === \"listUnordered\" || event[1].type === \"listOrdered\")) {\n        if (listItem) {\n          let tailIndex = index;\n          lineIndex = undefined;\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex];\n            if (tailEvent[1].type === \"lineEnding\" || tailEvent[1].type === \"lineEndingBlank\") {\n              if (tailEvent[0] === 'exit') continue;\n              if (lineIndex) {\n                events[lineIndex][1].type = \"lineEndingBlank\";\n                listSpread = true;\n              }\n              tailEvent[1].type = \"lineEnding\";\n              lineIndex = tailIndex;\n            } else if (tailEvent[1].type === \"linePrefix\" || tailEvent[1].type === \"blockQuotePrefix\" || tailEvent[1].type === \"blockQuotePrefixWhitespace\" || tailEvent[1].type === \"blockQuoteMarker\" || tailEvent[1].type === \"listItemIndent\") {\n              // Empty\n            } else {\n              break;\n            }\n          }\n          if (firstBlankLineIndex && (!lineIndex || firstBlankLineIndex < lineIndex)) {\n            listItem._spread = true;\n          }\n\n          // Fix position.\n          listItem.end = Object.assign({}, lineIndex ? events[lineIndex][1].start : event[1].end);\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]]);\n          index++;\n          length++;\n        }\n\n        // Create a new list item.\n        if (event[1].type === \"listItemPrefix\") {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          };\n          listItem = item;\n          events.splice(index, 0, ['enter', item, event[2]]);\n          index++;\n          length++;\n          firstBlankLineIndex = undefined;\n          atMarker = true;\n        }\n      }\n    }\n    events[start][1]._spread = listSpread;\n    return length;\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token);\n      if (and) and.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['buffer']}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    });\n  }\n\n  /**\n   * @type {CompileContext['enter']}\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children;\n    siblings.push(node);\n    this.stack.push(node);\n    this.tokenStack.push([token, errorHandler || undefined]);\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    };\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token);\n      exit.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['exit']}\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop();\n    const open = this.tokenStack.pop();\n    if (!open) {\n      throw new Error('Cannot close `' + token.type + '` (' + stringifyPosition({\n        start: token.start,\n        end: token.end\n      }) + '): it’s not open');\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0]);\n      } else {\n        const handler = open[1] || defaultOnError;\n        handler.call(this, token, open[0]);\n      }\n    }\n    node.position.end = point(token.end);\n  }\n\n  /**\n   * @type {CompileContext['resume']}\n   */\n  function resume() {\n    return toString(this.stack.pop());\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2];\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10);\n      this.data.expectingFirstListItemValue = undefined;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.lang = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.meta = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return;\n    this.buffer();\n    this.data.flowCodeInside = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '');\n    this.data.flowCodeInside = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.label = label;\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length;\n      node.depth = depth;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = node.children;\n    let tail = siblings[siblings.length - 1];\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text();\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      };\n      siblings.push(tail);\n    }\n    this.stack.push(tail);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop();\n    tail.value += this.sliceSerialize(token);\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1];\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1];\n      tail.position.end = point(token.end);\n      this.data.atHardBreak = undefined;\n      return;\n    }\n    if (!this.data.setextHeadingSlurpLineEnding && config.canContainEols.includes(context.type)) {\n      onenterdata.call(this, token);\n      onexitdata.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token);\n    const ancestor = this.stack[this.stack.length - 2];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string);\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1];\n    const value = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // Assume a reference.\n    this.data.inReference = true;\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children;\n      node.children = children;\n    } else {\n      node.alt = value;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label;\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n    this.data.referenceType = 'full';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token);\n    const type = this.data.characterReferenceType;\n    /** @type {string} */\n    let value;\n    if (type) {\n      value = decodeNumericCharacterReference(data, type === \"characterReferenceMarkerNumeric\" ? 10 : 16);\n      this.data.characterReferenceType = undefined;\n    } else {\n      const result = decodeNamedCharacterReference(data);\n      value = result;\n    }\n    const tail = this.stack[this.stack.length - 1];\n    tail.value += value;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreference(token) {\n    const tail = this.stack.pop();\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = this.sliceSerialize(token);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = 'mailto:' + this.sliceSerialize(token);\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    };\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    };\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    };\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    };\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    };\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    };\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    };\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    };\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    };\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    };\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    };\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    };\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    };\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    };\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  };\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1;\n  while (++index < extensions.length) {\n    const value = extensions[index];\n    if (Array.isArray(value)) {\n      configure(combined, value);\n    } else {\n      extension(combined, value);\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key;\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'transforms':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'enter':\n        case 'exit':\n          {\n            const right = extension[key];\n            if (right) {\n              Object.assign(combined[key], right);\n            }\n            break;\n          }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error('Cannot close `' + left.type + '` (' + stringifyPosition({\n      start: left.start,\n      end: left.end\n    }) + '): a different token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is open');\n  } else {\n    throw new Error('Cannot close document, a token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is still open');\n  }\n}","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(definition.url || ''), alt: node.alt}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(definition.url || '')}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const definition = state.footnoteById.get(\n      state.footnoteOrder[referenceIndex]\n    )\n\n    if (!definition) {\n      continue\n    }\n\n    const content = state.all(definition)\n    const id = String(definition.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(definition, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","// Include `data` fields in mdast and `raw` nodes in hast.\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @import {Root as HastRoot} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {Options as ToHastOptions} from 'mdast-util-to-hast'\n * @import {Processor} from 'unified'\n * @import {VFile} from 'vfile'\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * *   if a processor is given, runs the (rehype) plugins used on it with a\n *     hast tree, then discards the result (*bridge mode*)\n * *   otherwise, returns a hast tree, the plugins used after `remarkRehype`\n *     are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**: It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * *   `rehype-stringify` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful if\n *     you completely trust authors\n * *   `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only way\n *     to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given, configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    // To do: in the future, disallow ` || options` fallback.\n    // With `unified-engine`, `destination` can be `undefined` but\n    // `options` will be the file set.\n    // We should not pass that as `options`.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(destination || options)})\n    )\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const minpath = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [extname]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, extname) {\n  if (extname !== undefined && typeof extname !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (\n    extname === undefined ||\n    extname.length === 0 ||\n    extname.length > path.length\n  ) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (extname === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extnameIndex = extname.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extnameIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === extname.codePointAt(extnameIndex--)) {\n          if (extnameIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extnameIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n      ? '//'\n      : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const minproc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @import {Node, Point, Position} from 'unist'\n * @import {Options as MessageOptions} from 'vfile-message'\n * @import {Compatible, Data, Map, Options, Value} from 'vfile'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {minpath} from '#minpath'\nimport {minproc} from '#minproc'\nimport {urlToPath, isUrl} from '#minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    // Prevent calling `cwd` (which could be expensive) if it’s not needed;\n    // the empty string will be overridden in the next block.\n    this.cwd = 'cwd' in options ? '' : minproc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const field = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        field in options &&\n        options[field] !== undefined &&\n        options[field] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[field] = field === 'history' ? [...options[field]] : options[field]\n      }\n    }\n\n    /** @type {string} */\n    let field\n\n    // Set non-path related properties.\n    for (field in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(field)) {\n        // @ts-expect-error: fine to set other things.\n        this[field] = options[field]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path)\n      : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = minpath.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string'\n      ? minpath.dirname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = minpath.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string'\n      ? minpath.extname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = minpath.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = minpath.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(minpath.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + minpath.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@linkcode CompileResultMap}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@linkcode Node}\n *   and {@linkcode VFile} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@linkcode CompileResultMap}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@linkcode VFile} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@linkcode Node}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@linkcode VFile} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@linkcode VFile}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@linkcode Processor}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > **Note**: to register custom data in TypeScript, augment the\n   * > {@linkcode Data} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","// Register `Raw` in tree:\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-to-jsx-runtime').Components} JsxRuntimeComponents\n * @typedef {import('remark-rehype').Options} RemarkRehypeOptions\n * @typedef {import('unist-util-visit').BuildVisitor<Root>} Visitor\n * @typedef {import('unified').PluggableList} PluggableList\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n *\n * @typedef {Partial<JsxRuntimeComponents>} Components\n *   Map tag names to components.\n *\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n *\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {string | null | undefined} [className]\n *   Wrap in a `div` with this class name.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n *\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\n// @ts-expect-error: untyped.\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {JSX.Element}\n *   React element.\n */\nexport function Markdown(options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const children = options.children || ''\n  const className = options.className\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  const mdastTree = processor.parse(file)\n  /** @type {Nodes} */\n  let hastTree = processor.runSync(mdastTree, file)\n\n  // Wrap in `div` if there’s a class name.\n  if (className) {\n    hastTree = {\n      type: 'element',\n      tagName: 'div',\n      properties: {className},\n      // Assume no doctypes.\n      children: /** @type {Array<ElementContent>} */ (\n        hastTree.type === 'root' ? hastTree.children : [hastTree]\n      )\n    }\n  }\n\n  visit(hastTree, transform)\n\n  return toJsxRuntime(hastTree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {Visitor} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n        ? disallowedElements.includes(node.tagName)\n        : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Text} Text\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[...Array<Parents>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @typedef {RegExp | string} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n *\n * @typedef {[Find, Replace?]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n *\n * @typedef {ReplaceFunction | string | null | undefined} Replace\n *   Thing to replace with.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | null | undefined}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n *\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore (optional).\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param {Nodes} tree\n *   Tree to change.\n * @param {FindAndReplaceList | FindAndReplaceTuple} list\n *   Patterns to find.\n * @param {Options | null | undefined} [options]\n *   Configuration (when `find` is not `Find`).\n * @returns {undefined}\n *   Nothing.\n */\nexport function findAndReplace(tree, list, options) {\n  const settings = options || {}\n  const ignored = convert(settings.ignore || [])\n  const pairs = toPairs(list)\n  let pairIndex = -1\n\n  while (++pairIndex < pairs.length) {\n    visitParents(tree, 'text', visitor)\n  }\n\n  /** @type {import('unist-util-visit-parents').BuildVisitor<Root, 'text'>} */\n  function visitor(node, parents) {\n    let index = -1\n    /** @type {Parents | undefined} */\n    let grandparent\n\n    while (++index < parents.length) {\n      const parent = parents[index]\n      /** @type {Array<Nodes> | undefined} */\n      const siblings = grandparent ? grandparent.children : undefined\n\n      if (\n        ignored(\n          parent,\n          siblings ? siblings.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    if (grandparent) {\n      return handler(node, parents)\n    }\n  }\n\n  /**\n   * Handle a text node which is not in an ignored parent.\n   *\n   * @param {Text} node\n   *   Text node.\n   * @param {Array<Parents>} parents\n   *   Parents.\n   * @returns {VisitorResult}\n   *   Result.\n   */\n  function handler(node, parents) {\n    const parent = parents[parents.length - 1]\n    const find = pairs[pairIndex][0]\n    const replace = pairs[pairIndex][1]\n    let start = 0\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    const index = siblings.indexOf(node)\n    let change = false\n    /** @type {Array<PhrasingContent>} */\n    let nodes = []\n\n    find.lastIndex = 0\n\n    let match = find.exec(node.value)\n\n    while (match) {\n      const position = match.index\n      /** @type {RegExpMatchObject} */\n      const matchObject = {\n        index: match.index,\n        input: match.input,\n        stack: [...parents, node]\n      }\n      let value = replace(...match, matchObject)\n\n      if (typeof value === 'string') {\n        value = value.length > 0 ? {type: 'text', value} : undefined\n      }\n\n      // It wasn’t a match after all.\n      if (value === false) {\n        // False acts as if there was no match.\n        // So we need to reset `lastIndex`, which currently being at the end of\n        // the current match, to the beginning.\n        find.lastIndex = position + 1\n      } else {\n        if (start !== position) {\n          nodes.push({\n            type: 'text',\n            value: node.value.slice(start, position)\n          })\n        }\n\n        if (Array.isArray(value)) {\n          nodes.push(...value)\n        } else if (value) {\n          nodes.push(value)\n        }\n\n        start = position + match[0].length\n        change = true\n      }\n\n      if (!find.global) {\n        break\n      }\n\n      match = find.exec(node.value)\n    }\n\n    if (change) {\n      if (start < node.value.length) {\n        nodes.push({type: 'text', value: node.value.slice(start)})\n      }\n\n      parent.children.splice(index, 1, ...nodes)\n    } else {\n      nodes = [node]\n    }\n\n    return index + nodes.length\n  }\n}\n\n/**\n * Turn a tuple or a list of tuples into pairs.\n *\n * @param {FindAndReplaceList | FindAndReplaceTuple} tupleOrList\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(tupleOrList) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (!Array.isArray(tupleOrList)) {\n    throw new TypeError('Expected find and replace tuple or list of tuples')\n  }\n\n  /** @type {FindAndReplaceList} */\n  // @ts-expect-error: correct.\n  const list =\n    !tupleOrList[0] || Array.isArray(tupleOrList[0])\n      ? tupleOrList\n      : [tupleOrList]\n\n  let index = -1\n\n  while (++index < list.length) {\n    const tuple = list[index]\n    result.push([toExpression(tuple[0]), toFunction(tuple[1])])\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function'\n    ? replace\n    : function () {\n        return replace\n      }\n}\n","/**\n * @import {RegExpMatchObject, ReplaceFunction} from 'mdast-util-find-and-replace'\n * @import {CompileContext, Extension as FromMarkdownExtension, Handle as FromMarkdownHandle, Transform as FromMarkdownTransform} from 'mdast-util-from-markdown'\n * @import {ConstructName, Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n * @import {Link, PhrasingContent} from 'mdast'\n */\n\nimport {ccount} from 'ccount'\nimport {ok as assert} from 'devlop'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralFromMarkdown() {\n  return {\n    transforms: [transformGfmAutolinkLiterals],\n    enter: {\n      literalAutolink: enterLiteralAutolink,\n      literalAutolinkEmail: enterLiteralAutolinkValue,\n      literalAutolinkHttp: enterLiteralAutolinkValue,\n      literalAutolinkWww: enterLiteralAutolinkValue\n    },\n    exit: {\n      literalAutolink: exitLiteralAutolink,\n      literalAutolinkEmail: exitLiteralAutolinkEmail,\n      literalAutolinkHttp: exitLiteralAutolinkHttp,\n      literalAutolinkWww: exitLiteralAutolinkWww\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '@',\n        before: '[+\\\\-.\\\\w]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: '.',\n        before: '[Ww]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: ':',\n        before: '[ps]',\n        after: '\\\\/',\n        inConstruct,\n        notInConstruct\n      }\n    ]\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'link')\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/(?<=^|\\s|\\p{P}|\\p{S})([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/gu, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Array<PhrasingContent> | Link | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    // If it’s an email, the previous character should not be a slash.\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\nimport {ok as assert} from 'devlop'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown() {\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteDefinition')\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteReference')\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteReference')\n  const subexit = state.enter('reference')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteDefinition} node\n */\nfunction footnoteDefinition(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteDefinition')\n  const subexit = state.enter('label')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  value += tracker.move(\n    ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n  )\n  tracker.shift(4)\n  value += tracker.move(\n    state.indentLines(state.containerFlow(node, tracker.current()), map)\n  )\n  exit()\n\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, index, blank) {\n  if (index === 0) {\n    return line\n  }\n\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughFromMarkdown() {\n  return {\n    canContainEols: ['delete'],\n    enter: {strikethrough: enterStrikethrough},\n    exit: {strikethrough: exitStrikethrough}\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '~',\n        inConstruct: 'phrasing',\n        notInConstruct: constructsWithoutStrikethrough\n      }\n    ],\n    handlers: {delete: handleDelete}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  const exit = state.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += state.containerPhrasing(node, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","// To do: next major: remove.\n/**\n * @typedef {Options} MarkdownTableOptions\n *   Configuration.\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [alignDelimiters=true]\n *   Whether to align the delimiters (default: `true`);\n *   they are aligned by default:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {ReadonlyArray<string | null | undefined> | string | null | undefined} [align]\n *   How to align columns (default: `''`);\n *   one style for all columns or styles for their respective columns;\n *   each style is either `'l'` (left), `'r'` (right), or `'c'` (center);\n *   other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left;\n *   *only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean | null | undefined} [delimiterEnd=true]\n *   Whether to end each row with the delimiter (default: `true`).\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean | null | undefined} [delimiterStart=true]\n *   Whether to begin each row with the delimiter (default: `true`).\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean | null | undefined} [padding=true]\n *   Whether to add a space of padding between delimiters and cells\n *   (default: `true`).\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {((value: string) => number) | null | undefined} [stringLength]\n *   Function to detect the length of table cell content (optional);\n *   this is used when aligning the delimiters (`|`) between table cells;\n *   full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source;\n *   to fix this, you can pass this function,\n *   which receives the cell content and returns its “visible” size;\n *   note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @param {string} value\n *   Cell value.\n * @returns {number}\n *   Cell size.\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * Generate a markdown\n * ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables))\n * table.\n *\n * @param {ReadonlyArray<ReadonlyArray<string | null | undefined>>} table\n *   Table data (matrix of strings).\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Result.\n */\nexport function markdownTable(table, options) {\n  const settings = options || {}\n  // To do: next major: change to spread.\n  const align = (settings.align || []).concat()\n  const stringLength = settings.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (settings.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      settings.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (settings.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (settings.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (settings.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        settings.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(settings.alignDelimiters === false && cell === '') &&\n        (settings.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (settings.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (settings.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (settings.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        settings.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      settings.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string | null | undefined} [value]\n *   Value to serialize.\n * @returns {string}\n *   Result.\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string | null | undefined} value\n *   Value.\n * @returns {number}\n *   Alignment.\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n      ? 108 /* `l` */\n      : code === 82 /* `R` */ || code === 114 /* `r` */\n        ? 114 /* `r` */\n        : 0\n}\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * @import {Blockquote, Parents} from 'mdast'\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @import {ConstructName, Unsafe} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @import {Break, Parents} from 'mdast'\n * @import {Info, State} from 'mdast-util-to-markdown'\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Code} from 'mdast'\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {Code, Parents} from 'mdast'\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Definition, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * Encode a code point as a character reference.\n *\n * @param {number} code\n *   Code point to encode.\n * @returns {string}\n *   Encoded character reference.\n */\nexport function encodeCharacterReference(code) {\n  return '&#x' + code.toString(16).toUpperCase() + ';'\n}\n","/**\n * @import {EncodeSides} from '../types.js'\n */\n\nimport {classifyCharacter} from 'micromark-util-classify-character'\n\n/**\n * Check whether to encode (as a character reference) the characters\n * surrounding an attention run.\n *\n * Which characters are around an attention run influence whether it works or\n * not.\n *\n * See <https://github.com/orgs/syntax-tree/discussions/60> for more info.\n * See this markdown in a particular renderer to see what works:\n *\n * ```markdown\n * |                         | A (letter inside) | B (punctuation inside) | C (whitespace inside) | D (nothing inside) |\n * | ----------------------- | ----------------- | ---------------------- | --------------------- | ------------------ |\n * | 1 (letter outside)      | x*y*z             | x*.*z                  | x* *z                 | x**z               |\n * | 2 (punctuation outside) | .*y*.             | .*.*.                  | .* *.                 | .**.               |\n * | 3 (whitespace outside)  | x *y* z           | x *.* z                | x * * z               | x ** z             |\n * | 4 (nothing outside)     | *x*               | *.*                    | * *                   | **                 |\n * ```\n *\n * @param {number} outside\n *   Code point on the outer side of the run.\n * @param {number} inside\n *   Code point on the inner side of the run.\n * @param {'*' | '_'} marker\n *   Marker of the run.\n *   Underscores are handled more strictly (they form less often) than\n *   asterisks.\n * @returns {EncodeSides}\n *   Whether to encode characters.\n */\n// Important: punctuation must never be encoded.\n// Punctuation is solely used by markdown constructs.\n// And by encoding itself.\n// Encoding them will break constructs or double encode things.\nexport function encodeInfo(outside, inside, marker) {\n  const outsideKind = classifyCharacter(outside)\n  const insideKind = classifyCharacter(inside)\n\n  // Letter outside:\n  if (outsideKind === undefined) {\n    return insideKind === undefined\n      ? // Letter inside:\n        // we have to encode *both* letters for `_` as it is looser.\n        // it already forms for `*` (and GFMs `~`).\n        marker === '_'\n        ? {inside: true, outside: true}\n        : {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (letter, whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: encode outer (letter)\n          {inside: false, outside: true}\n  }\n\n  // Whitespace outside:\n  if (outsideKind === 1) {\n    return insideKind === undefined\n      ? // Letter inside: already forms.\n        {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: already forms.\n          {inside: false, outside: false}\n  }\n\n  // Punctuation outside:\n  return insideKind === undefined\n    ? // Letter inside: already forms.\n      {inside: false, outside: false}\n    : insideKind === 1\n      ? // Whitespace inside: encode inner (whitespace).\n        {inside: true, outside: false}\n      : // Punctuation inside: already forms.\n        {inside: false, outside: false}\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Emphasis, Parents} from 'mdast'\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nemphasis.peek = emphasisPeek\n\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Heading} from 'mdast'\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Heading, Parents} from 'mdast'\n */\n\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value = encodeCharacterReference(value.charCodeAt(0)) + value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @import {Html} from 'mdast'\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {Html} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Image, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {ImageReference, Parents} from 'mdast'\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {InlineCode, Parents} from 'mdast'\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Link} from 'mdast'\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Link, Parents} from 'mdast'\n * @import {Exit} from '../types.js'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {LinkReference, Parents} from 'mdast'\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {List, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? bullet === '.'\n      ? ')'\n      : '.'\n    : checkBulletOther(state)\n  let useDifferentMarker =\n    parent && state.bulletLastUsed ? bullet === state.bulletLastUsed : false\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {ListItem, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Paragraph, Parents} from 'mdast'\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > 👉 **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is Exclude<PhrasingContent, Html>} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      // To do: next major: removed since footnotes were added to GFM.\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      // Enabled by `mdast-util-math`:\n      'inlineMath',\n      'link',\n      'linkReference',\n      // Enabled by `mdast-util-mdx`:\n      'mdxJsxTextElement',\n      // Enabled by `mdast-util-mdx`:\n      'mdxTextExpression',\n      'strong',\n      'text',\n      // Enabled by `mdast-util-directive`:\n      'textDirective'\n    ])\n  )\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Root} from 'mdast'\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some(function (d) {\n    return phrasing(d)\n  })\n\n  const container = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  return container.call(state, node, info)\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Strong} from 'mdast'\n */\n\nimport {checkStrong} from '../util/check-strong.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nstrong.peek = strongPeek\n\n/**\n * @param {Strong} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker + marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker + marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Strong} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Text} from 'mdast'\n */\n\n/**\n * @param {Text} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Parents, ThematicBreak} from 'mdast'\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').TableRow} TableRow\n *\n * @typedef {import('markdown-table').Options} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').State} State\n * @typedef {import('mdast-util-to-markdown').Info} Info\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells (default:\n *   `true`).\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters (default: `true`).\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells (optional).\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownTable} from 'markdown-table'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM tables in\n * markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM tables.\n */\nexport function gfmTableFromMarkdown() {\n  return {\n    enter: {\n      table: enterTable,\n      tableData: enterCell,\n      tableHeader: enterCell,\n      tableRow: enterRow\n    },\n    exit: {\n      codeText: exitCodeText,\n      table: exitTable,\n      tableData: exit,\n      tableHeader: exit,\n      tableRow: exit\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  const align = token._align\n  assert(align, 'expected `_align` on table')\n  this.enter(\n    {\n      type: 'table',\n      align: align.map(function (d) {\n        return d === 'none' ? null : d\n      }),\n      children: []\n    },\n    token\n  )\n  this.data.inTable = true\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.data.inTable = undefined\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.data.inTable) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'inlineCode')\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      inlineCode: inlineCodeWithTable,\n      table: handleTable,\n      tableCell: handleTableCell,\n      tableRow: handleTableRow\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, state, info) {\n    return serializeData(handleTableAsData(node, state, info), node.align)\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, state, info) {\n    const row = handleTableRowAsData(node, state, info)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, state, info) {\n    const exit = state.enter('tableCell')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...info,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = state.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(children[index], state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableRowAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = state.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(children[index], node, state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, state) {\n    let value = defaultHandlers.inlineCode(node, parent, state)\n\n    if (state.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {ok as assert} from 'devlop'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM task\n * list items in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemFromMarkdown() {\n  return {\n    exit: {\n      taskListCheckValueChecked: exitCheck,\n      taskListCheckValueUnchecked: exitCheck,\n      paragraph: exitParagraphWithTaskListItem\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM task list\n * items in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemToMarkdown() {\n  return {\n    unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n    handlers: {listItem: listItemWithTaskListItem}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  const node = this.stack[this.stack.length - 2]\n  assert(node.type === 'listItem')\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = this.stack[this.stack.length - 2]\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node.type === 'paragraph')\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, state, info) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = state.createTracker(info)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = defaultHandlers.listItem(node, parent, state, {\n    ...info,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * @typedef {import('mdast-util-gfm-table').Options} Options\n *   Configuration.\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown(),\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown(),\n    gfmTableFromMarkdown(),\n    gfmTaskListItemFromMarkdown()\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown(),\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown(),\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown()\n    ]\n  }\n}\n","/**\n * @import {Code, ConstructRecord, Event, Extension, Previous, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { asciiAlpha, asciiAlphanumeric, asciiControl, markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\nconst wwwPrefix = {\n  tokenize: tokenizeWwwPrefix,\n  partial: true\n};\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n};\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n};\nconst trail = {\n  tokenize: tokenizeTrail,\n  partial: true\n};\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n};\nconst wwwAutolink = {\n  name: 'wwwAutolink',\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n};\nconst protocolAutolink = {\n  name: 'protocolAutolink',\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n};\nconst emailAutolink = {\n  name: 'emailAutolink',\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n};\n\n/** @type {ConstructRecord} */\nconst text = {};\n\n/**\n * Create an extension for `micromark` to support GitHub autolink literal\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   autolink literal syntax.\n */\nexport function gfmAutolinkLiteral() {\n  return {\n    text\n  };\n}\n\n/** @type {Code} */\nlet code = 48;\n\n// Add alphanumerics.\nwhile (code < 123) {\n  text[code] = emailAutolink;\n  code++;\n  if (code === 58) code = 65;else if (code === 91) code = 97;\n}\ntext[43] = emailAutolink;\ntext[45] = emailAutolink;\ntext[46] = emailAutolink;\ntext[95] = emailAutolink;\ntext[72] = [emailAutolink, protocolAutolink];\ntext[104] = [emailAutolink, protocolAutolink];\ntext[87] = [emailAutolink, wwwAutolink];\ntext[119] = [emailAutolink, wwwAutolink];\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this;\n  /** @type {boolean | undefined} */\n  let dot;\n  /** @type {boolean} */\n  let data;\n  return start;\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (!gfmAtext(code) || !previousEmail.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkEmail');\n    return atext(code);\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code);\n      return atext;\n    }\n    if (code === 64) {\n      effects.consume(code);\n      return emailDomain;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === 46) {\n      return effects.check(emailDomainDotTrail, emailDomainAfter, emailDomainDot)(code);\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      data = true;\n      effects.consume(code);\n      return emailDomain;\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code);\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code);\n    dot = true;\n    return emailDomain;\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail');\n      effects.exit('literalAutolink');\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this;\n  return wwwStart;\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (code !== 87 && code !== 119 || !previousWww.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkWww');\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(wwwPrefix, effects.attempt(domain, effects.attempt(path, wwwAfter), nok), nok)(code);\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this;\n  let buffer = '';\n  let seen = false;\n  return protocolStart;\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if ((code === 72 || code === 104) && previousProtocol.call(self, self.previous) && !previousUnbalanced(self.events)) {\n      effects.enter('literalAutolink');\n      effects.enter('literalAutolinkHttp');\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    if (code === 58) {\n      const protocol = buffer.toLowerCase();\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code);\n        return protocolSlashesInside;\n      }\n    }\n    return nok(code);\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === 47) {\n      effects.consume(code);\n      if (seen) {\n        return afterProtocol;\n      }\n      seen = true;\n      return protocolSlashesInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === null || asciiControl(code) || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || unicodePunctuation(code) ? nok(code) : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code);\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0;\n  return wwwPrefixInside;\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === 87 || code === 119) && size < 3) {\n      size++;\n      effects.consume(code);\n      return wwwPrefixInside;\n    }\n    if (code === 46 && size === 3) {\n      effects.consume(code);\n      return wwwPrefixAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === null ? nok(code) : ok(code);\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment;\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment;\n  /** @type {boolean | undefined} */\n  let seen;\n  return domainInside;\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === 46 || code === 95) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code);\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || code !== 45 && unicodePunctuation(code)) {\n      return domainAfter(code);\n    }\n    seen = true;\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === 95) {\n      underscoreInLastSegment = true;\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment;\n      underscoreInLastSegment = undefined;\n    }\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code);\n    }\n    return ok(code);\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0;\n  let sizeClose = 0;\n  return pathInside;\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === 40) {\n      sizeOpen++;\n      effects.consume(code);\n      return pathInside;\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === 41 && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code);\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (code === 33 || code === 34 || code === 38 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 60 || code === 63 || code === 93 || code === 95 || code === 126) {\n      return effects.check(trail, ok, pathAtPunctuation)(code);\n    }\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === 41) {\n      sizeClose++;\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail;\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (code === 33 || code === 34 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 63 || code === 95 || code === 126) {\n      effects.consume(code);\n      return trail;\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === 38) {\n      effects.consume(code);\n      return trailCharacterReferenceStart;\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === 93) {\n      effects.consume(code);\n      return trailBracketAfter;\n    }\n    if (\n    // `<` is an end.\n    code === 60 ||\n    // So is whitespace.\n    code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (code === null || code === 40 || code === 91 || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return trail(code);\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharacterReferenceInside(code) : nok(code);\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === 59) {\n      effects.consume(code);\n      return trail;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return trailCharacterReferenceInside;\n    }\n\n    // It’s not a trail.\n    return nok(code);\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start;\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code);\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return code === null || code === 40 || code === 42 || code === 95 || code === 91 || code === 93 || code === 126 || markdownLineEndingOrSpace(code);\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code);\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === 47 || gfmAtext(code));\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return code === 43 || code === 45 || code === 46 || code === 95 || asciiAlphanumeric(code);\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length;\n  let result = false;\n  while (index--) {\n    const token = events[index][1];\n    if ((token.type === 'labelLink' || token.type === 'labelImage') && !token._balanced) {\n      result = true;\n      break;\n    }\n\n    // If we’ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false;\n      break;\n    }\n  }\n  if (events.length > 0 && !result) {\n    // Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true;\n  }\n  return result;\n}","/**\n * @import {Event, Exiter, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { blankLine } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n};\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        name: 'gfmFootnoteDefinition',\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        name: 'gfmFootnoteCall',\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        name: 'gfmPotentialFootnoteCall',\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  };\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {Token} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1];\n    if (token.type === \"labelImage\") {\n      labelStart = token;\n      break;\n    }\n\n    // Exit if we’ve walked far enough.\n    if (token.type === 'gfmFootnoteCall' || token.type === \"labelLink\" || token.type === \"label\" || token.type === \"image\" || token.type === \"link\") {\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code);\n    }\n    const id = normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    }));\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code);\n    }\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return ok(code);\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length;\n  /** @type {Token | undefined} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    if (events[index][1].type === \"labelImage\" && events[index][0] === 'enter') {\n      labelStart = events[index][1];\n      break;\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = \"data\";\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker';\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  };\n  // Increment the end 1 character.\n  marker.end.column++;\n  marker.end.offset++;\n  marker.end._bufferIndex++;\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  };\n  /** @type {Token} */\n  const chunk = {\n    type: \"chunkString\",\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  };\n\n  /** @type {Array<Event>} */\n  const replacement = [\n  // Take the `labelImageMarker` (now `data`, the `!`)\n  events[index + 1], events[index + 2], ['enter', call, context],\n  // The `[`\n  events[index + 3], events[index + 4],\n  // The `^`.\n  ['enter', marker, context], ['exit', marker, context],\n  // Everything in between.\n  ['enter', string, context], ['enter', chunk, context], ['exit', chunk, context], ['exit', string, context],\n  // The ending (`]`, properly parsed and labelled).\n  events[events.length - 2], events[events.length - 1], ['exit', call, context]];\n  events.splice(index, events.length - index + 1, ...replacement);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  let size = 0;\n  /** @type {boolean} */\n  let data;\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start;\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall');\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return callStart;\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code);\n    effects.enter('gfmFootnoteCallMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallMarker');\n    effects.enter('gfmFootnoteCallString');\n    effects.enter('chunkString').contentType = 'string';\n    return callData;\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteCallString');\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code);\n      }\n      effects.enter('gfmFootnoteCallLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteCallLabelMarker');\n      effects.exit('gfmFootnoteCall');\n      return ok;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? callEscape : callData;\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return callData;\n    }\n    return callData(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {string} */\n  let identifier;\n  let size = 0;\n  /** @type {boolean | undefined} */\n  let data;\n  return start;\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true;\n    effects.enter('gfmFootnoteDefinitionLabel');\n    effects.enter('gfmFootnoteDefinitionLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteDefinitionLabelMarker');\n    return labelAtMarker;\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionMarker');\n      effects.enter('gfmFootnoteDefinitionLabelString');\n      effects.enter('chunkString').contentType = 'string';\n      return labelInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteDefinitionLabelString');\n      identifier = normalizeIdentifier(self.sliceSerialize(token));\n      effects.enter('gfmFootnoteDefinitionLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionLabelMarker');\n      effects.exit('gfmFootnoteDefinitionLabel');\n      return labelAfter;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker');\n      effects.consume(code);\n      effects.exit('definitionMarker');\n      if (!defined.includes(identifier)) {\n        defined.push(identifier);\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(effects, whitespaceAfter, 'gfmFootnoteDefinitionWhitespace');\n    }\n    return nok(code);\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok));\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition');\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, 'gfmFootnoteDefinitionIndent', 4 + 1);\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === 'gfmFootnoteDefinitionIndent' && tail[2].sliceSerialize(tail[1], true).length === 4 ? ok(code) : nok(code);\n  }\n}","/**\n * @import {Options} from 'micromark-extension-gfm-strikethrough'\n * @import {Event, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options={}]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {};\n  let single = options_.singleTilde;\n  const tokenizer = {\n    name: 'strikethrough',\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  };\n  if (single === null || single === undefined) {\n    single = true;\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  };\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1;\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (events[index][0] === 'enter' && events[index][1].type === 'strikethroughSequenceTemporary' && events[index][1]._close) {\n        let open = index;\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (events[open][0] === 'exit' && events[open][1].type === 'strikethroughSequenceTemporary' && events[open][1]._open &&\n          // If the sizes are the same:\n          events[index][1].end.offset - events[index][1].start.offset === events[open][1].end.offset - events[open][1].start.offset) {\n            events[index][1].type = 'strikethroughSequence';\n            events[open][1].type = 'strikethroughSequence';\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            };\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            };\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [['enter', strikethrough, context], ['enter', events[open][1], context], ['exit', events[open][1], context], ['enter', text, context]];\n            const insideSpan = context.parser.constructs.insideSpan.null;\n            if (insideSpan) {\n              // Between.\n              splice(nextEvents, nextEvents.length, 0, resolveAll(insideSpan, events.slice(open + 1, index), context));\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [['exit', text, context], ['enter', events[index][1], context], ['exit', events[index][1], context], ['exit', strikethrough, context]]);\n            splice(events, open - 1, index - open + 3, nextEvents);\n            index = open + nextEvents.length - 2;\n            break;\n          }\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = \"data\";\n      }\n    }\n    return events;\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous;\n    const events = this.events;\n    let size = 0;\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      if (previous === 126 && events[events.length - 1][1].type !== \"characterEscape\") {\n        return nok(code);\n      }\n      effects.enter('strikethroughSequenceTemporary');\n      return more(code);\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous);\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code);\n        effects.consume(code);\n        size++;\n        return more;\n      }\n      if (size < 2 && !single) return nok(code);\n      const token = effects.exit('strikethroughSequenceTemporary');\n      const after = classifyCharacter(code);\n      token._open = !after || after === 2 && Boolean(before);\n      token._close = !before || before === 2 && Boolean(after);\n      return ok(code);\n    }\n  }\n}","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it’s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it’s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = [];\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {undefined}\n   */\n  add(index, remove, add) {\n    addImplementation(this, index, remove, add);\n  }\n\n  // To do: add this when moving to `micromark`.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {undefined}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImplementation(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {undefined}\n   */\n  consume(events) {\n    this.map.sort(function (a, b) {\n      return a[0] - b[0];\n    });\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return;\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length;\n    /** @type {Array<Array<Event>>} */\n    const vecs = [];\n    while (index > 0) {\n      index -= 1;\n      vecs.push(events.slice(this.map[index][0] + this.map[index][1]), this.map[index][2]);\n\n      // Truncate rest.\n      events.length = this.map[index][0];\n    }\n    vecs.push([...events]);\n    events.length = 0;\n    let slice = vecs.pop();\n    while (slice) {\n      events.push(...slice);\n      slice = vecs.pop();\n    }\n\n    // Truncate everything.\n    this.map.length = 0;\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {undefined}\n */\nfunction addImplementation(editMap, at, remove, add) {\n  let index = 0;\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return;\n  }\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove;\n\n      // To do: before not used by tables, use when moving to micromark.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add);\n      // }\n\n      return;\n    }\n    index += 1;\n  }\n  editMap.map.push([at, remove, add]);\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n/**\n * @typedef {'center' | 'left' | 'none' | 'right'} Align\n */\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Readonly<Array<Event>>} events\n *   List of events.\n * @param {number} index\n *   Table enter event.\n * @returns {Array<Align>}\n *   List of aligns.\n */\nexport function gfmTableAlign(events, index) {\n  let inDelimiterRow = false;\n  /** @type {Array<Align>} */\n  const align = [];\n  while (index < events.length) {\n    const event = events[index];\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(events[index + 1][1].type === 'tableDelimiterMarker' ? 'left' : 'none');\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1;\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right';\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break;\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true;\n    }\n    index += 1;\n  }\n  return align;\n}","/**\n * @import {Event, Extension, Point, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { EditMap } from './edit-map.js';\nimport { gfmTableAlign } from './infer.js';\n\n/**\n * Create an HTML extension for `micromark` to support GitHub tables syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   table syntax.\n */\nexport function gfmTable() {\n  return {\n    flow: {\n      null: {\n        name: 'table',\n        tokenize: tokenizeTable,\n        resolveAll: resolveTable\n      }\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  let sizeB = 0;\n  /** @type {boolean | undefined} */\n  let seen;\n  return start;\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1;\n    while (index > -1) {\n      const type = self.events[index][1].type;\n      if (type === \"lineEnding\" ||\n      // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n      type === \"linePrefix\") index--;else break;\n    }\n    const tail = index > -1 ? self.events[index][1].type : null;\n    const next = tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore;\n\n    // Don’t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    return next(code);\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead');\n    effects.enter('tableRow');\n    return headRowStart(code);\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === 124) {\n      return headRowBreak(code);\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true;\n    // Count the first character, that isn’t a pipe, double.\n    sizeB += 1;\n    return headRowBreak(code);\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === null) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it’s fine.\n      if (sizeB > 1) {\n        sizeB = 0;\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true;\n        effects.exit('tableRow');\n        effects.enter(\"lineEnding\");\n        effects.consume(code);\n        effects.exit(\"lineEnding\");\n        return headDelimiterStart;\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, \"whitespace\")(code);\n    }\n    sizeB += 1;\n    if (seen) {\n      seen = false;\n      // Header cell count.\n      size += 1;\n    }\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      // Whether a delimiter was seen.\n      seen = true;\n      return headRowBreak;\n    }\n\n    // Anything else is cell data.\n    effects.enter(\"data\");\n    return headRowData(code);\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return headRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? headRowEscape : headRowData;\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return headRowData;\n    }\n    return headRowData(code);\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false;\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    effects.enter('tableDelimiterRow');\n    // Track if we’ve seen a `:` or `|`.\n    seen = false;\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return headDelimiterBefore(code);\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === 45 || code === 58) {\n      return headDelimiterValueBefore(code);\n    }\n    if (code === 124) {\n      seen = true;\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return headDelimiterCellBefore;\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterValueBefore, \"whitespace\")(code);\n    }\n    return headDelimiterValueBefore(code);\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === 58) {\n      sizeB += 1;\n      seen = true;\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterLeftAlignmentAfter;\n    }\n\n    // Align: none.\n    if (code === 45) {\n      sizeB += 1;\n      // To do: seems weird that this *isn’t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller');\n      return headDelimiterFiller(code);\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return headDelimiterFiller;\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === 58) {\n      seen = true;\n      effects.exit('tableDelimiterFiller');\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterRightAlignmentAfter;\n    }\n    effects.exit('tableDelimiterFiller');\n    return headDelimiterRightAlignmentAfter(code);\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterCellAfter, \"whitespace\")(code);\n    }\n    return headDelimiterCellAfter(code);\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === 124) {\n      return headDelimiterBefore(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it’s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code);\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow');\n      effects.exit('tableHead');\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n    return nok(code);\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we’re here, we’re\n    // never at whitespace.\n    effects.enter('tableRow');\n    return bodyRowBreak(code);\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return bodyRowBreak;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('tableRow');\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, \"whitespace\")(code);\n    }\n\n    // Anything else is cell content.\n    effects.enter(\"data\");\n    return bodyRowData(code);\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return bodyRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? bodyRowEscape : bodyRowData;\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return bodyRowData;\n    }\n    return bodyRowData(code);\n  }\n}\n\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1;\n  let inFirstCellAwaitingPipe = true;\n  /** @type {RowKind} */\n  let rowKind = 0;\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0];\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0];\n  let afterHeadAwaitingFirstBodyRow = false;\n  let lastTableEnd = 0;\n  /** @type {Token | undefined} */\n  let currentTable;\n  /** @type {Token | undefined} */\n  let currentBody;\n  /** @type {Token | undefined} */\n  let currentCell;\n  const map = new EditMap();\n  while (++index < events.length) {\n    const event = events[index];\n    const token = event[1];\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false;\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n          currentBody = undefined;\n          lastTableEnd = 0;\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        };\n        map.add(index, 0, [['enter', currentTable, context]]);\n      } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n        inFirstCellAwaitingPipe = true;\n        currentCell = undefined;\n        lastCell = [0, 0, 0, 0];\n        cell = [0, index + 1, 0, 0];\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false;\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          };\n          map.add(index, 0, [['enter', currentBody, context]]);\n        }\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1;\n      }\n      // Cell data.\n      else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n        inFirstCellAwaitingPipe = false;\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n            lastCell = [0, 0, 0, 0];\n          }\n          cell[2] = index;\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false;\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n          }\n          lastCell = cell;\n          cell = [lastCell[1], index, 0, 0];\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true;\n      lastTableEnd = index;\n    } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n      lastTableEnd = index;\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1];\n        currentCell = flushCell(map, context, lastCell, rowKind, index, currentCell);\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell);\n      }\n      rowKind = 0;\n    } else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n      cell[3] = index;\n    }\n  }\n  if (lastTableEnd !== 0) {\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n  }\n  map.consume(context.events);\n\n  // To do: move this into `html`, when events are exposed there.\n  // That’s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1;\n  while (++index < context.events.length) {\n    const event = context.events[index];\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index);\n    }\n  }\n  return events;\n}\n\n/**\n * Generate a cell.\n *\n * @param {EditMap} map\n * @param {Readonly<TokenizeContext>} context\n * @param {Readonly<Range>} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName = rowKind === 1 ? 'tableHeader' : rowKind === 2 ? 'tableDelimiter' : 'tableData';\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent';\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]));\n    map.add(range[0], 0, [['exit', previousCell, context]]);\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1]);\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  };\n  map.add(range[1], 0, [['enter', previousCell, context]]);\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2]);\n    const relatedEnd = getPoint(context.events, range[3]);\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    };\n    map.add(range[2], 0, [['enter', valueToken, context]]);\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]];\n      const end = context.events[range[3]];\n      start[1].end = Object.assign({}, end[1].end);\n      start[1].type = \"chunkText\";\n      start[1].contentType = \"text\";\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1;\n        const b = range[3] - range[2] - 1;\n        map.add(a, b, []);\n      }\n    }\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]]);\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two “between” parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd));\n    map.add(rowEnd, 0, [['exit', previousCell, context]]);\n    previousCell = undefined;\n  }\n  return previousCell;\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {Readonly<EditMap>} map\n * @param {Readonly<TokenizeContext>} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = [];\n  const related = getPoint(context.events, index);\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related);\n    exits.push(['exit', tableBody, context]);\n  }\n  table.end = Object.assign({}, related);\n  exits.push(['exit', table, context]);\n  map.add(index + 1, 0, exits);\n}\n\n/**\n * @param {Readonly<Array<Event>>} events\n * @param {number} index\n * @returns {Readonly<Point>}\n */\nfunction getPoint(events, index) {\n  const event = events[index];\n  const side = event[0] === 'enter' ? 'start' : 'end';\n  return event[1][side];\n}","/**\n * @import {Extension, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nconst tasklistCheck = {\n  name: 'tasklistCheck',\n  tokenize: tokenizeTasklistCheck\n};\n\n/**\n * Create an HTML extension for `micromark` to support GFM task list items\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM task list items when serializing to HTML.\n */\nexport function gfmTaskListItem() {\n  return {\n    text: {\n      [91]: tasklistCheck\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this;\n  return open;\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n    // Exit if there’s stuff before.\n    self.previous !== null ||\n    // Exit if not in the first content that is the first child of a list\n    // item.\n    !self._gfmTasklistFirstContentOfListItem) {\n      return nok(code);\n    }\n    effects.enter('taskListCheck');\n    effects.enter('taskListCheckMarker');\n    effects.consume(code);\n    effects.exit('taskListCheckMarker');\n    return inside;\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueUnchecked');\n      return close;\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueChecked');\n      return close;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker');\n      effects.consume(code);\n      effects.exit('taskListCheckMarker');\n      effects.exit('taskListCheck');\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code);\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check({\n        tokenize: spaceThenNonSpace\n      }, ok, nok)(code);\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, \"whitespace\");\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code);\n  }\n}","/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral(),\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable(),\n    gfmTaskListItem()\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml(),\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml(),\n    gfmTableHtml(),\n    gfmTagfilterHtml(),\n    gfmTaskListItemHtml()\n  ])\n}\n","/// <reference types=\"remark-parse\" />\n/// <reference types=\"remark-stringify\" />\n\n/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-gfm').Options} MdastOptions\n * @typedef {import('micromark-extension-gfm').Options} MicromarkOptions\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {MicromarkOptions & MdastOptions} Options\n *   Configuration.\n */\n\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\nimport {gfm} from 'micromark-extension-gfm'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add support GFM (autolink literals, footnotes, strikethrough, tables,\n * tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkGfm(options) {\n  // @ts-expect-error: TS is wrong about `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {Processor} */ (this)\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(gfm(settings))\n  fromMarkdownExtensions.push(gfmFromMarkdown())\n  toMarkdownExtensions.push(gfmToMarkdown(settings))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n */\n\n/**\n * @template {string} SimpleSelector\n *   Selector type.\n * @template {string} DefaultTagName\n *   Default tag name.\n * @typedef {(\n *   SimpleSelector extends ''\n *     ? DefaultTagName\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends string\n *     ? SimpleSelector\n *     : DefaultTagName\n * )} ExtractTagName\n *   Extract tag name from a simple selector.\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name (default: `'div'`).\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector (optional).\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: tag name is parsed.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Element | Root} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {number | string} StyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, StyleValue>} Style\n *   Supported value of a `style` prop.\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\n *   Primitive property value.\n * @typedef {Array<number | string>} ArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: PropertyValue | Style}} Properties\n *   Acceptable value for element properties.\n *\n * @typedef {number | string | null | undefined} PrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\n *   List of children.\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\n *   List of children (deep).\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\n *   Acceptable child value.\n */\n\nimport {parse as commas} from 'comma-separated-tokens'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {find, normalize} from 'property-information'\nimport {parse as spaces} from 'space-separated-tokens'\n\nconst buttonTypes = new Set(['button', 'menu', 'reset', 'submit'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n *   Schema to use.\n * @param {string} defaultTagName\n *   Default tag name.\n * @param {Array<string> | undefined} [caseSensitive]\n *   Case-sensitive tag names (default: `undefined`).\n * @returns\n *   `h`.\n */\nexport function createH(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  /**\n   * Hyperscript compatible DSL for creating virtual hast trees.\n   *\n   * @overload\n   * @param {null | undefined} [selector]\n   * @param {...Child} children\n   * @returns {Root}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {Properties} properties\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @param {string | null | undefined} [selector]\n   *   Selector.\n   * @param {Child | Properties | null | undefined} [properties]\n   *   Properties (or first child) (default: `undefined`).\n   * @param {...Child} children\n   *   Children.\n   * @returns {Result}\n   *   Result.\n   */\n  function h(selector, properties, ...children) {\n    let index = -1\n    /** @type {Result} */\n    let node\n\n    if (selector === undefined || selector === null) {\n      node = {type: 'root', children: []}\n      // Properties are not supported for roots.\n      const child = /** @type {Child} */ (properties)\n      children.unshift(child)\n    } else {\n      node = parseSelector(selector, defaultTagName)\n      // Normalize the name.\n      node.tagName = node.tagName.toLowerCase()\n      if (adjust && own.call(adjust, node.tagName)) {\n        node.tagName = adjust[node.tagName]\n      }\n\n      // Handle props.\n      if (isProperties(properties, node.tagName)) {\n        /** @type {string} */\n        let key\n\n        for (key in properties) {\n          if (own.call(properties, key)) {\n            addProperty(schema, node.properties, key, properties[key])\n          }\n        }\n      } else {\n        children.unshift(properties)\n      }\n    }\n\n    // Handle children.\n    while (++index < children.length) {\n      addChild(node.children, children[index])\n    }\n\n    if (node.type === 'element' && node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  return h\n}\n\n/**\n * Check if something is properties or a child.\n *\n * @param {Child | Properties} value\n *   Value to check.\n * @param {string} name\n *   Tag name.\n * @returns {value is Properties}\n *   Whether `value` is a properties object.\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n *   Schema.\n * @param {Properties} properties\n *   Properties object.\n * @param {string} key\n *   Property name.\n * @param {PropertyValue | Style} value\n *   Property value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {PropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<number | string>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // Assume no booleans in array.\n      const value = /** @type {number | string} */ (\n        parsePrimitive(info, info.property, result[index])\n      )\n      finalResult[index] = value\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // Assume no booleans in `className`.\n    const value = /** @type {number | string} */ (result)\n    result = properties.className.concat(value)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<RootContent>} nodes\n *   Children.\n * @param {Child} value\n *   Child.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n *   Property information.\n * @param {string} name\n *   Property name.\n * @param {PrimitiveValue} value\n *   Property value.\n * @returns {PrimitiveValue}\n *   Property value.\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {Style} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * @typedef {import('./create-h.js').Child} Child\n *   Acceptable child value.\n * @typedef {import('./create-h.js').Properties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./create-h.js').Result} Result\n *   Result from a `h` (or `s`) call.\n */\n\n// Register the JSX namespace on `h`.\n/**\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n */\n\n// Register the JSX namespace on `s`.\n/**\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n */\n\nimport {html, svg} from 'property-information'\nimport {createH} from './create-h.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const h = createH(html, 'div')\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\n","/**\n * @import {VFile, Value} from 'vfile'\n * @import {Location} from 'vfile-location'\n */\n\n/**\n * Create an index of the given document to translate between line/column and\n * offset based positional info.\n *\n * Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n * [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /**\n   * List, where each index is a line number (0-based), and each value is the\n   * byte index *after* where the line ends.\n   *\n   * @type {Array<number>}\n   */\n  const indices = []\n\n  return {toOffset, toPoint}\n\n  /** @type {Location['toPoint']} */\n  function toPoint(offset) {\n    if (typeof offset === 'number' && offset > -1 && offset <= value.length) {\n      let index = 0\n\n      while (true) {\n        let end = indices[index]\n\n        if (end === undefined) {\n          const eol = next(value, indices[index - 1])\n          end = eol === -1 ? value.length + 1 : eol + 1\n          indices[index] = end\n        }\n\n        if (end > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n\n        index++\n      }\n    }\n  }\n\n  /** @type {Location['toOffset']} */\n  function toOffset(point) {\n    if (\n      point &&\n      typeof point.line === 'number' &&\n      typeof point.column === 'number' &&\n      !Number.isNaN(point.line) &&\n      !Number.isNaN(point.column)\n    ) {\n      while (indices.length < point.line) {\n        const from = indices[indices.length - 1]\n        const eol = next(value, from)\n        const end = eol === -1 ? value.length + 1 : eol + 1\n        if (from === end) break\n        indices.push(end)\n      }\n\n      const offset =\n        (point.line > 1 ? indices[point.line - 2] : 0) + point.column - 1\n      // The given `column` could not exist on this line.\n      if (offset < indices[point.line - 1]) return offset\n    }\n  }\n}\n\n/**\n * @param {string} value\n * @param {number} from\n */\nfunction next(value, from) {\n  const cr = value.indexOf('\\r', from)\n  const lf = value.indexOf('\\n', from)\n  if (lf === -1) return cr\n  if (cr === -1 || cr + 1 === lf) return lf\n  return cr < lf ? cr : lf\n}\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementData} ElementData\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').Token.ElementLocation} P5ElementLocation\n * @typedef {import('parse5').Token.Location} P5Location\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n *\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5DocumentFragment\n * @typedef {DefaultTreeAdapterMap['documentType']} P5DocumentType\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\n * @typedef {DefaultTreeAdapterMap['template']} P5Template\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {VFile | null | undefined} [file]\n *   File used to add positional info to nodes (optional).\n *\n *   If given, the file should represent the original HTML source.\n * @property {boolean | null | undefined} [verbose=false]\n *   Whether to add extra positional info about starting tags, closing tags,\n *   and attributes to elements (default: `false`).\n *\n *   > 👉 **Note**: only used when `file` is given.\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean} location\n *   Whether location info was found.\n * @property {Schema} schema\n *   Current schema.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n */\n\nimport {ok as assert} from 'devlop'\nimport {h, s} from 'hastscript'\nimport {find, html, svg} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {P5Node} tree\n *   `parse5` tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const settings = options || {}\n\n  return one(\n    {\n      file: settings.file || undefined,\n      location: false,\n      schema: settings.space === 'svg' ? svg : html,\n      verbose: settings.verbose || false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} node\n *   p5 node.\n * @returns {Nodes}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Nodes} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {P5Comment} */ (node)\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference = /** @type {P5Document | P5DocumentFragment} */ (node)\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const doc = String(state.file)\n        const loc = location(doc)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(doc.length)\n        // Always defined as we give valid input.\n        assert(start, 'expected `start`')\n        assert(end, 'expected `end`')\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {P5DocumentType} */ (node)\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {P5Text} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {P5Element} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<P5Node>} nodes\n *   Nodes.\n * @returns {Array<RootContent>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<RootContent>} */\n  const results = []\n\n  while (++index < nodes.length) {\n    // Assume no roots in `nodes`.\n    const result = /** @type {RootContent} */ (one(state, nodes[index]))\n    results.push(result)\n  }\n\n  return results\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Element} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const props = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      props[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const fn = state.schema.space === 'svg' ? s : h\n  const result = fn(node.tagName, props, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {P5Template} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    // Root in, root out.\n    const content = /** @type {Root} */ (one(state, reference.content))\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} from\n *   p5 node.\n * @param {Nodes} to\n *   hast node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   hast node.\n * @param {P5ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const props = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            props[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      assert(location.startTag, 'a start tag should exist')\n      const opening = position(location.startTag)\n      const closing = location.endTag ? position(location.endTag) : undefined\n      /** @type {ElementData['position']} */\n      const data = {opening}\n      if (closing) data.closing = closing\n      data.properties = props\n\n      node.data = {position: data}\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {P5Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n\n  // @ts-expect-error: we do use `undefined` for points if one or the other\n  // exists.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap['document']} Parse5Document\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentFragment']} Parse5Fragment\n * @typedef {import('parse5').DefaultTreeAdapterMap['element']} Parse5Element\n * @typedef {import('parse5').DefaultTreeAdapterMap['node']} Parse5Nodes\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentType']} Parse5Doctype\n * @typedef {import('parse5').DefaultTreeAdapterMap['commentNode']} Parse5Comment\n * @typedef {import('parse5').DefaultTreeAdapterMap['textNode']} Parse5Text\n * @typedef {import('parse5').DefaultTreeAdapterMap['parentNode']} Parse5Parent\n * @typedef {import('parse5').Token.Attribute} Parse5Attribute\n *\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n *\n * @typedef {Exclude<Parse5Nodes, Parse5Document | Parse5Fragment>} Parse5Content\n *\n * @typedef {'html' | 'svg'} Space\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {find, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\nconst own = {}.hasOwnProperty\n\nconst one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a hast tree to a `parse5` AST.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Parse5Nodes}\n *   `parse5` node.\n */\nexport function toParse5(tree, options) {\n  const settings = options || emptyOptions\n  const space = settings.space\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Document}\n *   Parse5 node.\n */\nfunction root(node, schema) {\n  /** @type {Parse5Document} */\n  const result = {\n    nodeName: '#document',\n    // @ts-expect-error: `parse5` uses enums, which are actually strings.\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Fragment}\n *   Parse5 node.\n */\nfunction fragment(node, schema) {\n  /** @type {Parse5Fragment} */\n  const result = {nodeName: '#document-fragment', childNodes: []}\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Doctype} node\n *   Node (hast) to transform.\n * @returns {Parse5Doctype}\n *   Parse5 node.\n */\nfunction doctype(node) {\n  /** @type {Parse5Doctype} */\n  const result = {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    parentNode: null\n  }\n\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Text} node\n *   Node (hast) to transform.\n * @returns {Parse5Text}\n *   Parse5 node.\n */\nfunction text(node) {\n  /** @type {Parse5Text} */\n  const result = {\n    nodeName: '#text',\n    value: node.value,\n    parentNode: null\n  }\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Comment} node\n *   Node (hast) to transform.\n * @returns {Parse5Comment}\n *   Parse5 node.\n */\nfunction comment(node) {\n  /** @type {Parse5Comment} */\n  const result = {\n    nodeName: '#comment',\n    data: node.value,\n    parentNode: null\n  }\n\n  patch(node, result)\n\n  return result\n}\n\n/**\n * @param {Element} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Element}\n *   Parse5 node.\n */\nfunction element(node, schema) {\n  const parentSchema = schema\n  let currentSchema = parentSchema\n\n  if (\n    node.type === 'element' &&\n    node.tagName.toLowerCase() === 'svg' &&\n    parentSchema.space === 'html'\n  ) {\n    currentSchema = svg\n  }\n\n  /** @type {Array<Parse5Attribute>} */\n  const attrs = []\n  /** @type {string} */\n  let prop\n\n  if (node.properties) {\n    for (prop in node.properties) {\n      if (prop !== 'children' && own.call(node.properties, prop)) {\n        const result = createProperty(\n          currentSchema,\n          prop,\n          node.properties[prop]\n        )\n\n        if (result) {\n          attrs.push(result)\n        }\n      }\n    }\n  }\n\n  const space = currentSchema.space\n  // `html` and `svg` both have a space.\n  assert(space)\n\n  /** @type {Parse5Element} */\n  const result = {\n    nodeName: node.tagName,\n    tagName: node.tagName,\n    attrs,\n    // @ts-expect-error: `parse5` types are wrong.\n    namespaceURI: webNamespaces[space],\n    childNodes: [],\n    parentNode: null\n  }\n  result.childNodes = all(node.children, result, currentSchema)\n  patch(node, result)\n\n  if (node.tagName === 'template' && node.content) {\n    // @ts-expect-error: `parse5` types are wrong.\n    result.content = fragment(node.content, currentSchema)\n  }\n\n  return result\n}\n\n/**\n * Handle a property.\n *\n * @param {Schema} schema\n *   Current schema.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Parse5Attribute | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(schema, prop, value) {\n  const info = find(schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === false ||\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (!value && info.boolean)\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  /** @type {Parse5Attribute} */\n  const attribute = {\n    name: info.attribute,\n    value: value === true ? '' : String(value)\n  }\n\n  if (info.space && info.space !== 'html' && info.space !== 'svg') {\n    const index = attribute.name.indexOf(':')\n\n    if (index < 0) {\n      attribute.prefix = ''\n    } else {\n      attribute.name = attribute.name.slice(index + 1)\n      attribute.prefix = info.attribute.slice(0, index)\n    }\n\n    attribute.namespace = webNamespaces[info.space]\n  }\n\n  return attribute\n}\n\n/**\n * Transform all hast nodes.\n *\n * @param {Array<RootContent>} children\n *   List of children.\n * @param {Parse5Parent} parentNode\n *   `parse5` parent node.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Array<Parse5Content>}\n *   Transformed children.\n */\nfunction all(children, parentNode, schema) {\n  let index = -1\n  /** @type {Array<Parse5Content>} */\n  const results = []\n\n  if (children) {\n    while (++index < children.length) {\n      /** @type {Parse5Content} */\n      const child = one(children[index], schema)\n\n      child.parentNode = parentNode\n\n      results.push(child)\n    }\n  }\n\n  return results\n}\n\n/**\n * Add position info from `from` to `to`.\n *\n * @param {Nodes} from\n *   hast node.\n * @param {Parse5Nodes} to\n *   `parse5` node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const position = from.position\n\n  if (position && position.start && position.end) {\n    assert(typeof position.start.offset === 'number')\n    assert(typeof position.end.offset === 'number')\n\n    to.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      endOffset: position.end.offset\n    }\n  }\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n})(CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n","export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR || (ERR = {}));\n","import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code, cpOffset) {\n        const { line, col, offset } = this;\n        const startCol = col + cpOffset;\n        const startOffset = offset + cpOffset;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol,\n            endCol: startCol,\n            startOffset,\n            endOffset: startOffset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code, 0));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n","export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-html.js.map","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-xml.js.map","// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a;\nconst decodeMap = new Map([\n    [0, 65533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nexport const fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins\n(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {\n    let output = \"\";\n    if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n        codePoint = 0xdc00 | (codePoint & 0x3ff);\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nexport function replaceCodePoint(codePoint) {\n    var _a;\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return 0xfffd;\n    }\n    return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nexport default function decodeCodePoint(codePoint) {\n    return fromCodePoint(replaceCodePoint(codePoint));\n}\n//# sourceMappingURL=decode_codepoint.js.map","import htmlDecodeTree from \"./generated/decode-data-html.js\";\nimport xmlDecodeTree from \"./generated/decode-data-xml.js\";\nimport decodeCodePoint, { replaceCodePoint, fromCodePoint, } from \"./decode_codepoint.js\";\n// Re-export for use by eg. htmlparser2\nexport { htmlDecodeTree, xmlDecodeTree, decodeCodePoint };\nexport { replaceCodePoint, fromCodePoint } from \"./decode_codepoint.js\";\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n    CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n    CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n    CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes || (CharCodes = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 0b100000;\nexport var BinTrieFlags;\n(function (BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction isNumber(code) {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F));\n}\nfunction isAsciiAlphaNumeric(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||\n        isNumber(code));\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code) {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function (EntityDecoderState) {\n    EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n    EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n    EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nexport var DecodingMode;\n(function (DecodingMode) {\n    /** Entities in text nodes that can end with any character. */\n    DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n    /** Only allow entities terminated with a semicolon. */\n    DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n    /** Entities in attributes have limitations on ending characters. */\n    DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode || (DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */\nexport class EntityDecoder {\n    constructor(\n    /** The tree used to decode entities. */\n    decodeTree, \n    /**\n     * The function that is called when a codepoint is decoded.\n     *\n     * For multi-byte named entities, this will be called multiple times,\n     * with the second codepoint, and the same `consumed` value.\n     *\n     * @param codepoint The decoded codepoint.\n     * @param consumed The number of bytes consumed by the decoder.\n     */\n    emitCodePoint, \n    /** An object that is used to produce errors. */\n    errors) {\n        this.decodeTree = decodeTree;\n        this.emitCodePoint = emitCodePoint;\n        this.errors = errors;\n        /** The current state of the decoder. */\n        this.state = EntityDecoderState.EntityStart;\n        /** Characters that were consumed while parsing an entity. */\n        this.consumed = 1;\n        /**\n         * The result of the entity.\n         *\n         * Either the result index of a numeric entity, or the codepoint of a\n         * numeric entity.\n         */\n        this.result = 0;\n        /** The current index in the decode tree. */\n        this.treeIndex = 0;\n        /** The number of characters that were consumed in excess. */\n        this.excess = 1;\n        /** The mode in which the decoder is operating. */\n        this.decodeMode = DecodingMode.Strict;\n    }\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode) {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param string The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(str, offset) {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (str.charCodeAt(offset) === CharCodes.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(str, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(str, offset);\n            }\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(str, offset);\n            }\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(str, offset);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(str, offset);\n            }\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(str, offset);\n            }\n        }\n    }\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericStart(str, offset) {\n        if (offset >= str.length) {\n            return -1;\n        }\n        if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(str, offset + 1);\n        }\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(str, offset);\n    }\n    addToNumericResult(str, start, end, base) {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                    parseInt(str.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericHex(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 16);\n        return -1;\n    }\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericDecimal(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 10);\n        return -1;\n    }\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    emitNumericEntity(lastCp, expectedLength) {\n        var _a;\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n            return 0;\n        }\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        }\n        else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n        return this.consumed;\n    }\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNamedEntity(str, offset) {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n        for (; offset < str.length; offset++, this.excess++) {\n            const char = str.charCodeAt(offset);\n            this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n                }\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNotTerminatedNamedEntity() {\n        var _a;\n        const { result, decodeTree } = this;\n        const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n        return this.consumed;\n    }\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNamedEntityData(result, valueLength, consumed) {\n        const { decodeTree } = this;\n        this.emitCodePoint(valueLength === 1\n            ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n            : decodeTree[result + 1], consumed);\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n        return consumed;\n    }\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end() {\n        var _a;\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree) {\n    let ret = \"\";\n    const decoder = new EntityDecoder(decodeTree, (str) => (ret += fromCodePoint(str)));\n    return function decodeWithTrie(str, decodeMode) {\n        let lastIndex = 0;\n        let offset = 0;\n        while ((offset = str.indexOf(\"&\", offset)) >= 0) {\n            ret += str.slice(lastIndex, offset);\n            decoder.startEntity(decodeMode);\n            const len = decoder.write(str, \n            // Skip the \"&\"\n            offset + 1);\n            if (len < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n            lastIndex = offset + len;\n            // If `len` is 0, skip the current `&` and continue.\n            offset = len === 0 ? lastIndex + 1 : lastIndex;\n        }\n        const result = ret + str.slice(lastIndex);\n        // Make sure we don't keep a reference to the final string.\n        ret = \"\";\n        return result;\n    };\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nexport function determineBranch(decodeTree, current, nodeIdx, char) {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\n    }\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIdx + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    let lo = nodeIdx;\n    let hi = lo + branchCount - 1;\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midVal = decodeTree[mid];\n        if (midVal < char) {\n            lo = mid + 1;\n        }\n        else if (midVal > char) {\n            hi = mid - 1;\n        }\n        else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n    return -1;\n}\nconst htmlDecoder = getDecoder(htmlDecodeTree);\nconst xmlDecoder = getDecoder(xmlDecodeTree);\n/**\n * Decodes an HTML string.\n *\n * @param str The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nexport function decodeHTML(str, mode = DecodingMode.Legacy) {\n    return htmlDecoder(str, mode);\n}\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLAttribute(str) {\n    return htmlDecoder(str, DecodingMode.Attribute);\n}\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLStrict(str) {\n    return htmlDecoder(str, DecodingMode.Strict);\n}\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeXML(str) {\n    return xmlDecoder(str, DecodingMode.Strict);\n}\n//# sourceMappingURL=decode.js.map","/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SEARCH\"] = \"search\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SEARCH\"] = 94] = \"SEARCH\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 95] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 96] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 97] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 98] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 99] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 100] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 101] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 102] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 103] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 104] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 105] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 106] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 107] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 108] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 109] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 110] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 111] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 112] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 113] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 114] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 115] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 116] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 117] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 118] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 119] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 120] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 121] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 122] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 123] = \"XMP\";\n})(TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SEARCH, TAG_ID.SEARCH],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport const NUMBERED_HEADERS = new Set([$.H1, $.H2, $.H3, $.H4, $.H5, $.H6]);\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, EntityDecoder, DecodingMode } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 72] = \"AMBIGUOUS_AMPERSAND\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\nfunction getErrorForNumericCharacterReference(code) {\n    if (code === $.NULL) {\n        return ERR.nullCharacterReference;\n    }\n    else if (code > 1114111) {\n        return ERR.characterReferenceOutsideUnicodeRange;\n    }\n    else if (isSurrogate(code)) {\n        return ERR.surrogateCharacterReference;\n    }\n    else if (isUndefinedCodePoint(code)) {\n        return ERR.noncharacterCharacterReference;\n    }\n    else if (isControlCodePoint(code) || code === $.CARRIAGE_RETURN) {\n        return ERR.controlCharacterReference;\n    }\n    return null;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.entityStartPos = 0;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n        this.entityDecoder = new EntityDecoder(htmlDecodeTree, (cp, consumed) => {\n            // Note: Set `pos` _before_ flushing, as flushing might drop\n            // the current chunk and invalidate `entityStartPos`.\n            this.preprocessor.pos = this.entityStartPos + consumed - 1;\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }, handler.onParseError\n            ? {\n                missingSemicolonAfterCharacterReference: () => {\n                    this._err(ERR.missingSemicolonAfterCharacterReference, 1);\n                },\n                absenceOfDigitsInNumericCharacterReference: (consumed) => {\n                    this._err(ERR.absenceOfDigitsInNumericCharacterReference, this.entityStartPos - this.preprocessor.pos + consumed);\n                },\n                validateNumericCharacterReference: (code) => {\n                    const error = getErrorForNumericCharacterReference(code);\n                    if (error)\n                        this._err(error, 1);\n                },\n            }\n            : undefined);\n    }\n    //Errors\n    _err(code, cpOffset = 0) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code, cpOffset));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this.preprocessor.retreat(this.consumedAfterSnapshot);\n            this.consumedAfterSnapshot = 0;\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: The specification uses only one type of character token (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type === type) {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n            else {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _startCharacterReference() {\n        this.returnState = this.state;\n        this.state = State.CHARACTER_REFERENCE;\n        this.entityStartPos = this.preprocessor.pos;\n        this.entityDecoder.startEntity(this._isCharacterReferenceInAttribute() ? DecodingMode.Attribute : DecodingMode.Legacy);\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference();\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference() {\n        let length = this.entityDecoder.write(this.preprocessor.html, this.preprocessor.pos);\n        if (length < 0) {\n            if (this.preprocessor.lastChunkWritten) {\n                length = this.entityDecoder.end();\n            }\n            else {\n                // Wait for the rest of the entity.\n                this.active = false;\n                // Mark the entire buffer as read.\n                this.preprocessor.pos = this.preprocessor.html.length - 1;\n                this.consumedAfterSnapshot = 0;\n                this.preprocessor.endOfChunkHit = true;\n                return;\n            }\n        }\n        if (length === 0) {\n            // This was not a valid entity. Go back to the beginning, and\n            // figure out what to do.\n            this.preprocessor.pos = this.entityStartPos;\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state =\n                !this._isCharacterReferenceInAttribute() && isAsciiAlphaNumeric(this.preprocessor.peek(1))\n                    ? State.AMBIGUOUS_AMPERSAND\n                    : this.returnState;\n        }\n        else {\n            // We successfully parsed an entity. Switch to the return state.\n            this.state = this.returnState;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this.state = this.returnState;\n            this._callState(cp);\n        }\n    }\n}\n","import { TAG_ID as $, NS, NUMBERED_HEADERS } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENTS_HTML = new Set([\n    $.APPLET,\n    $.CAPTION,\n    $.HTML,\n    $.MARQUEE,\n    $.OBJECT,\n    $.TABLE,\n    $.TD,\n    $.TEMPLATE,\n    $.TH,\n]);\nconst SCOPING_ELEMENTS_HTML_LIST = new Set([...SCOPING_ELEMENTS_HTML, $.OL, $.UL]);\nconst SCOPING_ELEMENTS_HTML_BUTTON = new Set([...SCOPING_ELEMENTS_HTML, $.BUTTON]);\nconst SCOPING_ELEMENTS_MATHML = new Set([$.ANNOTATION_XML, $.MI, $.MN, $.MO, $.MS, $.MTEXT]);\nconst SCOPING_ELEMENTS_SVG = new Set([$.DESC, $.FOREIGN_OBJECT, $.TITLE]);\nconst TABLE_ROW_CONTEXT = new Set([$.TR, $.TEMPLATE, $.HTML]);\nconst TABLE_BODY_CONTEXT = new Set([$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML]);\nconst TABLE_CONTEXT = new Set([$.TABLE, $.TEMPLATE, $.HTML]);\nconst TABLE_CELLS = new Set([$.TD, $.TH]);\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NUMBERED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.has(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInDynamicScope(tagName, htmlScope) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (tn === tagName)\n                        return true;\n                    if (htmlScope.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML);\n    }\n    hasInListItemScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_LIST);\n    }\n    hasInButtonScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_BUTTON);\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (NUMBERED_HEADERS.has(tn))\n                        return true;\n                    if (SCOPING_ELEMENTS_HTML.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.OPTION:\n                case $.OPTGROUP: {\n                    break;\n                }\n                default: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n","import { DOCUMENT_MODE } from '../common/html.js';\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    createTextNode(value) {\n        return {\n            nodeName: '#text',\n            value,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, defaultTreeAdapter.createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, defaultTreeAdapter.createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n","import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n","import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, NUMBERED_HEADERS, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, \n    /** @internal */\n    fragmentContext = null, \n    /** @internal */\n    scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        /** @internal */\n        this.insertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.headElement = null;\n        /** @internal */\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         *\n         * @internal\n         */\n        this.tmplInsertionModeStack = [];\n        /** @internal */\n        this.pendingCharacterTokens = [];\n        /** @internal */\n        this.hasNonWhitespacePendingCharacterToken = false;\n        /** @internal */\n        this.framesetOk = true;\n        /** @internal */\n        this.skipNextNewLine = false;\n        /** @internal */\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    /** @internal */\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    /** @internal */\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    /** @internal */\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    /** @protected */\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    /** @protected */\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    /** @protected */\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    /** @protected */\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    /** @protected */\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    /**\n     * For self-closing tags. Add an element to the tree, but skip adding it\n     * to the stack.\n     */\n    /** @protected */\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    /** @protected */\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    /** @protected */\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    /** @protected */\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    /** @protected */\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    /** @protected */\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    /** @protected */\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    /** @protected */\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    /** @protected */\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    /** @protected */\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    /** @protected */\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    /** @protected */\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    /** @protected */\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    /** @protected */\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    /** @protected */\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    /** @protected */\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    /** @protected */\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    /** @protected */\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    /** @protected */\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    /** @protected */\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    /** @protected */\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    /** @internal */\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     * @protected\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (NUMBERED_HEADERS.has(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as a user agent with enabled plugins/frames, so we parse\n//<noembed>/<noframes> as rawtext.\nfunction rawTextStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED:\n        case $.NOFRAMES: {\n            rawTextStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                rawTextStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.HR: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n","import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const str = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (attr.namespace) {\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        }\n        else {\n            html += attr.name;\n        }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n","/**\n * @import {Options} from 'hast-util-raw'\n * @import {Comment, Doctype, Element, Nodes, RootContent, Root, Text} from 'hast'\n * @import {Raw} from 'mdast-util-to-hast'\n * @import {DefaultTreeAdapterMap, ParserOptions} from 'parse5'\n * @import {Point} from 'unist'\n */\n\n/**\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Nodes) => undefined} handle\n *   Add a hast node to the parser.\n * @property {Options} options\n *   User configuration.\n * @property {Parser<DefaultTreeAdapterMap>} parser\n *   Current parser.\n * @property {boolean} stitches\n *   Whether there are stitches.\n */\n\n/**\n * @typedef Stitch\n *   Custom comment-like value we pass through parse5, which contains a\n *   replacement node that we’ll swap back in afterwards.\n * @property {'comment'} type\n *   Node type.\n * @property {{stitch: Nodes}} value\n *   Replacement value.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {Parser, Token, TokenizerMode, html} from 'parse5'\nimport {pointEnd, pointStart} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\nconst gfmTagfilterExpression =\n  /<(\\/?)(iframe|noembed|noframes|plaintext|script|style|textarea|title|xmp)(?=[\\t\\n\\f\\r />])/gi\n\n// Node types associated with MDX.\n// <https://github.com/mdx-js/mdx/blob/8a56312/packages/mdx/lib/node-types.js>\nconst knownMdxNames = new Set([\n  'mdxFlowExpression',\n  'mdxJsxFlowElement',\n  'mdxJsxTextElement',\n  'mdxTextExpression',\n  'mdxjsEsm'\n])\n\n/** @type {ParserOptions<DefaultTreeAdapterMap>} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Pass a hast tree through an HTML parser, which will fix nesting, and turn\n * raw nodes into actual nodes.\n *\n * @param {Nodes} tree\n *   Original hast tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   Parsed again tree.\n */\nexport function raw(tree, options) {\n  const document = documentMode(tree)\n  /** @type {(node: Nodes, state: State) => undefined} */\n  const one = zwitch('type', {\n    handlers: {root, element, text, comment, doctype, raw: handleRaw},\n    unknown\n  })\n\n  /** @type {State} */\n  const state = {\n    parser: document\n      ? new Parser(parseOptions)\n      : Parser.getFragmentParser(undefined, parseOptions),\n    handle(node) {\n      one(node, state)\n    },\n    stitches: false,\n    options: options || {}\n  }\n\n  one(tree, state)\n  resetTokenizer(state, pointStart())\n\n  const p5 = document ? state.parser.document : state.parser.getFragment()\n  const result = fromParse5(p5, {\n    // To do: support `space`?\n    file: state.options.file\n  })\n\n  if (state.stitches) {\n    visit(result, 'comment', function (node, index, parent) {\n      const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n      if (stitch.value.stitch && parent && index !== undefined) {\n        /** @type {Array<RootContent>} */\n        const siblings = parent.children\n        // @ts-expect-error: assume the stitch is allowed.\n        siblings[index] = stitch.value.stitch\n        return index\n      }\n    })\n  }\n\n  // Unpack if possible and when not given a `root`.\n  if (\n    result.type === 'root' &&\n    result.children.length === 1 &&\n    result.children[0].type === tree.type\n  ) {\n    return result.children[0]\n  }\n\n  return result\n}\n\n/**\n * Transform all nodes\n *\n * @param {Array<RootContent>} nodes\n *   hast content.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction all(nodes, state) {\n  let index = -1\n\n  /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n  if (nodes) {\n    while (++index < nodes.length) {\n      state.handle(nodes[index])\n    }\n  }\n}\n\n/**\n * Transform a root.\n *\n * @param {Root} node\n *   hast root node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction root(node, state) {\n  all(node.children, state)\n}\n\n/**\n * Transform an element.\n *\n * @param {Element} node\n *   hast element node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction element(node, state) {\n  startTag(node, state)\n\n  all(node.children, state)\n\n  endTag(node, state)\n}\n\n/**\n * Transform a text.\n *\n * @param {Text} node\n *   hast text node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction text(node, state) {\n  // Allow `DATA` through `PLAINTEXT`,\n  // but when hanging in a tag for example,\n  // switch back to `DATA`.\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  if (state.parser.tokenizer.state > 4) {\n    state.parser.tokenizer.state = 0\n  }\n\n  /** @type {Token.CharacterToken} */\n  const token = {\n    type: Token.TokenType.CHARACTER,\n    chars: node.value,\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a doctype.\n *\n * @param {Doctype} node\n *   hast doctype node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction doctype(node, state) {\n  /** @type {Token.DoctypeToken} */\n  const token = {\n    type: Token.TokenType.DOCTYPE,\n    name: 'html',\n    forceQuirks: false,\n    publicId: '',\n    systemId: '',\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a stitch.\n *\n * @param {Nodes} node\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction stitch(node, state) {\n  // Mark that there are stitches, so we need to walk the tree and revert them.\n  state.stitches = true\n\n  /** @type {Nodes} */\n  const clone = cloneWithoutChildren(node)\n\n  // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n  // passed through node).\n  if ('children' in node && 'children' in clone) {\n    // Root in root out.\n    const fakeRoot = /** @type {Root} */ (\n      raw({type: 'root', children: node.children}, state.options)\n    )\n    clone.children = fakeRoot.children\n  }\n\n  // Hack: `value` is supposed to be a string, but as none of the tools\n  // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n  // through.\n  comment({type: 'comment', value: {stitch: clone}}, state)\n}\n\n/**\n * Transform a comment (or stitch).\n *\n * @param {Comment | Stitch} node\n *   hast comment node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction comment(node, state) {\n  /** @type {string} */\n  // @ts-expect-error: we pass stitches through.\n  const data = node.value\n\n  /** @type {Token.CommentToken} */\n  const token = {\n    type: Token.TokenType.COMMENT,\n    data,\n    location: createParse5Location(node)\n  }\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a raw node.\n *\n * @param {Raw} node\n *   hast raw node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction handleRaw(node, state) {\n  // Reset preprocessor:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/preprocessor.ts#L18-L31>.\n  state.parser.tokenizer.preprocessor.html = ''\n  state.parser.tokenizer.preprocessor.pos = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastGapPos = -2\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.gapStack = []\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.skipNextNewLine = false\n  state.parser.tokenizer.preprocessor.lastChunkWritten = false\n  state.parser.tokenizer.preprocessor.endOfChunkHit = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.isEol = false\n\n  // Now pass `node.value`.\n  setPoint(state, pointStart(node))\n\n  state.parser.tokenizer.write(\n    state.options.tagfilter\n      ? node.value.replace(gfmTagfilterExpression, '&lt;$1$2')\n      : node.value,\n    false\n  )\n  // @ts-expect-error: private.\n  state.parser.tokenizer._runParsingLoop()\n\n  // Character references hang, so if we ended there, we need to flush\n  // those too.\n  // We reset the preprocessor as if the document ends here.\n  // Then one single call to the relevant state does the trick, parse5\n  // consumes the whole token.\n\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  // Note: a change to `parse5`, which breaks this, was merged but not released.\n  // Investigate when it is.\n  // To do: remove next major.\n  /* c8 ignore next 12 -- removed in <https://github.com/inikulin/parse5/pull/897> */\n  if (\n    state.parser.tokenizer.state === 72 /* NAMED_CHARACTER_REFERENCE */ ||\n    // @ts-expect-error: removed.\n    state.parser.tokenizer.state === 78 /* NUMERIC_CHARACTER_REFERENCE_END */\n  ) {\n    state.parser.tokenizer.preprocessor.lastChunkWritten = true\n    /** @type {number} */\n    // @ts-expect-error: private.\n    const cp = state.parser.tokenizer._consume()\n    // @ts-expect-error: private.\n    state.parser.tokenizer._callState(cp)\n  }\n}\n\n/**\n * Crash on an unknown node.\n *\n * @param {unknown} node_\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Never.\n */\nfunction unknown(node_, state) {\n  const node = /** @type {Nodes} */ (node_)\n\n  if (\n    state.options.passThrough &&\n    state.options.passThrough.includes(node.type)\n  ) {\n    stitch(node, state)\n  } else {\n    let extra = ''\n\n    if (knownMdxNames.has(node.type)) {\n      extra =\n        \". It looks like you are using MDX nodes with `hast-util-raw` (or `rehype-raw`). If you use this because you are using remark or rehype plugins that inject `'html'` nodes, then please raise an issue with that plugin, as its a bad and slow idea. If you use this because you are using markdown syntax, then you have to configure this utility (or plugin) to pass through these nodes (see `passThrough` in docs), but you can also migrate to use the MDX syntax\"\n    }\n\n    throw new Error('Cannot compile `' + node.type + '` node' + extra)\n  }\n}\n\n/**\n * Reset the tokenizer of a parser.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction resetTokenizer(state, point) {\n  setPoint(state, point)\n\n  // Process final characters if they’re still there after hibernating.\n  /** @type {Token.CharacterToken} */\n  // @ts-expect-error: private.\n  const token = state.parser.tokenizer.currentCharacterToken\n\n  if (token && token.location) {\n    token.location.endLine = state.parser.tokenizer.preprocessor.line\n    token.location.endCol = state.parser.tokenizer.preprocessor.col + 1\n    token.location.endOffset = state.parser.tokenizer.preprocessor.offset + 1\n    // @ts-expect-error: private.\n    state.parser.currentToken = token\n    // @ts-expect-error: private.\n    state.parser._processToken(state.parser.currentToken)\n  }\n\n  // Reset tokenizer:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/index.ts#L187-L223>.\n  // Especially putting it back in the `data` state is useful: some elements,\n  // like textareas and iframes, change the state.\n  // See GH-7.\n  // But also if broken HTML is in `raw`, and then a correct element is given.\n  // See GH-11.\n  // @ts-expect-error: private.\n  state.parser.tokenizer.paused = false\n  // @ts-expect-error: private.\n  state.parser.tokenizer.inLoop = false\n\n  // Note: don’t reset `state`, `inForeignNode`, or `lastStartTagName`, we\n  // manually update those when needed.\n  state.parser.tokenizer.active = false\n  // @ts-expect-error: private.\n  state.parser.tokenizer.returnState = TokenizerMode.DATA\n  // @ts-expect-error: private.\n  state.parser.tokenizer.charRefCode = -1\n  // @ts-expect-error: private.\n  state.parser.tokenizer.consumedAfterSnapshot = -1\n  // @ts-expect-error: private.\n  state.parser.tokenizer.currentLocation = null\n  // @ts-expect-error: private.\n  state.parser.tokenizer.currentCharacterToken = null\n  // @ts-expect-error: private.\n  state.parser.tokenizer.currentToken = null\n  // @ts-expect-error: private.\n  state.parser.tokenizer.currentAttr = {name: '', value: ''}\n}\n\n/**\n * Set current location.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction setPoint(state, point) {\n  if (point && point.offset !== undefined) {\n    /** @type {Token.Location} */\n    const location = {\n      startLine: point.line,\n      startCol: point.column,\n      startOffset: point.offset,\n      endLine: -1,\n      endCol: -1,\n      endOffset: -1\n    }\n\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lineStartPos = -point.column + 1 // Looks weird, but ensures we get correct positional info.\n    state.parser.tokenizer.preprocessor.droppedBufferSize = point.offset\n    state.parser.tokenizer.preprocessor.line = point.line\n    // @ts-expect-error: private.\n    state.parser.tokenizer.currentLocation = location\n  }\n}\n\n/**\n * Emit a start tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction startTag(node, state) {\n  const tagName = node.tagName.toLowerCase()\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointStart(node))\n\n  const current = state.parser.openElements.current\n  let ns = 'namespaceURI' in current ? current.namespaceURI : webNamespaces.html\n\n  if (ns === webNamespaces.html && tagName === 'svg') {\n    ns = webNamespaces.svg\n  }\n\n  const result = toParse5(\n    // Shallow clone to not delve into `children`: we only need the attributes.\n    {...node, children: []},\n    {space: ns === webNamespaces.svg ? 'svg' : 'html'}\n  )\n\n  /** @type {Token.TagToken} */\n  const tag = {\n    type: Token.TokenType.START_TAG,\n    tagName,\n    tagID: html.getTagID(tagName),\n    // We always send start and end tags.\n    selfClosing: false,\n    ackSelfClosing: false,\n    // Always element.\n    /* c8 ignore next */\n    attrs: 'attrs' in result ? result.attrs : [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Set a tag name, similar to how the tokenizer would do it.\n  state.parser.tokenizer.lastStartTagName = tagName\n\n  // `inForeignNode` is correctly set by the parser.\n}\n\n/**\n * Emit an end tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction endTag(node, state) {\n  const tagName = node.tagName.toLowerCase()\n  // Do not emit closing tags for HTML void elements.\n  if (\n    !state.parser.tokenizer.inForeignNode &&\n    htmlVoidElements.includes(tagName)\n  ) {\n    return\n  }\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointEnd(node))\n\n  /** @type {Token.TagToken} */\n  const tag = {\n    type: Token.TokenType.END_TAG,\n    tagName,\n    tagID: html.getTagID(tagName),\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs: [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Switch back to the data state after alternative states that don’t accept\n  // tags:\n  if (\n    // Current element is closed.\n    tagName === state.parser.tokenizer.lastStartTagName &&\n    // `<textarea>` and `<title>`\n    (state.parser.tokenizer.state === TokenizerMode.RCDATA ||\n      // `<iframe>`, `<noembed>`, `<noframes>`, `<style>`, `<xmp>`\n      state.parser.tokenizer.state === TokenizerMode.RAWTEXT ||\n      // `<script>`\n      state.parser.tokenizer.state === TokenizerMode.SCRIPT_DATA)\n    // Note: `<plaintext>` not needed, as it’s the last element.\n  ) {\n    state.parser.tokenizer.state = TokenizerMode.DATA\n  }\n}\n\n/**\n * Check if `node` represents a whole document or a fragment.\n *\n * @param {Nodes} node\n *   hast node.\n * @returns {boolean}\n *   Whether this represents a whole document or a fragment.\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName.toLowerCase() === 'html'))\n  )\n}\n\n/**\n * Get a `parse5` location from a node.\n *\n * @param {Nodes | Stitch} node\n *   hast node.\n * @returns {Token.Location}\n *   `parse5` location.\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n  const end = pointEnd(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n\n  /** @type {Record<keyof Token.Location, number | undefined>} */\n  const location = {\n    startLine: start.line,\n    startCol: start.column,\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    endOffset: end.offset\n  }\n\n  // @ts-expect-error: unist point values can be `undefined` in hast, which\n  // `parse5` types don’t want.\n  return location\n}\n\n/**\n * @template {Nodes} NodeType\n *   Node type.\n * @param {NodeType} node\n *   Node to clone.\n * @returns {NodeType}\n *   Cloned node, without children.\n */\nfunction cloneWithoutChildren(node) {\n  return 'children' in node\n    ? structuredClone({...node, children: []})\n    : structuredClone(node)\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} RawOptions\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<RawOptions, 'file'>} Options\n *   Configuration.\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Parse the tree (and raw nodes) again, keeping positional info okay.\n *\n * @param {Options | null | undefined}  [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeRaw(options) {\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File.\n   * @returns {Root}\n   *   New tree.\n   */\n  return function (tree, file) {\n    // Assume root in -> root out.\n    const result = /** @type {Root} */ (raw(tree, {...options, file}))\n    return result\n  }\n}\n","// Move content from TextDisplay.jsx to this location\nimport React, { useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport rehypeRaw from 'rehype-raw';\n\nconst ANIMATION_STYLES = [\n  'fade-in',\n  'slide-right',\n  'slide-up',\n  'zoom-in',\n  'typewriter',\n  'bounce-in',\n  'rotate-in',\n  'flip-in',\n  'swing-in',\n  'scale-in',\n  'blur-in',\n  'slide-down',\n  'slide-left'\n];\n\nfunction TextDisplay({ textContent, currentSection, speed, theme }) {\n  const [currentAnimation, setCurrentAnimation] = useState(0);\n  const [revealedText, setRevealedText] = useState('');\n\n  useEffect(() => {\n    if (currentSection >= 0) {\n      setCurrentAnimation((prev) => (prev + 1) % ANIMATION_STYLES.length);\n      setRevealedText('');\n    }\n  }, [currentSection]);\n\n  useEffect(() => {\n    if (currentSection >= 0 && textContent[currentSection]) {\n      const text = textContent[currentSection];\n      const revealSpeed = 11 - speed;\n      let currentChar = 0;\n\n      const revealInterval = setInterval(() => {\n        if (currentChar < text.length) {\n          setRevealedText(prev => text.substring(0, currentChar + 1));\n          currentChar++;\n        } else {\n          clearInterval(revealInterval);\n        }\n      }, revealSpeed * 30);\n\n      return () => clearInterval(revealInterval);\n    }\n  }, [currentSection, textContent, speed]);\n\n  const textStyle = {\n    fontFamily: theme.fontFamily,\n    fontSize: theme.fontSize,\n    color: theme.textColor,\n    lineHeight: theme.lineHeight\n  };\n\n  return (\n    <div id=\"text-display\" className=\"mb-4\">\n      <div className=\"text-content markdown-content\" style={textStyle}>\n        {textContent.map((text, index) => (\n          <div\n            key={index}\n            className={`text-section ${\n              index === currentSection\n                ? `active ${ANIMATION_STYLES[currentAnimation]}`\n                : ''\n            }`}\n            style={{ display: index === currentSection ? 'block' : 'none' }}\n          >\n            <ReactMarkdown\n              remarkPlugins={[remarkGfm]}\n              rehypePlugins={[rehypeRaw]}\n              components={{\n                h1: ({node, children, ...props}) => (\n                  <h1 style={textStyle} className=\"text-4xl font-bold mb-4\" {...props}>{children}</h1>\n                ),\n                h2: ({node, children, ...props}) => (\n                  <h2 style={textStyle} className=\"text-2xl font-semibold mb-3\" {...props}>{children}</h2>\n                ),\n                strong: ({node, children, ...props}) => (\n                  <strong style={textStyle} className=\"font-bold\" {...props}>{children}</strong>\n                ),\n                em: ({node, children, ...props}) => (\n                  <em style={textStyle} className=\"italic\" {...props}>{children}</em>\n                ),\n                p: ({node, children, ...props}) => (\n                  <p style={textStyle} className=\"mb-3\" {...props}>{children}</p>\n                ),\n                ul: ({node, children, ...props}) => (\n                  <ul style={textStyle} className=\"list-disc pl-5 mb-3\" {...props}>{children}</ul>\n                ),\n                ol: ({node, children, ...props}) => (\n                  <ol style={textStyle} className=\"list-decimal pl-5 mb-3\" {...props}>{children}</ol>\n                ),\n                li: ({node, children, ...props}) => (\n                  <li style={textStyle} className=\"mb-2\" {...props}>{children}</li>\n                )\n              }}\n            >\n              {index === currentSection ? revealedText : text}\n            </ReactMarkdown>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default TextDisplay;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19h4V5H6zm8-14v14h4V5z\"\n}), 'Pause');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M8 5v14l11-7z\"\n}), 'PlayArrow');","import React from 'react';\nimport { Button } from '@mui/material';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport PauseIcon from '@mui/icons-material/Pause';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\n\nfunction NavigationControls({\n  currentSection,\n  setCurrentSection,\n  totalSections,\n  isPaused,\n  setIsPaused\n}) {\n  return (\n    <div className=\"controls mb-3\">\n      <div className=\"d-flex justify-content-between align-items-center\">\n        <Button\n          variant=\"contained\"\n          onClick={() => setCurrentSection(prev => prev - 1)}\n          disabled={currentSection <= 0}\n          startIcon={<NavigateBeforeIcon />}\n        >\n          Previous\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={() => setIsPaused(prev => !prev)}\n          startIcon={isPaused ? <PlayArrowIcon /> : <PauseIcon />}\n        >\n          {isPaused ? 'Resume' : 'Pause'}\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={() => setCurrentSection(prev => prev + 1)}\n          disabled={currentSection >= totalSections - 1}\n          endIcon={<NavigateNextIcon />}\n        >\n          Next\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default NavigationControls;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M2.01 21 23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');","import React, { useState } from 'react';\nimport { TextField, Button, Box } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\n\nfunction CommandInput({ onCommand }) {\n  const [command, setCommand] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (command.trim()) {\n      onCommand(command.trim().toLowerCase());\n      setCommand('');\n    }\n  };\n\n  return (\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 2, display: 'flex', gap: 1 }}>\n      <TextField\n        fullWidth\n        value={command}\n        onChange={(e) => setCommand(e.target.value)}\n        placeholder=\"Enter command (type 'help' for available commands)\"\n        size=\"small\"\n      />\n      <Button type=\"submit\" variant=\"contained\" endIcon={<SendIcon />}>\n        Send\n      </Button>\n    </Box>\n  );\n}\n\nexport default CommandInput;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m20.38 8.57-1.23 1.85a8 8 0 0 1-.22 7.58H5.07A8 8 0 0 1 15.58 6.85l1.85-1.23A10 10 0 0 0 3.35 19a2 2 0 0 0 1.72 1h13.85a2 2 0 0 0 1.74-1 10 10 0 0 0-.27-10.44zm-9.79 6.84a2 2 0 0 0 2.83 0l5.66-8.49-8.49 5.66a2 2 0 0 0 0 2.83\"\n}), 'Speed');","import React from 'react';\nimport { Box, Slider, Typography } from '@mui/material';\nimport SpeedIcon from '@mui/icons-material/Speed';\n\nfunction SpeedControl({ speed, setSpeed }) {\n  return (\n    <Box sx={{ width: '100%', mt: 2 }}>\n      <Typography gutterBottom variant=\"subtitle1\" sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n        <SpeedIcon /> Reading Speed\n      </Typography>\n      <Slider\n        value={speed}\n        min={1}\n        max={10}\n        step={1}\n        marks\n        onChange={(_, newValue) => setSpeed(newValue)}\n        valueLabelDisplay=\"auto\"\n        aria-label=\"Reading speed\"\n      />\n    </Box>\n  );\n}\n\nexport default SpeedControl;\n","import React from 'react';\nimport { Box, FormControl, InputLabel, Select, MenuItem, TextField } from '@mui/material';\nimport PaletteIcon from '@mui/icons-material/Palette';\n\nfunction ThemeControl({ theme, onThemeChange }) {\n  const handleChange = (property, value) => {\n    onThemeChange({ ...theme, [property]: value });\n  };\n\n  return (\n    <Box sx={{ mt: 2 }}>\n      <FormControl fullWidth sx={{ mb: 2 }}>\n        <InputLabel>Font Family</InputLabel>\n        <Select\n          value={theme.fontFamily}\n          label=\"Font Family\"\n          onChange={(e) => handleChange('fontFamily', e.target.value)}\n        >\n          <MenuItem value=\"Arial\">Arial</MenuItem>\n          <MenuItem value=\"Times New Roman\">Times New Roman</MenuItem>\n          <MenuItem value=\"Courier New\">Courier New</MenuItem>\n          <MenuItem value=\"Georgia\">Georgia</MenuItem>\n          <MenuItem value=\"Verdana\">Verdana</MenuItem>\n        </Select>\n      </FormControl>\n\n      <FormControl fullWidth sx={{ mb: 2 }}>\n        <TextField\n          label=\"Font Size\"\n          type=\"text\"\n          value={theme.fontSize}\n          onChange={(e) => handleChange('fontSize', e.target.value)}\n          placeholder=\"e.g., 1rem, 16px\"\n        />\n      </FormControl>\n\n      <FormControl fullWidth sx={{ mb: 2 }}>\n        <TextField\n          label=\"Line Height\"\n          type=\"text\"\n          value={theme.lineHeight}\n          onChange={(e) => handleChange('lineHeight', e.target.value)}\n          placeholder=\"e.g., 1.5, 24px\"\n        />\n      </FormControl>\n\n      <FormControl fullWidth>\n        <TextField\n          label=\"Text Color\"\n          type=\"color\"\n          value={theme.textColor}\n          onChange={(e) => handleChange('textColor', e.target.value)}\n          sx={{ '& input': { height: '50px' } }}\n        />\n      </FormControl>\n    </Box>\n  );\n}\n\nexport default ThemeControl;\n","// Storage service for managing chapters and user preferences\nconst storageService = {\n  // Get all chapters from local storage\n  getAllChapters: async () => {\n    try {\n      const keys = Object.keys(localStorage).filter(key => key.startsWith('book_'));\n      return keys;\n    } catch (error) {\n      console.error('Error getting chapters:', error);\n      return [];\n    }\n  },\n\n  // Get a specific chapter from local storage\n  getChapter: async (key) => {\n    try {\n      const content = localStorage.getItem(key);\n      return content ? JSON.parse(content) : null;\n    } catch (error) {\n      console.error('Error getting chapter:', error);\n      return null;\n    }\n  },\n\n  // Save a chapter to local storage\n  saveChapter: async (key, content) => {\n    try {\n      localStorage.setItem(key, JSON.stringify(content));\n      return true;\n    } catch (error) {\n      console.error('Error saving chapter:', error);\n      return false;\n    }\n  }\n};\n\nexport { storageService };\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport TextDisplay from '../../components/features/reader/TextDisplay';\nimport NavigationControls from '../../components/features/reader/NavigationControls';\nimport CommandInput from '../../components/features/reader/CommandInput';\nimport SpeedControl from '../../components/features/reader/SpeedControl';\nimport ThemeControl from '../../components/features/reader/ThemeControl';\nimport { storageService } from '../../services/storage';\n\nconst DEFAULT_THEME = {\n  fontFamily: 'var(--bs-body-font-family)',\n  fontSize: '1rem',\n  textColor: '#ffffff',\n  lineHeight: '1.6'\n};\n\nfunction ReaderPage() {\n  const { bookId } = useParams();\n  const [currentSection, setCurrentSection] = useState(-1);\n  const [isPaused, setIsPaused] = useState(true);\n  const [speed, setSpeed] = useState(5);\n  const [textContent, setTextContent] = useState([]);\n  const [theme, setTheme] = useState(DEFAULT_THEME);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchContent = async () => {\n      try {\n        const chapters = await storageService.getAllChapters();\n        if (chapters && chapters.length > 0) {\n          const content = await Promise.all(\n            chapters.map(key => storageService.getChapter(key))\n          );\n          setTextContent(content);\n        } else {\n          const response = await fetch(`/api/books/${bookId}/content`);\n          const data = await response.json();\n          if (response.ok) {\n            await Promise.all(\n              data.map((content, index) => \n                storageService.saveChapter(`book_${bookId}_chapter_${index + 1}`, content)\n              )\n            );\n            setTextContent(data);\n          } else {\n            setError('Error loading book content');\n          }\n        }\n\n        const savedTheme = await storageService.getChapter('user_theme');\n        if (savedTheme) {\n          setTheme(savedTheme);\n        }\n      } catch (error) {\n        console.error('Error fetching content:', error);\n        setError('Error loading book content');\n      }\n    };\n\n    if (bookId) {\n      fetchContent();\n    }\n  }, [bookId]);\n\n  useEffect(() => {\n    storageService.saveChapter('user_theme', theme);\n  }, [theme]);\n\n  if (error) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        {error}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"row justify-content-center\">\n      <div className=\"col-md-8\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <TextDisplay\n              textContent={textContent}\n              currentSection={currentSection}\n              speed={speed}\n              theme={theme}\n            />\n            <NavigationControls\n              currentSection={currentSection}\n              setCurrentSection={setCurrentSection}\n              totalSections={textContent.length}\n              isPaused={isPaused}\n              setIsPaused={setIsPaused}\n            />\n            <SpeedControl speed={speed} setSpeed={setSpeed} />\n            <ThemeControl theme={theme} onThemeChange={setTheme} />\n            <CommandInput\n              onCommand={(command) => {\n                switch (command) {\n                  case 'commencer':\n                    setCurrentSection(0);\n                    setIsPaused(false);\n                    break;\n                  case 'pause':\n                    setIsPaused(true);\n                    break;\n                  case 'resume':\n                    setIsPaused(false);\n                    break;\n                  case 'skip':\n                    if (currentSection < textContent.length - 1) {\n                      setCurrentSection(prev => prev + 1);\n                    }\n                    break;\n                  case 'help':\n                    alert(`Available commands:\n- commencer: Start reading\n- pause: Pause reading\n- resume: Resume reading\n- skip: Skip to next section\n- help: Show this help message`);\n                    break;\n                }\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ReaderPage;\n"],"names":["parse","value","tokens","input","index","start","end","token","stringify","values","options","settings","nameRe","nameReJsx","emptyOptions","name","re","whitespace","thing","empty","Schema","property","normal","space","merge","definitions","normalize","Info","attribute","powers","boolean","increment","booleanish","overloadedBoolean","number","spaceSeparated","commaSeparated","commaOrSpaceSeparated","checks","types","DefinedInfo","mask","mark","check","key","own","create","definition","prop","info","xlink","_","xml","caseSensitiveTransform","attributes","caseInsensitiveTransform","xmlns","aria","html","svg","valid","dash","cap","find","schema","Type","rest","camelcase","dashes","kebab","$0","hastToReact","htmlBase","svgBase","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","NEWLINE","FORWARD_SLASH","ASTERISK","EMPTY_STRING","TYPE_COMMENT","TYPE_DECLARATION","inlineStyleParser","style","lineno","column","updatePosition","str","lines","i","position","node","Position","error","msg","err","match","m","comments","rules","c","comment","pos","declaration","val","ret","trim","declarations","decls","decl","__importDefault","this","mod","cjs","_default","StyleToObject","inline_style_parser_1","require$$0","iterator","styleObject","hasIterator","styleToObject","pointEnd","point","pointStart","type","stringifyPosition","VFileMessage","causeOrReason","optionsOrParentOrPlace","origin","reason","legacyCause","parent","emptyMap","dashSomething","tableElements","tableCellElement","docs","toJsxRuntime","tree","filePath","developmentCreate","productionCreate","state","result","one","element","mdxExpression","mdxJsxElement","mdxEsm","root","text","parentSchema","findComponentFromName","props","createElementProps","children","createChildren","child","addNode","addChildren","expression","assert","crashEstree","createJsxElementProps","jsx","jsxs","fn","jsxDEV","isStaticChildren","alignValue","createProperty","objectExpression","countsByName","count","commas","spaces","parseStyle","transformStylesToCssCasing","replacer","cause","message","toCamel","allowExpression","identifiers","isIdentifierName","place","domCasing","cssCasing","from","transformStyleToCssCasing","to","toDash","$1","urlAttributes","toString","includeImageAlt","includeHtml","all","decodeNamedCharacterReference","characterReference","char","splice","list","remove","items","chunkStart","parameters","push","hasOwnProperty","combineExtensions","extensions","syntaxExtension","extension","hook","left","right","code","constructs","existing","before","decodeNumericCharacterReference","base","normalizeIdentifier","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","normalizeUri","skip","replace","next","factorySpace","effects","ok","max","limit","size","prefix","content","initializeContent","contentStart","afterContentStartConstruct","paragraphInitial","previous","lineStart","data","document","initializeDocument","containerConstruct","tokenizeContainer","self","stack","continued","childFlow","childToken","lineStartOffset","item","documentContinue","checkNewContainers","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","flowStart","thereIsANewContainer","thereIsNoNewContainer","containerContinue","flowContinue","writeToChild","endOfFile","stream","seen","entry","nok","classifyCharacter","resolveAll","events","context","called","resolve","attention","resolveAllAttention","tokenizeAttention","open","group","openingSequence","closingSequence","use","nextEvents","offset","movePoint","attentionMarkers","marker","inside","after","close","autolink","tokenizeAutolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","blankLine","tokenizeBlankLine","blockQuote","tokenizeBlockQuoteContinuation","exit","tokenizeBlockQuoteStart","contStart","contBefore","characterEscape","tokenizeCharacterEscape","tokenizeCharacterReference","test","numeric","nonLazyContinuation","tokenizeNonLazyContinuation","codeFenced","tokenizeCodeFenced","closeStart","tokenizeCloseStart","initialPrefix","sizeOpen","beforeSequenceOpen","tail","sequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","startBefore","beforeSequenceClose","sequenceClose","sequenceCloseAfter","codeIndented","tokenizeCodeIndented","furtherStart","tokenizeFurtherStart","afterPrefix","atBreak","codeText","resolveCodeText","tokenizeCodeText","tailExitIndex","headEnterIndex","enter","between","SpliceBuffer","initial","stop","deleteCount","removed","chunkedPush","n","subtokenize","eventsArray","jumps","event","lineIndex","otherIndex","otherEvent","subevents","more","subcontent","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","slice","resolveContent","tokenizeContent","continuationConstruct","tokenizeContinuation","chunkInside","contentEnd","contentContinue","startLookahead","prefixed","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","begin","escape","factoryWhitespace","tokenizeDefinition","titleBefore","tokenizeTitleBefore","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","afterWhitespace","beforeMarker","titleAfter","titleAfterOptionalWhitespace","hardBreakEscape","tokenizeHardBreakEscape","headingAtx","resolveHeadingAtx","tokenizeHeadingAtx","sequenceFurther","htmlBlockNames","htmlRawNames","htmlFlow","resolveToHtmlFlow","tokenizeHtmlFlow","blankLineBefore","tokenizeBlankLineBefore","nonLazyContinuationStart","tokenizeNonLazyContinuationStart","closingTag","buffer","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","continuation","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationAfter","continuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","htmlText","tokenizeHtmlText","returnState","instruction","tagOpen","commentEnd","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelEnd","resolveAllLabelEnd","resolveToLabelEnd","tokenizeLabelEnd","resourceConstruct","tokenizeResource","referenceFullConstruct","tokenizeReferenceFull","referenceCollapsedConstruct","tokenizeReferenceCollapsed","newEvents","media","label","labelStart","defined","labelEndNok","labelEndOk","referenceNotFull","resourceStart","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFull","referenceFullAfter","referenceFullMissing","referenceCollapsedStart","referenceCollapsedOpen","labelStartImage","tokenizeLabelStartImage","labelStartLink","tokenizeLabelStartLink","lineEnding","tokenizeLineEnding","thematicBreak","tokenizeThematicBreak","sequence","tokenizeListContinuation","tokenizeListEnd","tokenizeListStart","listItemPrefixWhitespaceConstruct","tokenizeListItemPrefixWhitespace","indentConstruct","tokenizeIndent","initialSize","kind","atMarker","onBlank","endOfPrefix","otherPrefix","notBlank","notInCurrentItem","setextUnderline","resolveToSetextUnderline","tokenizeSetextUnderline","heading","paragraph","flow","initializeFlow","atBlankEnding","afterConstruct","resolver","createResolver","string","initializeFactory","field","resolveAllLineSuffixes","initializeText","notText","extraResolver","resolveAllText","chunks","bufferIndex","tabs","chunk","contentInitial","flowInitial","insideSpan","resolveText","disable","createTokenizer","parser","initialize","columnStart","resolveAllConstructs","constructFactory","onsuccessfulconstruct","onsuccessfulcheck","consume","defineSkip","now","sliceSerialize","sliceStream","write","main","addResult","expandTabs","serializeChunks","sliceChunks","_bufferIndex","_index","line","accountForPotentialSkip","chunkIndex","go","fields","construct","onreturn","bogusState","listOfConstructs","constructIndex","currentConstruct","handleListOfConstructs","handleMapOfConstructs","map","handleConstruct","store","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","restore","startIndex","startBufferIndex","endIndex","endBufferIndex","view","head","atTab","defaultConstructs","creator","postprocess","search","preprocess","atCarriageReturn","preprocessor","encoding","endPosition","characterEscapeOrReference","decodeString","decode","$2","hex","fromMarkdown","compiler","config","opener","link","onenterdata","codeFlow","emphasis","hardBreak","image","listItem","onenterlistitemvalue","onenterlistordered","onenterreference","strong","closer","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","onexitdata","onexitcharacterreferencemarker","onexitcharacterreferencevalue","onexitcharacterreference","onexitcodefenced","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","onexitsetextheadinglinesequence","onexitsetextheadingtext","configure","compile","resume","listStack","prepareList","handler","defaultOnError","length","containerBalance","listSpread","firstBlankLineIndex","tailIndex","tailEvent","and","errorHandler","onExitError","ancestor","depth","siblings","referenceType","fragment","d","combined","remarkParse","doc","blockquote","properties","strikethrough","footnoteReference","clobberPrefix","id","safeId","counter","reuseCounter","sup","revert","subtype","suffix","contents","imageReference","inlineCode","linkReference","results","loose","listLoose","listItemLoose","spread","table","rows","firstRow","tableContent","body","tableRow","align","cellIndex","cells","cell","tableCell","tab","trimLines","source","last","trimLine","handlers","ignore","VOID","PRIMITIVE","ARRAY","OBJECT","DATE","REGEXP","MAP","SET","ERROR","BIGINT","env","deserializer","$","as","out","unpair","arr","object","flags","set","deserialize","serialized","EMPTY","keys","typeOf","asString","shouldSkip","TYPE","serializer","strict","json","pair","entries","serialize","lossy","structuredClone$1","any","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","footer","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","counts","tailTail","structuredClone","convert","castFactory","anyFactory","propsFactory","typeFactory","tests","checkAsRecord","nodeAsRecord","testFunction","looksLikeANode","CONTINUE","EXIT","SKIP","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","nodeAsParent","testOrVisitor","visitorOrReverse","maybeReverse","overload","createState","definitionById","footnoteById","footnoteCounts","defaultHandlers","applyData","patch","wrap","handle","shallow","defaultUnknownHandler","nodes","trimMarkdownSpaceStart","hName","hChildren","hProperties","toHast","foot","remarkRehype","destination","file","hastTree","bail","hasOwn","toStr","defineProperty","gOPD","isArray","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","setProperty","target","getProperty","extend","src","copy","copyIsArray","clone","deep","prototype","trough","fns","pipeline","run","middlewareIndex","callback","output","middelware","middleware","wrapped","fnExpectsCallback","done","exception","then","minpath","basename","dirname","extname","join","path","assertPath","seenNonSlash","firstNonSlashEnd","extnameIndex","unmatchedSlash","startPart","startDot","preDotState","segments","joined","absolute","normalizeString","allowAboveRoot","lastSegmentLength","lastSlash","dots","lastSlashIndex","minproc","cwd","isUrl","fileUrlOrPath","urlToPath","getPathFromURLPosix","url","pathname","third","order","VFile","isUint8Array","assertNonEmpty","assertPart","stem","part","CallableInstance","proto","apply","Processor","attacher","assertUnfrozen","transformer","realFile","vfile","assertParser","assertCompiler","executor","reject","parseTree","realDone","compileTree","compileResult","looksLikeAValue","complete","assertDone","assertNode","transformers","outputTree","resultingTree","attachers","namespace","addPlugin","addList","addPreset","add","plugin","plugins","entryIndex","primary","currentPrimary","isPlainObj","unified","frozen","asyncName","looksLikeAVFile","changelog","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","allowedElements","allowElement","className","components","disallowedElements","rehypePlugins","remarkPlugins","remarkRehypeOptions","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","processor","deprecation","mdastTree","transform","Fragment","colon","questionMark","numberSign","ccount","character","escapeStringRegexp","findAndReplace","ignored","pairs","toPairs","pairIndex","grandparent","change","matchObject","tupleOrList","tuple","toExpression","toFunction","inConstruct","notInConstruct","gfmAutolinkLiteralFromMarkdown","transformGfmAutolinkLiterals","enterLiteralAutolink","enterLiteralAutolinkValue","exitLiteralAutolink","exitLiteralAutolinkEmail","exitLiteralAutolinkHttp","exitLiteralAutolinkWww","gfmAutolinkLiteralToMarkdown","findUrl","findEmail","protocol","domain","isCorrectDomain","parts","splitUrl","atext","trailExec","trail","closingParenIndex","openingParens","closingParens","email","footnoteReferencePeek","gfmFootnoteFromMarkdown","enterFootnoteDefinition","enterFootnoteDefinitionLabelString","enterFootnoteCall","enterFootnoteCallString","exitFootnoteDefinition","exitFootnoteDefinitionLabelString","exitFootnoteCall","exitFootnoteCallString","gfmFootnoteToMarkdown","footnoteDefinition","tracker","subexit","blank","constructsWithoutStrikethrough","handleDelete","peekDelete","gfmStrikethroughFromMarkdown","enterStrikethrough","exitStrikethrough","gfmStrikethroughToMarkdown","defaultStringLength","markdownTable","stringLength","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","row","sizes","columnIndex","toAlignment","zwitch","patternInScope","pattern","listInScope","none","_1","longestStreak","substring","expected","formatCodeAsIndented","checkFence","checkQuote","quote","checkEmphasis","encodeCharacterReference","encodeInfo","outside","outsideKind","insideKind","emphasisPeek","betweenHead","betweenTail","formatHeadingAsSetext","literalWithBreak","rank","htmlPeek","imagePeek","imageReferencePeek","alt","reference","inlineCodePeek","formatLinkAsAutolink","linkPeek","linkReferencePeek","checkBullet","checkBulletOther","bullet","bulletOther","checkBulletOrdered","checkRule","bulletCurrent","useDifferentMarker","firstListItem","checkListItemIndent","listItemIndent","phrasing","checkStrong","strongPeek","checkRuleRepetition","repetition","gfmTableFromMarkdown","enterTable","enterCell","enterRow","exitCodeText","exitTable","gfmTableToMarkdown","padding","alignDelimiters","around","inlineCodeWithTable","handleTable","handleTableCell","handleTableRow","serializeData","handleTableAsData","handleTableRowAsData","matrix","gfmTaskListItemFromMarkdown","exitCheck","exitParagraphWithTaskListItem","gfmTaskListItemToMarkdown","listItemWithTaskListItem","firstParaghraph","sibling","checkable","checkbox","gfmFromMarkdown","gfmToMarkdown","wwwPrefix","tokenizeWwwPrefix","tokenizeDomain","tokenizePath","tokenizeTrail","emailDomainDotTrail","tokenizeEmailDomainDotTrail","wwwAutolink","tokenizeWwwAutolink","previousWww","protocolAutolink","tokenizeProtocolAutolink","previousProtocol","emailAutolink","tokenizeEmailAutolink","previousEmail","gfmAutolinkLiteral","dot","gfmAtext","previousUnbalanced","emailDomain","emailDomainAfter","emailDomainDot","wwwStart","wwwAfter","protocolStart","protocolPrefixInside","protocolSlashesInside","afterProtocol","protocolAfter","wwwPrefixInside","wwwPrefixAfter","underscoreInLastSegment","underscoreInLastLastSegment","domainInside","domainAfter","domainAtPunctuation","sizeClose","pathInside","pathAtPunctuation","trailCharacterReferenceStart","trailBracketAfter","trailCharacterReferenceInside","indent","gfmFootnote","tokenizeDefinitionStart","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","tokenizeGfmFootnoteCall","tokenizePotentialGfmFootnoteCall","resolveToPotentialGfmFootnoteCall","call","replacement","callStart","callData","callEscape","labelAtMarker","whitespaceAfter","gfmStrikethrough","single","tokenizeStrikethrough","resolveAllStrikethrough","EditMap","addImplementation","b","vecs","editMap","at","gfmTableAlign","inDelimiterRow","alignIndex","gfmTable","tokenizeTable","resolveTable","sizeB","bodyRowStart","headRowBefore","headRowStart","headRowBreak","headDelimiterStart","headRowData","headRowEscape","headDelimiterBefore","headDelimiterValueBefore","headDelimiterCellBefore","headDelimiterNok","headDelimiterLeftAlignmentAfter","headDelimiterCellAfter","headDelimiterFiller","headDelimiterRightAlignmentAfter","bodyRowBreak","bodyRowData","bodyRowEscape","inFirstCellAwaitingPipe","rowKind","lastCell","afterHeadAwaitingFirstBodyRow","lastTableEnd","currentTable","currentBody","currentCell","flushTableEnd","flushCell","range","rowEnd","previousCell","groupName","valueName","getPoint","relatedStart","relatedEnd","valueToken","a","tableBody","exits","related","side","tasklistCheck","tokenizeTasklistCheck","gfmTaskListItem","spaceThenNonSpace","gfm","remarkGfm","micromarkExtensions","fromMarkdownExtensions","toMarkdownExtensions","parseSelector","selector","defaultTagName","subvalue","buttonTypes","createH","caseSensitive","createAdjustMap","h","isProperties","addProperty","addChild","parsePrimitive","finalResult","svgCaseSensitiveTagNames","s","location","indices","toOffset","toPoint","eol","cr","lf","webNamespaces","fromParse5","quirksMode","loc","startTag","endTag","createLocation","opening","closing","doctype","toParse5","currentSchema","attrs","parentNode","htmlVoidElements","UNDEFINED_CODE_POINTS","REPLACEMENT_CHARACTER","CODE_POINTS","SEQUENCES","isSurrogate","cp","isSurrogatePair","getSurrogatePairCodePoint","cp1","cp2","isControlCodePoint","isUndefinedCodePoint","ERR","DEFAULT_BUFFER_WATERLINE","Preprocessor","cpOffset","col","startCol","startOffset","nextCp","isLastChunk","TokenType","getTokenAttr","attrName","htmlDecodeTree","xmlDecodeTree","_a","decodeMap","fromCodePoint","codePoint","replaceCodePoint","CharCodes","TO_LOWER_BIT","BinTrieFlags","isNumber","isHexadecimalCharacter","isAsciiAlphaNumeric","isEntityInAttributeInvalidEnd","EntityDecoderState","DecodingMode","EntityDecoder","decodeTree","emitCodePoint","errors","decodeMode","digitCount","startIdx","lastCp","expectedLength","valueLength","determineBranch","consumed","getDecoder","decoder","lastIndex","len","nodeIdx","branchCount","jumpOffset","lo","hi","mid","midVal","NS","ATTRS","DOCUMENT_MODE","TAG_NAMES","TAG_ID","TAG_NAME_TO_ID","getTagID","SPECIAL_ELEMENTS","NUMBERED_HEADERS","State","TokenizerMode","isAsciiDigit","isAsciiUpper","isAsciiLower","isAsciiLetter","toAsciiLower","isWhitespace","isScriptDataDoubleEscapeSequenceEnd","getErrorForNumericCharacterReference","Tokenizer","_b","writeCallback","initialName","chars","attrNameFirstCh","attrLocations","ct","nextLocation","ch","_cp","$$","IMPLICIT_END_TAG_REQUIRED","IMPLICIT_END_TAG_REQUIRED_THOROUGHLY","SCOPING_ELEMENTS_HTML","SCOPING_ELEMENTS_HTML_LIST","SCOPING_ELEMENTS_HTML_BUTTON","SCOPING_ELEMENTS_MATHML","SCOPING_ELEMENTS_SVG","TABLE_ROW_CONTEXT","TABLE_BODY_CONTEXT","TABLE_CONTEXT","TABLE_CELLS","OpenElementStack","treeAdapter","tagID","popped","oldElement","newElement","idx","referenceElement","newElementID","insertionIdx","targetIdx","tagNames","targetNS","elementIdx","htmlScope","tn","exclusionId","NOAH_ARK_CAPACITY","EntryType","MARKER","FormattingElementList","neAttrs","candidates","neAttrsLength","neTagName","neNamespaceURI","elementAttrs","neAttrsMap","neAttr","validCandidates","candidate","cAttr","bookmarkIdx","markerIdx","defaultTreeAdapter","namespaceURI","newNode","referenceNode","templateElement","contentElement","publicId","systemId","doctypeNode","mode","prevNode","recipient","recipientAttrsMap","attr","j","textNode","commentNode","endLocation","VALID_DOCTYPE_NAME","VALID_SYSTEM_ID","QUIRKS_MODE_SYSTEM_ID","QUIRKS_MODE_PUBLIC_ID_PREFIXES","QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES","QUIRKS_MODE_PUBLIC_IDS","LIMITED_QUIRKS_PUBLIC_ID_PREFIXES","LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES","hasPrefix","prefixes","isConforming","getDocumentMode","MIME_TYPES","DEFINITION_URL_ATTR","ADJUSTED_DEFINITION_URL_ATTR","SVG_ATTRS_ADJUSTMENT_MAP","XML_ATTRS_ADJUSTMENT_MAP","SVG_TAG_NAMES_ADJUSTMENT_MAP","EXITS_FOREIGN_CONTENT","causesExit","startTagToken","adjustTokenMathMLAttrs","adjustTokenSVGAttrs","adjustedAttrName","adjustTokenXMLAttrs","adjustedAttrEntry","adjustTokenSVGTagName","adjustedTagName","isMathMLTextIntegrationPoint","ns","isHtmlIntegrationPoint","isIntegrationPoint","foreignNS","HIDDEN_INPUT_TYPE","AA_OUTER_LOOP_ITER","AA_INNER_LOOP_ITER","InsertionMode","BASE_LOC","TABLE_STRUCTURE_TAGS","defaultParserOptions","Parser","fragmentContext","scriptHandler","opts","TN","documentMock","rootElement","beforeToken","tid","isTop","currentTagId","isHTML","currentToken","nextTokenizerState","docTypeNode","tmpl","beforeElement","textNodeIdx","endLine","endCol","endOffset","donor","closingToken","ctLoc","endLoc","foreignContent.isIntegrationPoint","listLength","unopenIdx","selectIdx","openElement","characterInForeignContent","tokenInInitialMode","tokenBeforeHtml","tokenBeforeHead","tokenInHead","tokenInHeadNoScript","tokenAfterHead","characterInBody","characterInTable","characterInTableText","tokenInColumnGroup","tokenAfterBody","tokenAfterAfterBody","nullCharacterInForeignContent","appendComment","tokenInTableText","appendCommentToRootHtmlElement","appendCommentToDocument","doctypeInInitialMode","startTagInForeignContent","startTagBeforeHtml","startTagBeforeHead","startTagInHead","startTagInHeadNoScript","startTagAfterHead","startTagInBody","startTagInTable","startTagInCaption","startTagInColumnGroup","startTagInTableBody","startTagInRow","startTagInCell","startTagInSelect","startTagInSelectInTable","startTagInTemplate","startTagAfterBody","startTagInFrameset","startTagAfterFrameset","startTagAfterAfterBody","startTagAfterAfterFrameset","endTagInForeignContent","endTagBeforeHtml","endTagBeforeHead","endTagInHead","endTagInHeadNoScript","endTagAfterHead","endTagInBody","endTagInText","endTagInTable","endTagInCaption","endTagInColumnGroup","endTagInTableBody","endTagInRow","endTagInCell","endTagInSelect","endTagInSelectInTable","endTagInTemplate","endTagAfterBody","endTagInFrameset","endTagAfterFrameset","eofInBody","eofInText","eofInTemplate","stopParsing","unicode.CODE_POINTS","whitespaceCharacterInBody","whitespaceCharacterInTableText","aaObtainFormattingElementEntry","p","formattingElementEntry","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","aaInnerLoop","formattingElement","lastElement","nextElement","elementEntry","counterOverflow","aaRecreateElementFromEntry","aaInsertLastNodeInCommonAncestor","commonAncestor","aaReplaceFormattingElement","callAdoptionAgency","htmlElement","htmlLocation","bodyElement","bodyLocation","doctype.getDocumentMode","doctype.isConforming","templateEndTagInHead","errCode","modeInBody","htmlStartTagInBody","bodyStartTagInBody","framesetStartTagInBody","addressStartTagInBody","numberedHeaderStartTagInBody","preStartTagInBody","formStartTagInBody","inTemplate","listItemStartTagInBody","elementId","plaintextStartTagInBody","buttonStartTagInBody","aStartTagInBody","activeElementEntry","bStartTagInBody","nobrStartTagInBody","appletStartTagInBody","tableStartTagInBody","areaStartTagInBody","isHiddenInput","inputType","inputStartTagInBody","paramStartTagInBody","hrStartTagInBody","imageStartTagInBody","textareaStartTagInBody","xmpStartTagInBody","iframeStartTagInBody","rawTextStartTagInBody","selectStartTagInBody","optgroupStartTagInBody","rbStartTagInBody","rtStartTagInBody","mathStartTagInBody","foreignContent.adjustTokenMathMLAttrs","foreignContent.adjustTokenXMLAttrs","svgStartTagInBody","foreignContent.adjustTokenSVGAttrs","genericStartTagInBody","bodyEndTagInBody","htmlEndTagInBody","addressEndTagInBody","formEndTagInBody","formElement","pEndTagInBody","liEndTagInBody","ddEndTagInBody","numberedHeaderEndTagInBody","appletEndTagInBody","brEndTagInBody","tokenInTable","captionStartTagInTable","colgroupStartTagInTable","colStartTagInTable","tbodyStartTagInTable","tdStartTagInTable","tableStartTagInTable","inputStartTagInTable","formStartTagInTable","savedFosterParentingState","TABLE_VOID_ELEMENTS","unicode.REPLACEMENT_CHARACTER","popUntilHtmlOrIntegrationPoint","foreignContent.causesExit","currentNs","foreignContent.adjustTokenSVGTagName","gfmTagfilterExpression","knownMdxNames","parseOptions","documentMode","handleRaw","unknown","resetTokenizer","p5","stitch","Token.TokenType","createParse5Location","cloneWithoutChildren","fakeRoot","setPoint","node_","extra","tag","html.getTagID","rehypeRaw","ANIMATION_STYLES","TextDisplay","textContent","currentSection","speed","theme","currentAnimation","setCurrentAnimation","useState","revealedText","setRevealedText","useEffect","prev","revealSpeed","currentChar","revealInterval","textStyle","ReactMarkdown","_interopRequireDefault","Pause","default_1","_createSvgIcon","require$$1","_jsxRuntime","require$$2","PlayArrow","NavigationControls","setCurrentSection","totalSections","isPaused","setIsPaused","Button","NavigateBeforeIcon","PlayArrowIcon","PauseIcon","NavigateNextIcon","Send","CommandInput","onCommand","command","setCommand","handleSubmit","e","Box","TextField","SendIcon","Speed","SpeedControl","setSpeed","Typography","SpeedIcon","Slider","newValue","ThemeControl","onThemeChange","handleChange","FormControl","InputLabel","Select","MenuItem","storageService","DEFAULT_THEME","ReaderPage","bookId","useParams","setTextContent","setTheme","setError","chapters","response","savedTheme"],"mappings":"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A,CACX,CACL,CAGE,SAAS+U,IAAW,CAClB,MAAO,CACL,KAAM,OACN,KAAM,KACN,KAAM,KACN,MAAO,EACR,CACL,CAGE,SAASxS,IAAW,CAClB,MAAO,CACL,KAAM,aACN,MAAO,EACR,CACL,CAGE,SAAS9T,IAAa,CACpB,MAAO,CACL,KAAM,aACN,WAAY,GACZ,MAAO,KACP,MAAO,KACP,IAAK,EACN,CACL,CAGE,SAASumB,IAAW,CAClB,MAAO,CACL,KAAM,WACN,SAAU,CAAA,CACX,CACL,CAGE,SAAShG,IAAU,CACjB,MAAO,CACL,KAAM,UAEN,MAAO,EACP,SAAU,CAAA,CACX,CACL,CAGE,SAASiG,IAAY,CACnB,MAAO,CACL,KAAM,OACP,CACL,CAGE,SAAS7lB,IAAO,CACd,MAAO,CACL,KAAM,OACN,MAAO,EACR,CACL,CAGE,SAAS8lB,IAAQ,CACf,MAAO,CACL,KAAM,QACN,MAAO,KACP,IAAK,GACL,IAAK,IACN,CACL,CAGE,SAASL,IAAO,CACd,MAAO,CACL,KAAM,OACN,MAAO,KACP,IAAK,GACL,SAAU,CAAA,CACX,CACL,CAME,SAASjc,GAAK3M,EAAO,CACnB,MAAO,CACL,KAAM,OACN,QAASA,EAAM,OAAS,cACxB,MAAO,KACP,OAAQA,EAAM,QACd,SAAU,CAAA,CACX,CACL,CAME,SAASkpB,GAASlpB,EAAO,CACvB,MAAO,CACL,KAAM,WACN,OAAQA,EAAM,QACd,QAAS,KACT,SAAU,CAAA,CACX,CACL,CAGE,SAASgjB,IAAY,CACnB,MAAO,CACL,KAAM,YACN,SAAU,CAAA,CACX,CACL,CAGE,SAASsG,IAAS,CAChB,MAAO,CACL,KAAM,SACN,SAAU,CAAA,CACX,CACL,CAGE,SAAS/f,IAAO,CACd,MAAO,CACL,KAAM,OACN,MAAO,EACR,CACL,CAGE,SAASmY,IAAgB,CACvB,MAAO,CACL,KAAM,eACP,CACL,CACA,CAUA,SAASha,GAAMklB,EAAG,CAChB,MAAO,CACL,KAAMA,EAAE,KACR,OAAQA,EAAE,OACV,OAAQA,EAAE,MACX,CACH,CAOA,SAASrB,GA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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,218,219,221,223]}